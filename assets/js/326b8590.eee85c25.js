"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[8477],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>m});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),u=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?t.createElement(g,o(o({ref:a},c),{},{components:n})):t.createElement(g,o({ref:a},c))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},536:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var t=n(7462),r=(n(7294),n(3905));const i={sidebar_position:13},o="Autenticaci\xf3n JWT y Identity Core",s={unversionedId:"C--/Identity",id:"C--/Identity",title:"Autenticaci\xf3n JWT y Identity Core",description:"\xbfQu\xe9 es un Json Web Token?",source:"@site/docs/C--/Identity.md",sourceDirName:"C--",slug:"/C--/Identity",permalink:"/documentacion/docs/C--/Identity",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/C--/Identity.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"C",previous:{title:"Autenticaci\xf3n JWT y Refresh Token en API REST",permalink:"/documentacion/docs/C--/autenticacion"}},l={},u=[{value:"\xbfQu\xe9 es un Json Web Token?",id:"qu\xe9-es-un-json-web-token",level:2},{value:"\xbfCuando deber\xedas utilizar Json Web Tokens?",id:"cuando-deber\xedas-utilizar-json-web-tokens",level:4},{value:"\xbfQu\xe9 estructura tiene un JWT?",id:"qu\xe9-estructura-tiene-un-jwt",level:4},{value:"Header",id:"header",level:4},{value:"Payload",id:"payload",level:4},{value:"Signature",id:"signature",level:4},{value:"Juntando todos",id:"juntando-todos",level:4},{value:"C\xf3mo funcionan los JWT",id:"c\xf3mo-funcionan-los-jwt",level:2},{value:"\xbfY el c\xf3digo? Probemos con ASP.NET",id:"y-el-c\xf3digo-probemos-con-aspnet",level:2},{value:"1- Creamos el proyecto",id:"1--creamos-el-proyecto",level:4},{value:"2- Paquetes Nuget",id:"2--paquetes-nuget",level:4},{value:"3- Configuraci\xf3n",id:"3--configuraci\xf3n",level:4},{value:"4- Clase ApplicationUser",id:"4--clase-applicationuser",level:4},{value:"5- DbContext",id:"5--dbcontext",level:4},{value:"6- Roles",id:"6--roles",level:4},{value:"7- Clases para el login y register",id:"7--clases-para-el-login-y-register",level:4},{value:"8- Response",id:"8--response",level:4},{value:"9- Controlador",id:"9--controlador",level:4},{value:"10- Configurar servicios",id:"10--configurar-servicios",level:4},{value:"11- Controlador WeatherForecast",id:"11--controlador-weatherforecast",level:4},{value:"12- Crear BD",id:"12--crear-bd",level:4},{value:"13- Probamos",id:"13--probamos",level:4},{value:"14- Implementamos los roles",id:"14--implementamos-los-roles",level:4},{value:"Explicaci\xf3n de Identity",id:"explicaci\xf3n-de-identity",level:2}],c={toc:u};function d(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"autenticaci\xf3n-jwt-y-identity-core"},"Autenticaci\xf3n JWT y Identity Core"),(0,r.kt)("h2",{id:"qu\xe9-es-un-json-web-token"},"\xbfQu\xe9 es un Json Web Token?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un JSON Web Token (JWT) es un est\xe1ndar (RFC 7519) que define una forma segura y compacta de transmitir informaci\xf3n entre dos entidades en forma de un objeto JSON."),(0,r.kt)("li",{parentName:"ul"},"Esta informaci\xf3n puede ser verificada y es confiable ya que est\xe1 firmada digitalmente. Los JWTs pueden ser firmados utilizando una llave privada (con un algoritmo HMAC) o con llaves p\xfablicas y privadas utilizando RSA o ECDSA.")),(0,r.kt)("h4",{id:"cuando-deber\xedas-utilizar-json-web-tokens"},"\xbfCuando deber\xedas utilizar Json Web Tokens?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Autorizaci\xf3n: Este es el caso de uso m\xe1s com\xfan de los JWTs. Una vez que un usuario ha iniciado sesi\xf3n, cada llamada subsecuente al servicio incluir\xe1 el JWT, permitiendo al usuario acceder a rutas, servicios o recursos que solo est\xe1n permitidos con su debido token. "),(0,r.kt)("li",{parentName:"ul"},"Intercambio de Informaci\xf3n: Los JWTs son \xfatiles tambi\xe9n para transmitir informaci\xf3n entre dos entidades. Debido a que los JWTs pueden estar firmados \u2014 por ejemplo, utilizando una llave p\xfablica/privada \u2014 podemos estar seguros que quien manda la informaci\xf3n es verdaderamente \xe9l quien lo manda. Adicionalmente, la firma es calculada utilizando el encabezado del JWT y el contenido (payload) por lo que tambi\xe9n estamos seguros que el contenido del JWT no fue alterado.")),(0,r.kt)("h4",{id:"qu\xe9-estructura-tiene-un-jwt"},"\xbfQu\xe9 estructura tiene un JWT?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un JWT com\xfanmente tiene la siguiente forma:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"xxxxx.yyyyy.zzzzz"))),(0,r.kt)("li",{parentName:"ul"},"Un JWT est\xe1 separado por puntos ( . ) en tres partes, las cuales son:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Encabezado (header)."),(0,r.kt)("li",{parentName:"ul"},"Contenido (payload)."),(0,r.kt)("li",{parentName:"ul"},"Firma (signature).")))),(0,r.kt)("h4",{id:"header"},"Header"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El encabezado t\xedpicamente consiste de dos partes: el tipo de token (que ser\xe1 JWT) y el algoritmo que se est\xe1 usando en la firma, que puede ser HMAC SHA256 o RSA."),(0,r.kt)("li",{parentName:"ul"},"Por ejemplo:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "alg": "HS256",\n  "typ": "JWT"\n}\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Despu\xe9s, este JSON se codifica en Base64URL para formar parte del primer segmento del JWT.")),(0,r.kt)("h4",{id:"payload"},"Payload"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"La segunda parte del JWT es el contenido que se transmite o certifica (payload), el cual contiene una serie de claims."),(0,r.kt)("li",{parentName:"ul"},"Los Claims son afirmaciones sobre una entidad (usualmente, el usuario) y brindan informaci\xf3n adicional. "),(0,r.kt)("li",{parentName:"ul"},"Hay tres tipos de claims: registrados, p\xfablicos y privados:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Claims registrados: Son un conjunto de claims predefinidos que no son obligatorios, pero s\xed recomendados, para proveer un conjunto de claims interoperables. Algunos de ellos son: iss (issuer), exp (tiempo de expiraci\xf3n), sub (subject), aud (audience), entre otros.  N\xf3tese que los nombres de los claims son de tres letras por la misma intenci\xf3n de mantener el JWT de tama\xf1o reducido."),(0,r.kt)("li",{parentName:"ul"},"Claims p\xfablicos: Estos pueden ser definidos como cada persona desee, pero para evitar colisiones de nombres y mantener un est\xe1ndar (ya que puede usarse en distintos servicios), se utiliza una lista ",(0,r.kt)("a",{parentName:"li",href:"https://www.iana.org/assignments/jwt/jwt.xhtml"},"IANA JSON Web Token Registry"),"."),(0,r.kt)("li",{parentName:"ul"},"Claims privados: Estos claims son personalizados por cada persona que implemente los JWTs y al igual que los p\xfablicos, para evitar colisiones es recomendable utilizar un formato URL con alg\xfan namespace y as\xed asegurar que son \xfanicos."))),(0,r.kt)("li",{parentName:"ul"},"Por ejemplo, un claim que guarda los roles de ASP.NET Core tendr\xeda el siguiente nombre: ",(0,r.kt)("a",{parentName:"li",href:"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"},"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"),".")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un ejemplo de un payload ser\xeda el siguiente:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sub": "1234567890",\n  "name": "John Doe",\n  "admin": true\n}\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Y al igual que el header, este segmento se codifica en Base64Url.")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Aunque los JWT est\xe9n firmados, solo est\xe1n protegidos para evitar falsificaciones (editar el payload) pero de igual forma, toda la informaci\xf3n en el payload es visible para cualquiera. NO INCLUYAS informaci\xf3n sensible en el payload al menos que est\xe9 encriptada.")))),(0,r.kt)("h4",{id:"signature"},"Signature"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Para crear la firma debemos de tomar el header codificado, el payload codificado, una llave secreta, el algoritmo especificado en el header y firmar todo eso."),(0,r.kt)("li",{parentName:"ul"},"Por ejemplo, si vamos a utilizar el algoritmo HMAC SHA256, la firma ser\xe1 creada de la siguiente forma:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'HMACSHA256(base64UrlEncode(header) + "." + base64UrlEncode(payload), secret)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"La firma se usar\xe1 para verificar que el mensaje no ha cambiado mientras viaja por la red, y en caso de ser tokens firmados por una llave privada de un certificado, tambi\xe9n se puede verificar el emisor.")),(0,r.kt)("h4",{id:"juntando-todos"},"Juntando todos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Al final, tendremos tres cadenas de texto codificadas en Base64-URL separadas por puntos y se podr\xe1n incluir en solicitudes HTTP o contenido HTML sin ning\xfan problema. Esto es una forma mucho m\xe1s compacta comparado a otros est\xe1ndares como SAML que utiliza XML."),(0,r.kt)("li",{parentName:"ul"},"Al final, tendr\xedamos un JWT de la siguiente forma:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/practicaldev/image/fetch/s--KYV4iGFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s02hlfzjv4pwo5pro1q.png",alt:"JWT"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Si quieres jugar y generar tus propios JWT de prueba, puedes visitar ",(0,r.kt)("a",{parentName:"li",href:"https://jwt.io/"},"jwt.io"),".")),(0,r.kt)("h2",{id:"c\xf3mo-funcionan-los-jwt"},"C\xf3mo funcionan los JWT"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cuando un usuario ha sido autenticado, el servicio deber\xe1 regresar un JSON Web Token para ser usado como sus credenciales. Dado que esto es usado para autorizar el usuario, debes de considerar  muy bien donde guardar el token, y eliminarlo lo m\xe1s pronto posible si ya no se requiere."),(0,r.kt)("li",{parentName:"ul"},"Cuando un usuario quiere acceder a contenido restringido en una ruta protegida, se debe de incluir el token en el HTTP Header Authorization y utilizando el esquema Bearer."),(0,r.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Authorization: Bearer <token>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generalmente en Web APIs (y como lo haremos m\xe1s adelante) que son aplicaciones stateless, siempre requerir\xe1 que el token vaya incluido en el encabezado Authorization. El servicio verificar\xe1 lo necesario para determinar si es un token v\xe1lido o no, y si este es v\xe1lido leer\xe1 su informaci\xf3n (los claims) y lo usar\xe1 en la solicitud de ser necesario."),(0,r.kt)("li",{parentName:"ul"},"Esto tambi\xe9n reduce las consultas a bases de datos para leer informaci\xf3n del usuario, ya que el token puede contener informaci\xf3n com\xfan para poder operar (como username, email, roles, etc)."),(0,r.kt)("li",{parentName:"ul"},"Dado que el token va incluido en el header, no habr\xe1 problemas con el Cross-Origin Resource Sharing (CORS) ya que no se utilizan cookies (las cookies son por dominio)."),(0,r.kt)("li",{parentName:"ul"},"El siguiente diagrama muestra c\xf3mo se podr\xeda utilizar una autorizaci\xf3n y autenticaci\xf3n por medio de JWT:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/practicaldev/image/fetch/s--pB1VFTaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld6jbupjkpqxr0w0izyl.png",alt:"diagrama"})),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"La aplicaci\xf3n cliente solicita autorizaci\xf3n al servidor."),(0,r.kt)("li",{parentName:"ol"},"Cuando se autoriza el acceso, el servidor de autorizaci\xf3n regresa el access token a la aplicaci\xf3n cliente."),(0,r.kt)("li",{parentName:"ol"},"La aplicaci\xf3n cliente usa el access token para acceder a recursos protegidos (como una API).")),(0,r.kt)("h2",{id:"y-el-c\xf3digo-probemos-con-aspnet"},"\xbfY el c\xf3digo? Probemos con ASP.NET"),(0,r.kt)("h4",{id:"1--creamos-el-proyecto"},"1- Creamos el proyecto"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Creamos un proyecto ASP.NET Core Web API con controladores.")),(0,r.kt)("h4",{id:"2--paquetes-nuget"},"2- Paquetes Nuget"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Instalamos los siguientes Paquetes Nuget:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Microsoft.AspNetCore.Identity.EntityFrameworkCore"),(0,r.kt)("li",{parentName:"ul"},"Microsoft.AspNetCore.Authentication.JwtBearer"),(0,r.kt)("li",{parentName:"ul"},"Microsoft.EntityFrameworkCore.SqlServer"),(0,r.kt)("li",{parentName:"ul"},"Microsoft.EntityFrameWorkCore.Tools")))),(0,r.kt)("h4",{id:"3--configuraci\xf3n"},"3- Configuraci\xf3n"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modificamos el appsettings.json:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Logging": {\n    "LogLevel": {\n      "Default": "Information",\n      "Microsoft": "Warning",\n      "Microsoft.Hosting.Lifetime": "Information"\n    }\n  },\n  "AllowedHosts": "*",\n  "ConnectionStrings": {\n    "ConnStr": " Server=localhost;Database=AutenticacionPrueba;TrustServerCertificate=true;Trusted_Connection=true;MultipleActiveResultSets=true"\n  },\n  "JWT": {\n    "ValidAudience": "http://localhost:4200",\n    "ValidIssuer": "http://localhost:61955",\n    "Secret": "ByYM000OLlMQG6VVVp1OH7Xzyr7gHuw1qvUC5dcGt3SNM"\n  }\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Agregamos una cadena de conexi\xf3n de base de datos y tambi\xe9n agregamos una audiencia v\xe1lida, un emisor v\xe1lido y una clave secreta para la autenticaci\xf3n JWT en el archivo de configuraci\xf3n.")))),(0,r.kt)("h4",{id:"4--clase-applicationuser"},"4- Clase ApplicationUser"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Cree una clase "ApplicationUser" dentro de una nueva carpeta "Authentication" que heredar\xe1 la clase IdentityUser. '),(0,r.kt)("li",{parentName:"ul"},"La clase IdentityUser es parte del marco de Microsoft Identity."),(0,r.kt)("li",{parentName:"ul"},'Crearemos todos los archivos relacionados con la autenticaci\xf3n dentro de la carpeta " Authentication".'),(0,r.kt)("li",{parentName:"ul"},"ApplicationUser.cs:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using Microsoft.AspNetCore.Identity;\n\nnamespace Ejemplo.Authentication\n{\n    public class ApplicationUser : IdentityUser\n    {\n    }\n}\n\n")),(0,r.kt)("h4",{id:"5--dbcontext"},"5- DbContext"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Podemos crear la clase "ApplicationDbContext" (en la carpeta Authentication) y agregar el siguiente c\xf3digo:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using Microsoft.AspNetCore.Identity.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore;\n\nnamespace Ejemplo.Authentication\n{\n    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>\n    {\n        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options)\n        {\n\n        }\n        protected override void OnModelCreating(ModelBuilder builder)\n        {\n            base.OnModelCreating(builder);\n        }\n\n    }\n}\n\n")),(0,r.kt)("h4",{id:"6--roles"},"6- Roles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Cree una clase est\xe1tica "UserRoles" (en la carpeta Authentication) y agregue los siguientes valores:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Ejemplo.Authentication\n{\n    public static class UserRoles\n    {\n        public const string Admin = "Admin";\n        public const string User = "User";\n    }\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},'Hemos agregado dos valores constantes "Administrador" y "Usuario" como roles. Puede agregar los roles que desee.')))),(0,r.kt)("h4",{id:"7--clases-para-el-login-y-register"},"7- Clases para el login y register"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Cree la clase "RegisterModel\u201d (en la misma carpeta) para el registro de nuevos usuarios:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.ComponentModel.DataAnnotations;\n\nnamespace Ejemplo.Authentication\n{\n    public class RegisterModel\n    {\n        [Required(ErrorMessage = "El nombre de usuario es obligatorio")]\n        public string Username { get; set; }\n\n        [EmailAddress]\n        [Required(ErrorMessage = "El email es obligatorio")]\n        public string Email { get; set; }\n\n        [Required(ErrorMessage = "El password es obligatorio")]\n        public string Password { get; set; }\n    }\n}\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Cree la clase " LoginModel\u201d (en la misma carpeta) para el inicio de sesi\xf3n del usuario:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.ComponentModel.DataAnnotations;\n\nnamespace Ejemplo.Authentication\n{\n    public class LoginModel\n    {\n        [Required(ErrorMessage = "El nombre de usuario es obligatorio")]\n        public string Username { get; set; }\n\n        [Required(ErrorMessage = "El password es obligatorio")]\n        public string Password { get; set; }\n    }\n}\n\n')),(0,r.kt)("h4",{id:"8--response"},"8- Response"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Podemos crear una clase "Response" (en la misma carpeta) para devolver el valor de respuesta despu\xe9s del registro y el inicio de sesi\xf3n del usuario. Tambi\xe9n devolver\xe1 mensajes de error si la solicitud falla.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace Ejemplo.Authentication\n{\n    public class Response\n    {\n        public string Status { get; set; }\n        public string Message { get; set; }\n        public object[]? Error { get; set; } = null;\n    }\n}\n\n")),(0,r.kt)("h4",{id:"9--controlador"},"9- Controlador"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Podemos crear un controlador API en blanco llamado "AuthenticateController" dentro de la carpeta "Controllers" y agregar el siguiente c\xf3digo:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using Ejemplo.Authentication;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Identity;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.IdentityModel.Tokens;\nusing System.IdentityModel.Tokens.Jwt;\nusing System.Security.Claims;\nusing System.Text;\n\nnamespace Ejemplo.Controllers\n{\n    [Route("api/[controller]")]\n    [ApiController]\n    public class AuthenticateController : ControllerBase\n    {\n        private readonly UserManager<ApplicationUser> userManager;\n        private readonly RoleManager<IdentityRole> roleManager;\n        private readonly IConfiguration _configuration;\n\n        public AuthenticateController(UserManager<ApplicationUser> userManager, RoleManager<IdentityRole> roleManager, IConfiguration configuration)\n        {\n            this.userManager = userManager;\n            this.roleManager = roleManager;\n            _configuration = configuration;\n        }\n\n        [HttpPost]\n        [Route("login")]\n        public async Task<IActionResult> Login([FromBody] LoginModel model)\n        {\n            var user = await userManager.FindByNameAsync(model.Username);\n            if (user != null && await userManager.CheckPasswordAsync(user, model.Password))\n            {\n                var userRoles = await userManager.GetRolesAsync(user);\n\n                var authClaims = new List<Claim>\n                {\n                    new Claim(ClaimTypes.Name, user.UserName),\n                    new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\n                };\n\n                foreach (var userRole in userRoles)\n                {\n                    authClaims.Add(new Claim(ClaimTypes.Role, userRole));\n                }\n\n                var authSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["JWT:Secret"]));\n\n                var token = new JwtSecurityToken(\n                    issuer: _configuration["JWT:ValidIssuer"],\n                    audience: _configuration["JWT:ValidAudience"],\n                    expires: DateTime.Now.AddHours(3),\n                    claims: authClaims,\n                    signingCredentials: new SigningCredentials(authSigningKey, SecurityAlgorithms.HmacSha256)\n                    );\n\n                return Ok(new\n                {\n                    token = new JwtSecurityTokenHandler().WriteToken(token),\n                    expiration = token.ValidTo\n                });\n            }\n            return Unauthorized();\n        }\n\n        [HttpPost]\n        [Route("register")]\n        public async Task<IActionResult> Register([FromBody] RegisterModel model)\n        {\n            var userExists = await userManager.FindByNameAsync(model.Username);\n            if (userExists != null)\n                return StatusCode(StatusCodes.Status500InternalServerError, new Response { Status = "Error", Message = "User already exists!" });\n\n            ApplicationUser user = new ApplicationUser()\n            {\n                Email = model.Email,\n                SecurityStamp = Guid.NewGuid().ToString(),\n                UserName = model.Username\n            };\n            var result = await userManager.CreateAsync(user, model.Password);\n            if (!result.Succeeded)\n                return StatusCode(StatusCodes.Status500InternalServerError, new Response { Status = "Error", Message = "User creation failed! Please check user details and try again."  , \n                Error = result.Errors.ToArray()});\n\n            return Ok(new Response { Status = "Success", Message = "User created successfully!" });\n        }\n        [HttpPost]\n        [Route("register-admin")]\n        public async Task<IActionResult> RegisterAdmin([FromBody] RegisterModel model)\n        {\n            var userExists = await userManager.FindByNameAsync(model.Username);\n            if (userExists != null)\n                return StatusCode(StatusCodes.Status500InternalServerError, new Response { Status = "Error", Message = "User already exists!" });\n\n            ApplicationUser user = new ApplicationUser()\n            {\n                Email = model.Email,\n                SecurityStamp = Guid.NewGuid().ToString(),\n                UserName = model.Username\n            };\n            var result = await userManager.CreateAsync(user, model.Password);\n            if (!result.Succeeded)\n                return StatusCode(StatusCodes.Status500InternalServerError, new Response { Status = "Error", Message = "User creation failed! Please check user details and try again." });\n\n            if (!await roleManager.RoleExistsAsync(UserRoles.Admin))\n                await roleManager.CreateAsync(new IdentityRole(UserRoles.Admin));\n            if (!await roleManager.RoleExistsAsync(UserRoles.User))\n                await roleManager.CreateAsync(new IdentityRole(UserRoles.User));\n\n            if (await roleManager.RoleExistsAsync(UserRoles.Admin))\n            {\n                await userManager.AddToRoleAsync(user, UserRoles.Admin);\n            }\n\n            return Ok(new Response { Status = "Success", Message = "User created successfully!" });\n        }\n    }\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},'Hemos agregado tres m\xe9todos "Login", "Register" y "RegisterAdmin" dentro de la clase del controlador. Register y RegisterAdmin son casi iguales, pero el m\xe9todo de RegisterAdmin se utilizar\xe1 para crear un usuario con funci\xf3n de administrador. En el m\xe9todo de inicio de sesi\xf3n, hemos devuelto un token JWT despu\xe9s de iniciar sesi\xf3n correctamente.')))),(0,r.kt)("h4",{id:"10--configurar-servicios"},"10- Configurar servicios"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Agregamos los siguientes cambios en la clase \u201cProgam\u201d para a\xf1adir servicios y que las instancias de clases se generen en el constructor del controlador y de los servicios (si es necesario):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using Ejemplo.Authentication;\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\nusing Microsoft.AspNetCore.Identity;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Options;\nusing Microsoft.IdentityModel.Tokens;\nusing System.Text;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n\nbuilder.Services.AddControllers();\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\nbuilder.Services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(builder.Configuration.GetConnectionString("ConnStr")));\n\nbuilder.Services.AddIdentity<ApplicationUser, IdentityRole>()\n              .AddEntityFrameworkStores<ApplicationDbContext>()\n              .AddDefaultTokenProviders();\nbuilder.Services.AddAuthentication(options =>\n{\n    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\n    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\n    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\n})\n    .AddJwtBearer(options =>\n    {\n        options.SaveToken = true;\n        options.RequireHttpsMetadata = false;\n        options.TokenValidationParameters = new TokenValidationParameters()\n        {\n            ValidateIssuer = true,\n            ValidateAudience = true,\n            ValidAudience = builder.Configuration["JWT:ValidAudience"],\n            ValidIssuer = builder.Configuration["JWT:ValidIssuer"],\n            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration["JWT:Secret"]))\n        };\n    });\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\napp.UseAuthentication();\napp.UseAuthorization();\napp.MapControllers();\napp.Run();\n\n')),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Si invertirnos el orden de las siguientes lineas, puede generarse un conflicto:")),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"app.UseAuthentication();\napp.UseAuthorization();\n")))),(0,r.kt)("h4",{id:"11--controlador-weatherforecast"},"11- Controlador WeatherForecast"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Podemos agregar el atributo "Authorize" dentro del controlador "WeatherForecast":')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'  [Authorize]\n    [ApiController]\n    [Route("[controller]")]\n    public class WeatherForecastController : ControllerBase\n    {\n        private static readonly string[] Summaries = new[]\n        {\n        "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n    };\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Para usar todos los endpoint del controlador, debemos estar autorizados.")))),(0,r.kt)("h4",{id:"12--crear-bd"},"12- Crear BD"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Debemos crear una base de datos y las tablas requeridas antes de ejecutar la aplicaci\xf3n. Para esto debemos ejecutar una emigraci\xf3n."),(0,r.kt)("li",{parentName:"ul"},"En la consola de administrador de paquetes, ejecutamos los siguientes comandos:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"add-migration Initial\nupdate-database\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Si verificas la base de datos en SQL Server, puedes ver que las siguientes tablas se crearon en la base de datos:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/04%20Identity%20Framework.png",alt:"Tablas"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El framework de identidad utiliza las siete tablas anteriores para gestionar la autenticaci\xf3n y la autorizaci\xf3n.")),(0,r.kt)("h4",{id:"13--probamos"},"13- Probamos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ahora si ejecutamos la aplicaci\xf3n y intentamos acceder al m\xe9todo get del controlador WeatherForecast obtendremos un 401.")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"A la petici\xf3n la pod\xe9s hacer por swagger o por postman."),(0,r.kt)("li",{parentName:"ul"},"Como conseguir la URL en swagger para realizar la petici\xf3n en postman:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"En el apartado de \u201cRequest URL\u201d al realizar la petici\xf3n (la URL est\xe1 completa)."),(0,r.kt)("li",{parentName:"ul"},"Alado del verbo HTTP (No especifica el puerto ni el dominio).")))))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/GETPOSTMAN_.jpg",alt:"Error"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hemos recibido un error 401 no autorizado. Porque hemos agregado el atributo Authorize a todo el controlador. Debemos proporcionar un token v\xe1lido a trav\xe9s del encabezado de la solicitud para acceder a este controlador y a los m\xe9todos dentro del controlador."),(0,r.kt)("li",{parentName:"ul"},"Podemos crear un nuevo usuario haciendo una petici\xf3n a http://localhost:5222/api/Authenticate/register con el siguiente body en json:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "username": "usuario",\n  "email": "usuario@gmail.com",\n  "password": "Password@2023"\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Al usar identity , por defecto viene con un conjunto de validaciones para la contrase\xf1a. Por ejemplo: Al menos una letra debe estar en may\xfascula."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/api/microsoft.aspnetcore.identity.identityerrordescriber?view=aspnetcore-7.0"},"Lista de validaciones")," (las que dicen \u201ces necesaria para la directiva de contrase\xf1as\u201d son las que viene por defecto\u201d). ")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Podemos usar las credenciales de usuario anteriores para iniciar sesi\xf3n y obtener un token JWT v\xe1lido."),(0,r.kt)("li",{parentName:"ul"},"Para esto, hacemos una petici\xf3n a http://localhost:5222/api/Authenticate/login con el siguiente body:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "username": "usuario",\n  "password": "Password@2023"\n}\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Recibimos un token despu\xe9s de iniciar sesi\xf3n correctamente con las credenciales anteriores."),(0,r.kt)("li",{parentName:"ul"},"Podemos pasar el valor del token en la pesta\xf1a de autorizaci\xf3n de postman (el type debe ser Bearer Token) y llamar nuevamente al m\xe9todo get del controlador WeatherForecast.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/PostmanFOrecast%20(1).jpg",alt:"resultado"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Esta vez, hemos recibido correctamente los valores del controlador.")),(0,r.kt)("h4",{id:"14--implementamos-los-roles"},"14- Implementamos los roles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ahora modifiquemos el controlador WeatherForecast para que la autorizaci\xf3n se base en roles:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/11%20Role%20based%20Roles.jpgAuthorization%20(1).png",alt:"Roles"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ahora, solo los usuarios con funci\xf3n de administrador pueden acceder a este controlador y a sus m\xe9todos."),(0,r.kt)("li",{parentName:"ul"},"Podemos intentar acceder al controlador de  WeatherForecast  con el mismo token nuevamente en la herramienta Postman.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/WeatherPostman%20(1).jpg",alt:"Error"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hemos recibido un error 403 prohibido ahora. Aunque estamos pasando un token v\xe1lido, no tenemos privilegios suficientes para acceder al controlador. Para acceder a este controlador, el usuario debe tener un rol de administrador. El usuario actual es un usuario normal y no tiene ning\xfan permiso de funci\xf3n de administrador."),(0,r.kt)("li",{parentName:"ul"},'Podemos crear un nuevo usuario con rol de administrador. Ya tenemos un m\xe9todo "register-admin" en el controlador de autenticaci\xf3n para el mismo prop\xf3sito.'),(0,r.kt)("li",{parentName:"ul"},"Hacemos una petici\xf3n post a http://localhost:5222/api/Authenticate/register-admin con el siguiente body:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "username": "usuarioAdministrador",\n  "email": "administrador@gmail.com",\n  "password": "Password@2023"\n}\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hacemos el login con este usuario y intentamos acceder al controlador WeatherForecast:")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.c-sharpcorner.com/article/jwt-authentication-and-authorization-in-net-6-0-with-identity-framework/Images/PostmanHEader%20(1).jpg",alt:"Respuesta"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Nuevamente hemos recibido exitosamente los valores del controlador WeatherForecast.")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Podemos ver la informaci\xf3n del token y otros detalles utilizando el sitio ",(0,r.kt)("a",{parentName:"li",href:"https://jwt.io/"},"jwt.io"),".")))),(0,r.kt)("h2",{id:"explicaci\xf3n-de-identity"},"Explicaci\xf3n de Identity"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El DbContext  que creamos en el ",(0,r.kt)("a",{parentName:"li",href:"#5--dbcontext"},"paso 5")," se utilizara para crear la BD que gestiona los usuarios y sus roles. Se diferencia de los dbcontext anteriores ya que este se crea mediante Identity. El parametro de tipo generico de IdentityDbContext es una clase que hereda de IdentityUser."),(0,r.kt)("li",{parentName:"ul"},"En el ",(0,r.kt)("a",{parentName:"li",href:"#10--configurar-servicios"},"paso 10")," , configuramos Identity a traves del siguiente c\xf3digo:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"builder.Services.AddIdentity<ApplicationUser, IdentityRole>()\n              .AddEntityFrameworkStores<ApplicationDbContext>()\n              .AddDefaultTokenProviders();\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Con el c\xf3digo anterior podemos ",(0,r.kt)("a",{parentName:"li",href:"#9--controlador"},"inyectar como depedencia en el controlador del paso 9")," , los siguientes servicios:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"  private readonly UserManager<ApplicationUser> userManager;\n        private readonly RoleManager<IdentityRole> roleManager;\n   \n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},'Con este framework , inyectamos clases como dependencias y no "interfaces".')))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RoleManager sirve para administrar los roles y trabaja con la BD que creamos. "),(0,r.kt)("li",{parentName:"ul"},"UserManager sirve para administrar los usuarios y trabaja con la BD que creamos.")))}d.isMDXComponent=!0}}]);