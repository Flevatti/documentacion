"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[596],{5680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>g});var o=n(6540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,o,i=function(e,a){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var t=o.createContext({}),c=function(e){var a=o.useContext(t),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},d=function(e){var a=c(e.components);return o.createElement(t.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,t=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,g=p["".concat(t,".").concat(m)]||p[m]||u[m]||r;return n?o.createElement(g,s(s({ref:a},d),{},{components:n})):o.createElement(g,s({ref:a},d))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var t in a)hasOwnProperty.call(a,t)&&(l[t]=a[t]);l.originalType=e,l[p]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3192:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>t,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(8168),i=(n(6540),n(5680));const r={sidebar_position:10},s="Extra #03",l={unversionedId:"Node/extra03",id:"Node/extra03",title:"Extra #03",description:"03",source:"@site/docs/Node/extra03.md",sourceDirName:"Node",slug:"/Node/extra03",permalink:"/documentacion/docs/Node/extra03",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Node/extra03.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"Node",previous:{title:"Extra #02",permalink:"/documentacion/docs/Node/extra02"},next:{title:"Arquitecturas",permalink:"/documentacion/docs/Node/arquitecturas"}},t={},c=[{value:"Uso de la Carpeta &quot;Service&quot;",id:"uso-de-la-carpeta-service",level:2},{value:"Funci\xf3n y Uso de la Carpeta &quot;Service&quot;",id:"funci\xf3n-y-uso-de-la-carpeta-service",level:4},{value:"Ejemplo de Estructura de Proyecto con Carpeta &quot;Service&quot;",id:"ejemplo-de-estructura-de-proyecto-con-carpeta-service",level:4},{value:"Modelo Vista Controlador (MVC)",id:"modelo-vista-controlador-mvc",level:2},{value:"Modelo",id:"modelo",level:4},{value:"Vista",id:"vista",level:4},{value:"Controlador",id:"controlador",level:4},{value:"Analog\xeda",id:"analog\xeda",level:4},{value:"Ejemplo de Implementaci\xf3n en Node.js con Express.js",id:"ejemplo-de-implementaci\xf3n-en-nodejs-con-expressjs",level:4},{value:"Microfrontends",id:"microfrontends",level:2},{value:"Componentes Independientes",id:"componentes-independientes",level:4},{value:"Comunicaci\xf3n y Coordinaci\xf3n",id:"comunicaci\xf3n-y-coordinaci\xf3n",level:4},{value:"Ejemplo de Implementaci\xf3n",id:"ejemplo-de-implementaci\xf3n",level:4},{value:"Analog\xeda",id:"analog\xeda-1",level:4},{value:"Ejemplo de Implementaci\xf3n",id:"ejemplo-de-implementaci\xf3n-1",level:4}],d={toc:c},p="wrapper";function u(e){let{components:a,...n}=e;return(0,i.yg)(p,(0,o.A)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"extra-03"},"Extra #03"),(0,i.yg)("h2",{id:"uso-de-la-carpeta-service"},'Uso de la Carpeta "Service"'),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'La carpeta "service" en proyectos de Node.js y Express.js es una convenci\xf3n com\xfan utilizada para organizar el c\xf3digo relacionado con la l\xf3gica de negocio y los servicios de la aplicaci\xf3n. La idea principal es mantener el c\xf3digo modular y separado por responsabilidades, lo que facilita el mantenimiento y la escalabilidad de la aplicaci\xf3n.')),(0,i.yg)("h4",{id:"funci\xf3n-y-uso-de-la-carpeta-service"},'Funci\xf3n y Uso de la Carpeta "Service"'),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'L\xf3gica de Negocio: Los archivos dentro de la carpeta "service" contienen funciones y m\xe9todos que encapsulan la l\xf3gica de negocio de la aplicaci\xf3n. Esta l\xf3gica puede incluir c\xe1lculos, validaciones, transformaciones de datos y cualquier otra operaci\xf3n que no pertenezca directamente a los controladores ni a la capa de datos.')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Capa de datos")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"La capa de datos se refiere a la parte de la aplicaci\xf3n que interact\xfaa directamente con la base de datos o cualquier fuente de datos. Es responsable de almacenar, recuperar y manipular los datos. Esto puede incluir modelos o repositorios que realizan operaciones CRUD (crear, leer, actualizar y eliminar) sobre la base de datos."),(0,i.yg)("li",{parentName:"ul"},"La capa de datos se encarga de manejar c\xf3mo esos datos se almacenan o se obtienen de manera eficiente.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"L\xf3gica de negocio")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},'La l\xf3gica de negocio es el conjunto de reglas, procesos y decisiones que definen c\xf3mo una aplicaci\xf3n o sistema debe funcionar para cumplir con los objetivos de la empresa o el prop\xf3sito espec\xedfico del software. Representa el "qu\xe9" y el "c\xf3mo":',(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},'"Qu\xe9": Son las acciones que la aplicaci\xf3n necesita realizar. Por ejemplo, en una tienda en l\xednea, el "qu\xe9" podr\xeda ser calcular el precio total de una compra, aplicar un descuento, o verificar el stock. '),(0,i.yg)("li",{parentName:"ul"},'"C\xf3mo": Es la manera en que esas acciones se llevan a cabo. Siguiendo con el ejemplo de la tienda en l\xednea, el "c\xf3mo" ser\xeda la f\xf3rmula para calcular el precio total, las reglas espec\xedficas para aplicar el descuento (cu\xe1ndo y cu\xe1nto), y los pasos para comprobar si hay suficiente stock disponible.'),(0,i.yg)("li",{parentName:"ul"},"Es decir, la l\xf3gica de negocio define qu\xe9 tareas son importantes para el negocio y c\xf3mo deben resolverse en el sistema."))),(0,i.yg)("li",{parentName:"ul"},"En una aplicaci\xf3n, la l\xf3gica de negocio se encarga de:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Procesar datos: Realiza c\xe1lculos, validaciones, transformaciones o combinaciones de datos que sean necesarios para el correcto funcionamiento de la aplicaci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Aplicar reglas espec\xedficas: Estas son las reglas o condiciones particulares de la empresa o del contexto de la aplicaci\xf3n. Por ejemplo, en un sistema bancario, la l\xf3gica de negocio puede incluir restricciones sobre la cantidad de dinero que se puede transferir entre cuentas."),(0,i.yg)("li",{parentName:"ul"},"Coordinar otras capas: La l\xf3gica de negocio es la encargada de coordinar la interacci\xf3n entre la capa de presentaci\xf3n (front-end) y la capa de datos (base de datos)."),(0,i.yg)("li",{parentName:"ul"},"Por ejemplo, si se trata de una aplicaci\xf3n de ventas en l\xednea, la l\xf3gica de negocio podr\xeda incluir reglas sobre c\xf3mo calcular descuentos, c\xf3mo aplicar impuestos, verificar inventarios y procesar pagos."))),(0,i.yg)("li",{parentName:"ul"},"En resumen, la l\xf3gica de negocio define c\xf3mo el sistema debe comportarse para cumplir su prop\xf3sito de manera efectiva y consistente con las necesidades del negocio.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'Divisi\xf3n de la L\xf3gica de Negocio: Los archivos dentro de la carpeta "service" est\xe1n dise\xf1ados para encapsular funciones y m\xe9todos espec\xedficos relacionados con la l\xf3gica de negocio de la aplicaci\xf3n. Cada servicio cumple con una funci\xf3n claramente definida, como realizar operaciones CRUD en la base de datos, aplicar reglas de negocio espec\xedficas, manejar integraciones con servicios externos, entre otros.'),(0,i.yg)("li",{parentName:"ul"},"Reutilizaci\xf3n y Modularidad: Al dividir la l\xf3gica de negocio en servicios independientes, se facilita la reutilizaci\xf3n del c\xf3digo en diferentes partes de la aplicaci\xf3n. Por ejemplo, si tienes una operaci\xf3n compleja que se realiza en m\xfaltiples controladores, puedes encapsular esa operaci\xf3n en un servicio y llamarlo desde cada controlador correspondiente. Esto evita la duplicaci\xf3n de c\xf3digo y hace que el c\xf3digo sea m\xe1s mantenible."),(0,i.yg)("li",{parentName:"ul"},"Independencia y Coherencia: Cada servicio opera de manera independiente, lo cual promueve la coherencia y la separaci\xf3n de responsabilidades en tu c\xf3digo. Los servicios no necesitan conocer detalles internos de otros servicios o de c\xf3mo se maneja la interacci\xf3n con la base de datos; simplemente exponen m\xe9todos que pueden ser invocados desde otras partes de la aplicaci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Facilidad de Testing: Los servicios son unidades l\xf3gicas que pueden ser f\xe1cilmente probadas de forma unitaria. Puedes escribir pruebas espec\xedficas para cada servicio para asegurarte de que cumple con las expectativas y maneja correctamente los diferentes casos de uso y situaciones."),(0,i.yg)("li",{parentName:"ul"},"Interacci\xf3n con la Capa de Datos: Los servicios suelen interactuar con los modelos o repositorios de datos para realizar operaciones CRUD (crear, leer, actualizar, eliminar) en la base de datos. Al encapsular estas operaciones en servicios, los controladores no necesitan saber c\xf3mo se accede o manipulan los datos, solo necesitan invocar los m\xe9todos del servicio."),(0,i.yg)("li",{parentName:"ul"},"Reutilizaci\xf3n de C\xf3digo: Los servicios permiten reutilizar c\xf3digo en diferentes partes de la aplicaci\xf3n. Por ejemplo, si varios controladores necesitan realizar una operaci\xf3n similar, pueden invocar el mismo m\xe9todo del servicio, reduciendo la duplicaci\xf3n de c\xf3digo."),(0,i.yg)("li",{parentName:"ul"},"Separaci\xf3n de Responsabilidades: Al utilizar servicios, se logra una clara separaci\xf3n de responsabilidades entre las diferentes capas de la aplicaci\xf3n (controladores, servicios, y datos). Esto sigue el principio de responsabilidad \xfanica (Single Responsibility Principle) de las arquitecturas limpias.")),(0,i.yg)("h4",{id:"ejemplo-de-estructura-de-proyecto-con-carpeta-service"},'Ejemplo de Estructura de Proyecto con Carpeta "Service"'),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plaintext"},"/my-app\n\u251c\u2500\u2500 controllers\n\u2502   \u251c\u2500\u2500 userController.js\n\u251c\u2500\u2500 services\n\u2502   \u251c\u2500\u2500 userService.js\n\u251c\u2500\u2500 models\n\u2502   \u251c\u2500\u2500 userModel.js\n\u251c\u2500\u2500 routes\n\u2502   \u251c\u2500\u2500 userRoutes.js\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"controllers/: Contiene los controladores que manejan las solicitudes HTTP y responden a los clientes."),(0,i.yg)("li",{parentName:"ul"},"services/: Contiene los servicios que encapsulan la l\xf3gica de negocio."),(0,i.yg)("li",{parentName:"ul"},"models/: Contiene los modelos que interact\xfaan con la base de datos."),(0,i.yg)("li",{parentName:"ul"},"routes/: Contiene los archivos de rutas que definen los endpoints de la API.")))),(0,i.yg)("h2",{id:"modelo-vista-controlador-mvc"},"Modelo Vista Controlador (MVC)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"El patr\xf3n Modelo Vista Controlador (MVC) es un enfoque arquitect\xf3nico que separa una aplicaci\xf3n en tres componentes principales: el Modelo, la Vista y el Controlador. Cada uno de estos componentes tiene responsabilidades espec\xedficas que ayudan a organizar y estructurar el c\xf3digo de manera modular y escalable."),(0,i.yg)("li",{parentName:"ul"},"Modelo Vista Controlador (MVC) es un patr\xf3n de dise\xf1o arquitect\xf3nico ampliamente utilizado en el desarrollo de aplicaciones web y de software. Se divide en tres componentes principales:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Modelo: El Modelo representa los datos y la l\xf3gica de negocio de la aplicaci\xf3n. Es responsable de interactuar con la base de datos, realizar operaciones CRUD (Crear, Leer, Actualizar, Eliminar) y aplicar las reglas de negocio. El Modelo no se preocupa por c\xf3mo se presentan los datos al usuario ni c\xf3mo se gestionan las interacciones con la interfaz de usuario."),(0,i.yg)("li",{parentName:"ul"},"Vista: La Vista es la capa de presentaci\xf3n que muestra la interfaz de usuario al usuario final. Se encarga de renderizar la informaci\xf3n proveniente del Modelo de una manera que sea comprensible y accesible para el usuario. La Vista no realiza l\xf3gica de negocio ni interact\xfaa directamente con la base de datos; su funci\xf3n principal es presentar la informaci\xf3n de manera visual y responder a las acciones del usuario."),(0,i.yg)("li",{parentName:"ul"},"Controlador: El Controlador act\xfaa como intermediario entre el Modelo y la Vista. Recibe las interacciones del usuario a trav\xe9s de la interfaz de usuario y las traduce en acciones que afectan al Modelo (como solicitudes para guardar o actualizar datos). Despu\xe9s de que el Modelo ha realizado las operaciones necesarias, el Controlador actualiza la Vista para reflejar los cambios al usuario. El Controlador tambi\xe9n gestiona la navegaci\xf3n y el flujo de la aplicaci\xf3n.")))),(0,i.yg)("h4",{id:"modelo"},"Modelo"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Representa los datos y la l\xf3gica de negocio de la aplicaci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Gestiona el acceso a los datos y las operaciones sobre ellos, como la lectura, escritura, validaciones y c\xe1lculos."),(0,i.yg)("li",{parentName:"ul"},"No se preocupa por c\xf3mo se presentan los datos o c\xf3mo interact\xfaa el usuario con ellos.")),(0,i.yg)("h4",{id:"vista"},"Vista"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Es la interfaz de usuario con la que interact\xfaa el usuario final."),(0,i.yg)("li",{parentName:"ul"},"Se encarga de presentar los datos del modelo de una manera adecuada para su visualizaci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Responde a las acciones del usuario y los eventos de la interfaz.")),(0,i.yg)("h4",{id:"controlador"},"Controlador"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Act\xfaa como intermediario entre el modelo y la vista."),(0,i.yg)("li",{parentName:"ul"},"Recibe las interacciones del usuario desde la vista y las traduce en acciones sobre el modelo."),(0,i.yg)("li",{parentName:"ul"},"Actualiza la vista con los cambios en el modelo y gestiona la l\xf3gica de navegaci\xf3n y flujo de la aplicaci\xf3n.")),(0,i.yg)("h4",{id:"analog\xeda"},"Analog\xeda"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Imagina una aplicaci\xf3n de pedidos en l\xednea:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Modelo: Es el almac\xe9n de datos y reglas de negocio. Incluye la gesti\xf3n de inventario, c\xe1lculo de precios y procesamiento de pedidos en el sistema de gesti\xf3n de base de datos."),(0,i.yg)("li",{parentName:"ul"},'Vista: Es la interfaz que ve el usuario. Puede ser la p\xe1gina web donde se muestran los productos con im\xe1genes, descripciones y precios, y donde el usuario hace clic en "Agregar al carrito".'),(0,i.yg)("li",{parentName:"ul"},"Controlador: Es el sistema de pedidos que recibe las acciones del usuario (como agregar productos al carrito), se comunica con el modelo (para verificar la disponibilidad del producto y actualizar el inventario) y actualiza la vista (mostrando el carrito actualizado al usuario).")))),(0,i.yg)("h4",{id:"ejemplo-de-implementaci\xf3n-en-nodejs-con-expressjs"},"Ejemplo de Implementaci\xf3n en Node.js con Express.js"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plaintext"},"/my-app\n\u251c\u2500\u2500 controllers\n\u2502   \u251c\u2500\u2500 productController.js\n\u251c\u2500\u2500 models\n\u2502   \u251c\u2500\u2500 productModel.js\n\u251c\u2500\u2500 views\n\u2502   \u251c\u2500\u2500 productView.ejs\n\u251c\u2500\u2500 routes\n\u2502   \u251c\u2500\u2500 productRoutes.js\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"controllers/: Contiene los controladores que manejan las solicitudes HTTP y las respuestas."),(0,i.yg)("li",{parentName:"ul"},"models/: Contiene los modelos que interact\xfaan con la base de datos."),(0,i.yg)("li",{parentName:"ul"},"views/: Contiene las vistas que son renderizadas y enviadas al cliente."),(0,i.yg)("li",{parentName:"ul"},"routes/: Contiene los archivos de rutas que definen los endpoints de la API.")))),(0,i.yg)("h2",{id:"microfrontends"},"Microfrontends"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Microfrontends es un enfoque arquitect\xf3nico que consiste en dividir una aplicaci\xf3n frontend en peque\xf1as partes independientes, cada una desarrollada y desplegada de manera independiente. Cada microfrontend representa una funcionalidad espec\xedfica de la interfaz de usuario y puede ser desarrollado por equipos diferentes utilizando tecnolog\xedas y frameworks diferentes. Esto permite a los equipos trabajar de manera independiente en sus respectivas partes del frontend, sin interferir con otros equipos, lo cual es especialmente \xfatil en grandes organizaciones o proyectos complejos.")),(0,i.yg)("h4",{id:"componentes-independientes"},"Componentes Independientes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"En un entorno de microfrontends, cada parte de la interfaz de usuario se desarrolla como un componente separado y aut\xf3nomo. Cada microfrontend puede tener su propio ciclo de vida de desarrollo, implementaci\xf3n y escalado. Esto facilita la actualizaci\xf3n y mantenimiento sin afectar otras partes de la aplicaci\xf3n, lo que es crucial para aplicaciones grandes y complejas donde diferentes equipos trabajan en funcionalidades espec\xedficas.")),(0,i.yg)("h4",{id:"comunicaci\xf3n-y-coordinaci\xf3n"},"Comunicaci\xf3n y Coordinaci\xf3n"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Los microfrontends se comunican entre s\xed a trav\xe9s de interfaces bien definidas y contratos de API. Pueden compartir estado global utilizando t\xe9cnicas como eventos o servicios compartidos. La coordinaci\xf3n entre los microfrontends puede ser gestionada mediante un enrutamiento din\xe1mico en el lado del cliente o mediante un gateway que dirige las solicitudes a los microservicios adecuados seg\xfan las URL o los eventos del usuario.")),(0,i.yg)("h4",{id:"ejemplo-de-implementaci\xf3n"},"Ejemplo de Implementaci\xf3n"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Un ejemplo com\xfan de microfrontends es una aplicaci\xf3n de comercio electr\xf3nico donde cada secci\xf3n (como el cat\xe1logo de productos, el carrito de compras, y el proceso de pago) se desarrolla y despliega como un microfrontend separado. Cada equipo puede trabajar de forma independiente en su secci\xf3n, utilizando las tecnolog\xedas m\xe1s adecuadas para sus necesidades. Esto no solo mejora la eficiencia del desarrollo, sino que tambi\xe9n facilita la escalabilidad y el mantenimiento a largo plazo de la aplicaci\xf3n.")),(0,i.yg)("h4",{id:"analog\xeda-1"},"Analog\xeda"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Imagina una tienda departamental donde diferentes secciones de la tienda, como electr\xf3nica, ropa y comestibles, son gestionadas por equipos independientes con diferentes estilos de gesti\xf3n y m\xe9todos de organizaci\xf3n. Cada secci\xf3n tiene su propio personal especializado que maneja sus productos y servicios de manera aut\xf3noma, pero todos ellos contribuyen a la experiencia general del cliente en la tienda. De manera similar, los microfrontends permiten que equipos de desarrollo trabajen de manera independiente en diferentes partes de una aplicaci\xf3n frontend, cada uno optimizado para sus propios requisitos y tecnolog\xedas preferidas.")),(0,i.yg)("h4",{id:"ejemplo-de-implementaci\xf3n-1"},"Ejemplo de Implementaci\xf3n"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"En un proyecto de microfrontends utilizando React y Vue.js, podr\xedas tener la siguiente estructura:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plaintext"},"/my-app\n\u251c\u2500\u2500 microfrontend1\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u2502   \u251c\u2500\u2500 components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Microfrontend1Component1.vue\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Microfrontend1Component2.vue\n\u2502   \u2502   \u251c\u2500\u2500 App.vue\n\u2502   \u2502   \u251c\u2500\u2500 main.js\n\u2502   \u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 microfrontend2\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u2502   \u251c\u2500\u2500 components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Microfrontend2Component1.jsx\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Microfrontend2Component2.jsx\n\u2502   \u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 gateway\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u2502   \u251c\u2500\u2500 App.jsx\n\u2502   \u2502   \u251c\u2500\u2500 MainRouter.jsx\n\u2502   \u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"microfrontend1/ y microfrontend2/: Representan dos microfrontends diferentes desarrollados en Vue.js y React respectivamente. Cada uno tiene su propio conjunto de componentes y l\xf3gica de negocio espec\xedfica."),(0,i.yg)("li",{parentName:"ul"},"gateway/: Es el gateway o enrutador principal que gestiona la navegaci\xf3n y la integraci\xf3n entre los diferentes microfrontends. Puede utilizar enrutamiento din\xe1mico en el lado del cliente para cargar din\xe1micamente los microfrontends seg\xfan la URL solicitada por el usuario."),(0,i.yg)("li",{parentName:"ul"},"En este ejemplo, cada microfrontend puede ser desarrollado y desplegado de manera independiente, utilizando herramientas y frameworks que mejor se adapten a los requisitos de cada equipo. El gateway coordina la navegaci\xf3n y la integraci\xf3n entre los microfrontends, ofreciendo una experiencia de usuario cohesiva y optimizada.")))))}u.isMDXComponent=!0}}]);