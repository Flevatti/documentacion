"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[4915],{5680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>g});var o=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=o.createContext({}),c=function(e){var a=o.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=c(e.components);return o.createElement(s.Provider,{value:a},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},u=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=c(n),u=t,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||l;return n?o.createElement(g,i(i({ref:a},d),{},{components:n})):o.createElement(g,i({ref:a},d))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=n.length,i=new Array(l);i[0]=u;var r={};for(var s in a)hasOwnProperty.call(a,s)&&(r[s]=a[s]);r.originalType=e,r[m]="string"==typeof e?e:t,i[1]=r;for(var c=2;c<l;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4170:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var o=n(8168),t=(n(6540),n(5680));const l={sidebar_position:14},i="Otros #3",r={unversionedId:"React/otros3",id:"React/otros3",title:"Otros #3",description:"3",source:"@site/docs/React/otros3.md",sourceDirName:"React",slug:"/React/otros3",permalink:"/documentacion/docs/React/otros3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/otros3.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"React",previous:{title:"Otros #2",permalink:"/documentacion/docs/React/otros2"}},s={},c=[{value:"Componente",id:"componente",level:2},{value:"Que es un Componente",id:"que-es-un-componente",level:4},{value:"\xbfQu\xe9 representa un componente?",id:"qu\xe9-representa-un-componente",level:4},{value:"Ventajas de este enfoque",id:"ventajas-de-este-enfoque",level:4},{value:"Componentes Declarativos y imperativos",id:"componentes-declarativos-y-imperativos",level:4},{value:"Enfoque imperativo",id:"enfoque-imperativo",level:4},{value:"Ejemplo 1: Usando ref para manipulaci\xf3n directa del DOM",id:"ejemplo-1-usando-ref-para-manipulaci\xf3n-directa-del-dom",level:5},{value:"Ejemplo 2: Interacciones con el DOM sin estado",id:"ejemplo-2-interacciones-con-el-dom-sin-estado",level:5},{value:"Casos donde los componentes pueden ser m\xe1s imperativos",id:"casos-donde-los-componentes-pueden-ser-m\xe1s-imperativos",level:4},{value:"Enfoque declarativo",id:"enfoque-declarativo",level:4},{value:"\xbfC\xf3mo funciona un componente declarativo en React?",id:"c\xf3mo-funciona-un-componente-declarativo-en-react",level:4},{value:"\xbfC\xf3mo favorece el enfoque declarativo?",id:"c\xf3mo-favorece-el-enfoque-declarativo",level:4},{value:"Componente Padre y componente hijo",id:"componente-padre-y-componente-hijo",level:2},{value:"Componente Padre",id:"componente-padre",level:4},{value:"Componente Hijo",id:"componente-hijo",level:4},{value:"Relaci\xf3n padre-hijo en conjunto",id:"relaci\xf3n-padre-hijo-en-conjunto",level:4},{value:"Caracter\xedsticas clave",id:"caracter\xedsticas-clave",level:4},{value:"Ejemplo pr\xe1ctico con funciones",id:"ejemplo-pr\xe1ctico-con-funciones",level:4},{value:"Renderizado de componentes",id:"renderizado-de-componentes",level:2},{value:"Pasos del renderizado de componentes en React",id:"pasos-del-renderizado-de-componentes-en-react",level:4},{value:"1- Inicializaci\xf3n del componente",id:"1--inicializaci\xf3n-del-componente",level:4},{value:"2- Ejecutar el constructor (solo en componentes de clase)",id:"2--ejecutar-el-constructor-solo-en-componentes-de-clase",level:4},{value:"3- Renderizado inicial (primer renderizado)",id:"3--renderizado-inicial-primer-renderizado",level:4},{value:"4- Creaci\xf3n del Virtual DOM",id:"4--creaci\xf3n-del-virtual-dom",level:4},{value:"5- Reconciliaci\xf3n",id:"5--reconciliaci\xf3n",level:4},{value:"6- Actualizaci\xf3n del DOM real",id:"6--actualizaci\xf3n-del-dom-real",level:4},{value:"7- Re-renderizado",id:"7--re-renderizado",level:4},{value:"Comienzo de una aplicaci\xf3n",id:"comienzo-de-una-aplicaci\xf3n",level:2},{value:"Inicio del Proceso",id:"inicio-del-proceso",level:4},{value:"\xbfQu\xe9 es un componente principal?",id:"qu\xe9-es-un-componente-principal",level:4},{value:"Caracter\xedsticas del Componente Principal",id:"caracter\xedsticas-del-componente-principal",level:4},{value:"DOM Elements vs React components",id:"dom-elements-vs-react-components",level:2},{value:"DOM Elements",id:"dom-elements",level:4},{value:"Relaci\xf3n con JSX",id:"relaci\xf3n-con-jsx",level:4},{value:"C\xf3mo React convierte los elementos en el DOM Real",id:"c\xf3mo-react-convierte-los-elementos-en-el-dom-real",level:4},{value:"Por qu\xe9 es importante entender los DOM Elements React",id:"por-qu\xe9-es-importante-entender-los-dom-elements-react",level:4},{value:"React components",id:"react-components",level:4},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Representaci\xf3n como Objeto JavaScript",id:"representaci\xf3n-como-objeto-javascript",level:4},{value:"DOM Element",id:"dom-element",level:5},{value:"React Component",id:"react-component",level:5},{value:"Comparaci\xf3n",id:"comparaci\xf3n",level:4},{value:"Diferencias Clave",id:"diferencias-clave",level:4},{value:"Componentes funcionales vs componentes de clase",id:"componentes-funcionales-vs-componentes-de-clase",level:2},{value:"Componentes Funcionales",id:"componentes-funcionales",level:4},{value:"Con Hooks (estado y efectos)",id:"con-hooks-estado-y-efectos",level:4},{value:"Componentes de Clase",id:"componentes-de-clase",level:4},{value:"Con estado y m\xe9todos del ciclo de vida",id:"con-estado-y-m\xe9todos-del-ciclo-de-vida",level:4},{value:"Diferencias clave",id:"diferencias-clave-1",level:4},{value:"Recomendaci\xf3n",id:"recomendaci\xf3n",level:4},{value:"Extensi\xf3n JSX",id:"extensi\xf3n-jsx",level:2},{value:"\xbfQu\xe9 es Jsx?",id:"qu\xe9-es-jsx",level:4},{value:"Caracter\xedsticas de JSX",id:"caracter\xedsticas-de-jsx",level:4},{value:"Ventajas de JSX",id:"ventajas-de-jsx",level:4},{value:"Caracter\xedsticas principales de JSX",id:"caracter\xedsticas-principales-de-jsx",level:4},{value:"Sintaxis similar a HTML",id:"sintaxis-similar-a-html",level:5},{value:"Expresiones JavaScript dentro de JSX",id:"expresiones-javascript-dentro-de-jsx",level:5},{value:"Elementos JSX",id:"elementos-jsx",level:5},{value:"Atributos en JSX",id:"atributos-en-jsx",level:5},{value:"Cierre autom\xe1tico de etiquetas",id:"cierre-autom\xe1tico-de-etiquetas",level:5},{value:"JSX vs HTML",id:"jsx-vs-html",level:4},{value:"Extensiones comunes de React",id:"extensiones-comunes-de-react",level:4},{value:"\xbfEs obligatorio usar .jsx o .tsx?",id:"es-obligatorio-usar-jsx-o-tsx",level:4},{value:"Ventajas de usar .jsx o .tsx",id:"ventajas-de-usar-jsx-o-tsx",level:4},{value:"Casos para usar .js o .ts en lugar de .jsx o .tsx",id:"casos-para-usar-js-o-ts-en-lugar-de-jsx-o-tsx",level:4}],d={toc:c},m="wrapper";function p(e){let{components:a,...n}=e;return(0,t.yg)(m,(0,o.A)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"otros-3"},"Otros #3"),(0,t.yg)("h2",{id:"componente"},"Componente"),(0,t.yg)("h4",{id:"que-es-un-componente"},"Que es un Componente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente es una parte o pieza que forma parte de un sistema."),(0,t.yg)("li",{parentName:"ul"},"En React, un componente es una pieza reutilizable de c\xf3digo que define c\xf3mo se ve y se comporta una parte espec\xedfica de la interfaz de usuario (UI). Los componentes son fundamentales en React porque permiten dividir la interfaz en partes peque\xf1as y manejables, que pueden ser combinadas para crear aplicaciones complejas."),(0,t.yg)("li",{parentName:"ul"},"Cada componente contiene su propio HTML, CSS, y JavaScript, lo que lo convierte en una parte reutilizable y modular de la interfaz de usuario.")),(0,t.yg)("h4",{id:"qu\xe9-representa-un-componente"},"\xbfQu\xe9 representa un componente?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente en React puede representar cualquier parte de la interfaz de usuario, como:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Un men\xfa."),(0,t.yg)("li",{parentName:"ul"},"Un sidebar."),(0,t.yg)("li",{parentName:"ul"},"Una tarjeta de producto."),(0,t.yg)("li",{parentName:"ul"},"Un formulario."),(0,t.yg)("li",{parentName:"ul"},"Incluso elementos m\xe1s peque\xf1os, como un bot\xf3n o un \xedcono.")))),(0,t.yg)("h4",{id:"ventajas-de-este-enfoque"},"Ventajas de este enfoque"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Modularidad: Puedes dividir la UI en piezas m\xe1s manejables."),(0,t.yg)("li",{parentName:"ol"},"Reutilizaci\xf3n: Usa el mismo componente en diferentes partes de la aplicaci\xf3n con diferentes datos."),(0,t.yg)("li",{parentName:"ol"},"Aislamiento: Cada componente tiene su propia l\xf3gica y estilos, evitando interferencias con otros componentes."),(0,t.yg)("li",{parentName:"ol"},"Mantenibilidad: Cambiar o mejorar un componente no afecta al resto de la aplicaci\xf3n, siempre que respetes las interfaces entre ellos.")),(0,t.yg)("h4",{id:"componentes-declarativos-y-imperativos"},"Componentes Declarativos y imperativos"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En React (y en programaci\xf3n en general), los t\xe9rminos declarativo e imperativo describen diferentes estilos de programaci\xf3n. Ambos se pueden usar para construir componentes, pero React favorece el enfoque declarativo porque simplifica la forma en que defines la interfaz de usuario y manejas su estado.")),(0,t.yg)("h4",{id:"enfoque-imperativo"},"Enfoque imperativo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Te centras en c\xf3mo debe hacerse algo, describiendo paso a paso las instrucciones necesarias para lograr el resultado."),(0,t.yg)("li",{parentName:"ul"},"Es m\xe1s detallado y se parece al proceso manual."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo en JavaScript puro:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const button = document.createElement('button'); button.textContent = 'Click Me'; \nbutton.style.backgroundColor = 'blue'; \nbutton.addEventListener('click', () => { alert('Button clicked!'); }); \ndocument.body.appendChild(button);\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los componentes imperativos suelen implicar situaciones en las que interact\xfaas directamente con el DOM, en lugar de dejar que React lo maneje por ti. Esto puede incluir:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Manipulaci\xf3n directa del DOM (sin usar el mecanismo de renderizado de React)."),(0,t.yg)("li",{parentName:"ul"},"Interacciones con bibliotecas no declarativas (por ejemplo, jQuery, mapas interactivos, etc.)."),(0,t.yg)("li",{parentName:"ul"},"Acceso a elementos del DOM utilizando refs.")))),(0,t.yg)("h5",{id:"ejemplo-1-usando-ref-para-manipulaci\xf3n-directa-del-dom"},"Ejemplo 1: Usando ref para manipulaci\xf3n directa del DOM"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En React, puedes utilizar refs para hacer referencia a un elemento del DOM y manipularlo directamente, lo que se acerca a un enfoque m\xe1s imperativo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useRef } from 'react';\n\nfunction ImperativeButton() {\n    const buttonRef = useRef(null);\n\n    const handleClick = () => {\n        // Manipulamos el DOM directamente, por ejemplo, cambiando el estilo del bot\xf3n.\n        buttonRef.current.style.backgroundColor = 'red';\n        buttonRef.current.textContent = 'Clicked!';\n    };\n\n    return (\n        <button ref={buttonRef} onClick={handleClick}>\n            Click Me\n        </button>\n    );\n}\n\nexport default ImperativeButton;\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En este caso:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Usamos useRef para obtener una referencia al bot\xf3n en el DOM."),(0,t.yg)("li",{parentName:"ul"},"Al hacer clic en el bot\xf3n, manipulamos directamente su estilo y texto. Este es un enfoque m\xe1s imperativo, porque est\xe1s gestionando expl\xedcitamente c\xf3mo cambiar la UI.")))))),(0,t.yg)("h5",{id:"ejemplo-2-interacciones-con-el-dom-sin-estado"},"Ejemplo 2: Interacciones con el DOM sin estado"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente sin estado (useState) y sin usar React para renderizarlo completamente puede ser considerado imperativo. Se puede usar un enfoque m\xe1s tradicional de manipulaci\xf3n del DOM:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useEffect } from 'react';\n\nfunction ImperativeDOM() {\n    useEffect(() => {\n        const div = document.createElement('div');\n        div.textContent = 'I am created imperatively!';\n        div.style.backgroundColor = 'lightgreen';\n        document.body.appendChild(div);\n    }, []);\n\n    return null;  // No renderiza nada en el DOM de React.\n}\n\nexport default ImperativeDOM;\n\n")),(0,t.yg)("h4",{id:"casos-donde-los-componentes-pueden-ser-m\xe1s-imperativos"},"Casos donde los componentes pueden ser m\xe1s imperativos"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Acceder a elementos directamente: Usando refs para manejar interacciones que no se pueden controlar f\xe1cilmente mediante el estado y props."),(0,t.yg)("li",{parentName:"ol"},"Manipulaci\xf3n del DOM directamente: Cuando necesitas aplicar cambios directos al DOM, como agregar o eliminar elementos, sin pasar por React."),(0,t.yg)("li",{parentName:"ol"},"Integraci\xf3n con bibliotecas de terceros: Si est\xe1s utilizando bibliotecas que no est\xe1n dise\xf1adas para React (por ejemplo, para mapas, gr\xe1ficos o animaciones complejas), es posible que necesites controlar el DOM de manera m\xe1s manual.")),(0,t.yg)("h4",{id:"enfoque-declarativo"},"Enfoque declarativo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Te centras en qu\xe9 quieres que suceda, sin preocuparte por los detalles espec\xedficos de c\xf3mo se implementa."),(0,t.yg)("li",{parentName:"ul"},"Es m\xe1s abstracto y expresivo."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo en React:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n    return <button style={{ backgroundColor: 'blue' }} onClick={() => alert('Button clicked!')}>Click Me</button>;\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente declarativo en React es aquel en el que defines qu\xe9 quieres que se muestre en la interfaz de usuario y que interacciones va a tener con el usuario pero nunca especificamos el \u201cc\xf3mo se va a hacer\u201d. Este enfoque es uno de los principios fundamentales de React, y favorece la claridad, la reutilizaci\xf3n y el mantenimiento del c\xf3digo.")),(0,t.yg)("h4",{id:"c\xf3mo-funciona-un-componente-declarativo-en-react"},"\xbfC\xf3mo funciona un componente declarativo en React?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En un componente declarativo, React se encarga de la manipulaci\xf3n del DOM y de las actualizaciones de la interfaz de usuario, en funci\xf3n de los cambios en el estado o las props. No necesitas especificar los detalles sobre c\xf3mo se deben realizar las actualizaciones del DOM, ya que React lo hace autom\xe1ticamente."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo de un componente declarativo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState } from 'react';\n\nfunction Counter() {\n    // Definir el estado declarativo\n    const [count, setCount] = useState(0);\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <button onClick={() => setCount(count + 1)}>Increment</button>\n        </div>\n    );\n}\n\nexport default Counter;\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En este ejemplo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Estado: El estado del contador (count) se gestiona con useState, y React se encarga de actualizar la UI cuando este estado cambia."),(0,t.yg)("li",{parentName:"ul"},"UI: Declaramos qu\xe9 debe mostrarse (el valor de count), sin necesidad de definir expl\xedcitamente c\xf3mo se debe cambiar el DOM cuando el valor de count cambia."),(0,t.yg)("li",{parentName:"ul"},"Evento: El evento onClick solo indica qu\xe9 debe suceder (incrementar el contador), y React gestiona el cambio en el estado y la actualizaci\xf3n del DOM.")))))),(0,t.yg)("h4",{id:"c\xf3mo-favorece-el-enfoque-declarativo"},"\xbfC\xf3mo favorece el enfoque declarativo?"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Simplicidad y claridad:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El c\xf3digo declarativo es m\xe1s f\xe1cil de leer y entender porque describes lo que debe ocurrir, no c\xf3mo debe ocurrir."),(0,t.yg)("li",{parentName:"ul"},"No tienes que preocuparte por los detalles de manipular el DOM directamente o de c\xf3mo manejar las actualizaciones."))),(0,t.yg)("li",{parentName:"ol"},"Mantenibilidad:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El c\xf3digo declarativo es m\xe1s f\xe1cil de mantener y modificar. Cuando el estado cambia, React se encarga de actualizar la UI autom\xe1ticamente de manera eficiente."),(0,t.yg)("li",{parentName:"ul"},"Si necesitas modificar el comportamiento o el dise\xf1o de un componente, puedes hacerlo de manera centralizada sin preocuparte por c\xf3mo los cambios afectan el DOM."))),(0,t.yg)("li",{parentName:"ol"},"Reactividad:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"React se asegura de que los componentes se actualicen autom\xe1ticamente cuando cambia su estado o las props, lo que simplifica el manejo de interacciones en la UI. No necesitas escribir c\xf3digo adicional para actualizar el DOM."),(0,t.yg)("li",{parentName:"ul"},"La reactividad facilita la construcci\xf3n de interfaces din\xe1micas que responden a entradas del usuario, cambios de datos, o interacciones en tiempo real sin tener que manejar manualmente las actualizaciones de la UI."))),(0,t.yg)("li",{parentName:"ol"},"Composici\xf3n y reutilizaci\xf3n:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Los componentes declarativos son m\xe1s f\xe1ciles de componer y reutilizar. Puedes crear componentes peque\xf1os y aislados, y luego combinarlos para formar interfaces m\xe1s complejas."),(0,t.yg)("li",{parentName:"ul"},"La reutilizaci\xf3n de un componente es m\xe1s sencilla porque no necesitas gestionar su estado de manera imperativa en diferentes contextos."))),(0,t.yg)("li",{parentName:"ol"},"Optimizaci\xf3n autom\xe1tica:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"React se encarga de la reconciliaci\xf3n del DOM: optimiza las actualizaciones solo para lo que ha cambiado. Si usas un enfoque declarativo, React realiza un renderizado eficiente y minimiza el trabajo necesario para actualizar la UI."),(0,t.yg)("li",{parentName:"ul"},"Esto mejora el rendimiento, ya que React no tiene que actualizar todo el DOM cada vez, sino que solo hace las modificaciones necesarias.")))),(0,t.yg)("h2",{id:"componente-padre-y-componente-hijo"},"Componente Padre y componente hijo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En React, los t\xe9rminos componente padre y componente hijo se refieren a la relaci\xf3n jer\xe1rquica entre componentes en la estructura de una aplicaci\xf3n. Los componentes pueden contener otros componentes dentro de su JSX, formando una relaci\xf3n de padre e hijo.")),(0,t.yg)("h4",{id:"componente-padre"},"Componente Padre"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Un componente padre es aquel que contiene o "envuelve" a otro componente. Generalmente, es el que pasa datos o funciones a trav\xe9s de las props hacia sus componentes hijos.'),(0,t.yg)("li",{parentName:"ul"},"Ejemplo de un componente padre:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'function Padre() {\n  const mensaje = "Hola desde el componente padre";\n\n  return (\n    <div>\n      <h1>Este es el componente padre</h1>\n      <Hijo texto={mensaje} />\n    </div>\n  );\n}\n\n')),(0,t.yg)("h4",{id:"componente-hijo"},"Componente Hijo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente hijo es aquel que es renderizado dentro de otro componente (el padre). El hijo puede recibir datos del padre a trav\xe9s de las props y utilizarlos para mostrar informaci\xf3n o ejecutar funciones."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo de un componente hijo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function Hijo(props) {\n  return (\n    <div>\n      <h2>Este es el componente hijo</h2>\n      <p>{props.texto}</p>\n    </div>\n  );\n}\n\n")),(0,t.yg)("h4",{id:"relaci\xf3n-padre-hijo-en-conjunto"},"Relaci\xf3n padre-hijo en conjunto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando se combinan el componente padre y el hijo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'function Padre() {\n  const mensaje = "Hola desde el componente padre";\n\n  return (\n    <div>\n      <h1>Este es el componente padre</h1>\n      <Hijo texto={mensaje} />\n    </div>\n  );\n}\n\nfunction Hijo(props) {\n  return (\n    <div>\n      <h2>Este es el componente hijo</h2>\n      <p>{props.texto}</p>\n    </div>\n  );\n}\n\nexport default Padre;\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Resultado en el navegador:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"Este es el componente padre\nEste es el componente hijo\nHola desde el componente padre\n")),(0,t.yg)("h4",{id:"caracter\xedsticas-clave"},"Caracter\xedsticas clave"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Datos unidireccionales: En React, los datos fluyen de padre a hijo (de arriba hacia abajo) a trav\xe9s de las props. Un componente hijo no puede modificar directamente los datos del padre."),(0,t.yg)("li",{parentName:"ol"},"Props: Los datos que el componente padre pasa al hijo son propiedades (props), que el hijo recibe como un argumento en su funci\xf3n o como parte de this.props en una clase."),(0,t.yg)("li",{parentName:"ol"},"Jerarqu\xeda: La estructura padre-hijo refleja c\xf3mo los componentes se anidan en la interfaz de usuario.")),(0,t.yg)("h4",{id:"ejemplo-pr\xe1ctico-con-funciones"},"Ejemplo pr\xe1ctico con funciones"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente padre puede pasar una funci\xf3n al hijo, para que el hijo pueda interactuar con el estado del padre."),(0,t.yg)("li",{parentName:"ul"},"Padre:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function Padre() {\n  const [contador, setContador] = useState(0);\n\n  const incrementar = () => setContador(contador + 1);\n\n  return (\n    <div>\n      <h1>Contador: {contador}</h1>\n      <Hijo onIncrementar={incrementar} />\n    </div>\n  );\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Hijo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function Hijo(props) {\n  return (\n    <div>\n      <button onClick={props.onIncrementar}>Incrementar</button>\n    </div>\n  );\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Comportamiento:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El padre gestiona el estado del contador."),(0,t.yg)("li",{parentName:"ul"},"El hijo ejecuta una funci\xf3n que actualiza el estado del padre al hacer clic en el bot\xf3n."))),(0,t.yg)("li",{parentName:"ul"},"Esta relaci\xf3n entre componentes padres e hijos permite una arquitectura modular y organizada en React.")))),(0,t.yg)("h2",{id:"renderizado-de-componentes"},"Renderizado de componentes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El renderizado de componentes en React se refiere al proceso mediante el cual React genera y actualiza la interfaz de usuario (DOM) a partir de los componentes definidos en tu c\xf3digo. ")),(0,t.yg)("h4",{id:"pasos-del-renderizado-de-componentes-en-react"},"Pasos del renderizado de componentes en React"),(0,t.yg)("h4",{id:"1--inicializaci\xf3n-del-componente"},"1- Inicializaci\xf3n del componente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando React encuentra un nuevo componente en el DOM virtual (por ejemplo, cuando se renderiza por primera vez):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Si el componente es funcional, React simplemente lo ejecuta como una funci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Si el componente es de clase, React crea una instancia de la clase y llama a su m\xe9todo render().")))),(0,t.yg)("h4",{id:"2--ejecutar-el-constructor-solo-en-componentes-de-clase"},"2- Ejecutar el constructor (solo en componentes de clase)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En componentes de clase:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El constructor se ejecuta para inicializar el estado y recibir las props."),(0,t.yg)("li",{parentName:"ul"},"Este paso no existe en componentes funcionales, ya que estos utilizan Hooks (como useState y useEffect) para manejar el estado y el ciclo de vida.")))),(0,t.yg)("h4",{id:"3--renderizado-inicial-primer-renderizado"},"3- Renderizado inicial (primer renderizado)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El componente devuelve JSX:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"En componentes funcionales, es el valor retornado de la funci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"En componentes de clase, es el resultado del m\xe9todo render()."))),(0,t.yg)("li",{parentName:"ul"},"JSX no es HTML real; es una representaci\xf3n declarativa que describe c\xf3mo se debe verse el componente en la UI."),(0,t.yg)("li",{parentName:"ul"},'React convierte el JSX en un objeto JavaScript llamado "elemento React", que describe c\xf3mo debe verse la UI en el DOM real.'),(0,t.yg)("li",{parentName:"ul"},"Por lo tanto, el c\xf3digo JSX luego se convierte en un objeto JavaScript que React utiliza para actualizar el DOM real.")),(0,t.yg)("h4",{id:"4--creaci\xf3n-del-virtual-dom"},"4- Creaci\xf3n del Virtual DOM"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Se crea un Virtual DOM donde cada "elemento React" se convierte en un nodo del Virtual DOM, que:',(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Es una copia ligera y en memoria del DOM real."),(0,t.yg)("li",{parentName:"ul"},"Contiene una representaci\xf3n jer\xe1rquica de todos los elementos React."),(0,t.yg)("li",{parentName:"ul"},"Sirve como un modelo para realizar c\xe1lculos de actualizaci\xf3n antes de modificar el DOM real."),(0,t.yg)("li",{parentName:"ul"},"El Virtual DOM tiene como \u201craiz\u201d un \u201ccomponente principal\u201d, que ser\xeda el que se renderiza dentro del index.html generalmente dentro de un DIV."))),(0,t.yg)("li",{parentName:"ul"},"El Virtual DOM no interact\xfaa directamente con el DOM real del navegador, sino que sirve como una copia liviana del DOM real.")),(0,t.yg)("h4",{id:"5--reconciliaci\xf3n"},"5- Reconciliaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando el estado o las props de alg\xfan componente cambia:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"React crea un nuevo Virtual DOM basado en los cambios."),(0,t.yg)("li",{parentName:"ul"},"Utiliza un algoritmo de diffing para comparar el Virtual DOM nuevo con el anterior."),(0,t.yg)("li",{parentName:"ul"},"Identifica exactamente qu\xe9 partes han cambiado (nodos nuevos, eliminados o modificados)."),(0,t.yg)("li",{parentName:"ul"},"React hace esto mediante el proceso llamado reconciliaci\xf3n: compara el nuevo Virtual DOM con el anterior y determina qu\xe9 ha cambiado."))),(0,t.yg)("li",{parentName:"ul"},"De esta manera React no vuelve a renderizar completamente la UI.")),(0,t.yg)("h4",{id:"6--actualizaci\xf3n-del-dom-real"},"6- Actualizaci\xf3n del DOM real"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Despu\xe9s de la reconciliaci\xf3n:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"React realiza solo los cambios necesarios en el DOM real."),(0,t.yg)("li",{parentName:"ul"},"Esto minimiza las manipulaciones del DOM, que suelen ser costosas en t\xe9rminos de rendimiento."),(0,t.yg)("li",{parentName:"ul"},"React actualiza solo aquellos nodos en el DOM que han cambiado, lo que mejora el rendimiento de la aplicaci\xf3n, ya que no necesita actualizar todo el DOM cada vez."))),(0,t.yg)("li",{parentName:"ul"},"React se asegura de que la UI en el navegador refleje fielmente el estado actual de la aplicaci\xf3n.")),(0,t.yg)("h4",{id:"7--re-renderizado"},"7- Re-renderizado"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El componente se vuelve a renderizar siguiendo el mismo proceso."),(0,t.yg)("li",{parentName:"ul"},"React actualiza el Virtual DOM, lo compara con el anterior, y aplica solo las diferencias al DOM real.")),(0,t.yg)("h2",{id:"comienzo-de-una-aplicaci\xf3n"},"Comienzo de una aplicaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El proceso de renderizado comienza cuando usamos ReactDOM.render() (en React 17 o versiones anteriores) o ReactDOM.createRoot().render() (en React 18 y versiones posteriores). Este paso inicia el ciclo de vida de una aplicaci\xf3n React, conectando el Virtual DOM con el DOM real del navegador.")),(0,t.yg)("h4",{id:"inicio-del-proceso"},"Inicio del Proceso"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los m\xe9todos mencionados generalmente requieren dos elementos:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},'Un componente principal: Este componente act\xfaa como la "ra\xedz" del DOM virtual y siempre se renderiza. Representa toda la aplicaci\xf3n.'),(0,t.yg)("li",{parentName:"ol"},"Un selector CSS: Este selector apunta a un elemento HTML del archivo index.html. Normalmente, se trata de un div con el atributo id='root'."))),(0,t.yg)("li",{parentName:"ul"},"Por lo tanto, el proceso serio este:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Se selecciona una etiqueta HTML del DOM Real (index.html) que suele ser un contenedor (Como un DIV). De esta manera le estamos diciendo a React que gestione o manipule todo lo que all\xe1 dentro del contenedor. En pocas palabras puede modificar el DOM Real pero solo la parte que le indicamos."),(0,t.yg)("li",{parentName:"ol"},"React comienza a generar elementos React (a partir del JSX) del componente principal y de todos los componentes que se deben renderizar en este."),(0,t.yg)("li",{parentName:"ol"},"A cada elemento React se le asigna un \u201cNodo\u201d dentro del DOM VIRTUAL, este representa la estructura jer\xe1rquica de elementos React (componentes)."),(0,t.yg)("li",{parentName:"ol"},"React manipula el contenedor que especificamos para \u201cmostrar\u201d el DOM Virtual en el DOM real. En otra palabra a\xf1ade dentro del contenedor todos los nodos generados por el DOM virtual, reflejando la estructura inicial de la UI."),(0,t.yg)("li",{parentName:"ol"},"El DOM real ahora refleja la estructura del Virtual DOM, lo que permite que la UI se muestre al usuario por primera vez."),(0,t.yg)("li",{parentName:"ol"},"Entra en el Ciclo de Vida React."),(0,t.yg)("li",{parentName:"ol"},"A partir de este punto, React empieza a escuchar los cambios en el estado y las props de los componentes. Cada cambio activa el proceso de reconciliaci\xf3n para actualizar la UI de forma eficiente.")))),(0,t.yg)("h4",{id:"qu\xe9-es-un-componente-principal"},"\xbfQu\xe9 es un componente principal?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un componente principal en React es el componente ra\xedz o el primer componente que se renderiza en tu aplicaci\xf3n. Act\xfaa como el punto de partida desde el cual se construye y organiza toda la estructura de la interfaz de usuario (UI).")),(0,t.yg)("h4",{id:"caracter\xedsticas-del-componente-principal"},"Caracter\xedsticas del Componente Principal"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Representa la aplicaci\xf3n completa:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Este componente es la ra\xedz en el DOM Virtual."),(0,t.yg)("li",{parentName:"ul"},"Desde aqu\xed, puedes incluir otros componentes secundarios que formen la UI de tu aplicaci\xf3n."))),(0,t.yg)("li",{parentName:"ol"},"Generalmente es llamado App:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Por convenci\xf3n, el componente principal suele nombrarse App (aunque no es obligatorio)."),(0,t.yg)("li",{parentName:"ul"},"Este componente se importa y pasa al m\xe9todo ReactDOM.render() o root.render()."))),(0,t.yg)("li",{parentName:"ol"},"Contiene otros componentes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El componente principal puede incluir directamente otros componentes (hijos) que representan diferentes partes de la aplicaci\xf3n, como men\xfas, encabezados, listas, formularios, etc."),(0,t.yg)("li",{parentName:"ul"},"Estos se organizan en una estructura jer\xe1rquica para construir la UI completa."))),(0,t.yg)("li",{parentName:"ol"},"Se renderiza dentro del contenedor del DOM real:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Este componente se asocia a un elemento del DOM real (como el ","<",'div id="root"> en index.html) para mostrar la aplicaci\xf3n al usuario.')))),(0,t.yg)("h2",{id:"dom-elements-vs-react-components"},"DOM Elements vs React components"),(0,t.yg)("h4",{id:"dom-elements"},"DOM Elements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Representan etiquetas HTML est\xe1ndar (como div, h1, button) que React utiliza para interactuar con el DOM real del navegador."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const element = <div className="container">Hello, World!</div>;\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En este ejemplo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"element es un elemento React, que representa un nodo del DOM Virtual."),(0,t.yg)("li",{parentName:"ul"},"Eventualmente, React usar\xe1 este elemento React para generar un nodo real en el DOM del navegador.")))))),(0,t.yg)("h4",{id:"relaci\xf3n-con-jsx"},"Relaci\xf3n con JSX"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando escribes JSX (como ","<","div>), React lo convierte en un objeto JavaScript que describe un DOM element."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const element = <h1 className="title">Hello</h1>;\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Este c\xf3digo se traduce internamente a:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const element = React.createElement('h1', { className: 'title' }, 'Hello');\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Aqu\xed:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"'h1' es el tipo de elemento (en este caso, un encabezado HTML)."),(0,t.yg)("li",{parentName:"ul"},"{ className: 'title' } son las propiedades (o atributos) del elemento."),(0,t.yg)("li",{parentName:"ul"},"'Hello' es el contenido del elemento.")))))),(0,t.yg)("h4",{id:"c\xf3mo-react-convierte-los-elementos-en-el-dom-real"},"C\xf3mo React convierte los elementos en el DOM Real"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando React renderiza la aplicaci\xf3n:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"React toma el JSX que describes en tu c\xf3digo y lo convierte en elementos React (objetos)"),(0,t.yg)("li",{parentName:"ol"},"Luego, React genera nodos en el DOM Virtual con estos elementos."),(0,t.yg)("li",{parentName:"ol"},"Finalmente, React traduce estos nodos en elementos del DOM real del navegador y los inserta en la p\xe1gina."))),(0,t.yg)("li",{parentName:"ul"},"El flujo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// JSX\nconst element = <p>Hello, World!</p>;\n\n// Elemento React (objeto JavaScript)\nconst reactElement = {\n  type: 'p',\n  props: {\n    children: 'Hello, World!'\n  }\n};\n\n// Nodo del DOM Real (al renderizar)\n<p>Hello, World!</p>;\n\n")),(0,t.yg)("h4",{id:"por-qu\xe9-es-importante-entender-los-dom-elements-react"},"Por qu\xe9 es importante entender los DOM Elements React"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los DOM elements React son la base para construir interfaces en React. Cada vez que escribes JSX, est\xe1s creando elementos React que eventualmente se traducen en nodos del DOM real."),(0,t.yg)("li",{parentName:"ul"},"React gestiona estos elementos para actualizar el DOM de manera eficiente (a trav\xe9s del Virtual DOM), evitando manipulaciones directas y mejorando el rendimiento.")),(0,t.yg)("h4",{id:"react-components"},"React components"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Son bloques reutilizables de c\xf3digo (son funciones o  clases) que pueden contener l\xf3gica, estado y JSX. Estos pueden estar formados por DOM elements y/o por otros React Components."),(0,t.yg)("li",{parentName:"ul"},"La forma de escribirlos en JSX ayuda a identificarlos f\xe1cilmente:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DOM Elements:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Se escriben usando nombres en min\xfascula (por ejemplo, ","<","div>, ","<","button>)."),(0,t.yg)("li",{parentName:"ul"},"React los interpreta como elementos HTML est\xe1ndar."))),(0,t.yg)("li",{parentName:"ul"},"React Components:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Se escriben usando nombres en may\xfascula inicial (por ejemplo, ","<","App>, ","<","Header>)."),(0,t.yg)("li",{parentName:"ul"},"React los interpreta como componentes definidos por el usuario.")))))),(0,t.yg)("h4",{id:"ejemplo"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'// Un DOM element\nconst domElement = <div className="container">Hello, World!</div>;\n\n// Un React Component\nfunction MyComponent() {\n  return <h1>Hello from Component!</h1>;\n}\nconst reactComponent = <MyComponent />;\n\n')),(0,t.yg)("h4",{id:"representaci\xf3n-como-objeto-javascript"},"Representaci\xf3n como Objeto JavaScript"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando React procesa JSX, convierte tanto los DOM elements como los React components en objetos de JavaScript. Vamos a ver c\xf3mo luce cada uno.")),(0,t.yg)("h5",{id:"dom-element"},"DOM Element"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const element = <h1 className="title">Hello</h1>;\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se traduce a:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const element = {\n  type: 'h1', // Tipo de elemento HTML\n  props: {\n    className: 'title', // Atributos del elemento\n    children: 'Hello'   // Contenido del elemento\n  }\n};\n\n")),(0,t.yg)("h5",{id:"react-component"},"React Component"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function MyComponent() {\n  return <h1>Hello from Component!</h1>;\n}\nconst component = <MyComponent />;\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se traduce a:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const component = {\n  type: MyComponent, // La funci\xf3n o clase que define el componente\n  props: {},         // Props pasadas al componente (en este caso, vac\xedo)\n};\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En este caso:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"type: MyComponent indica que este objeto representa un React Component."),(0,t.yg)("li",{parentName:"ul"},"React invocar\xe1 la funci\xf3n MyComponent() para generar el elemento React.")))))),(0,t.yg)("h4",{id:"comparaci\xf3n"},"Comparaci\xf3n"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Propiedad"),(0,t.yg)("th",{parentName:"tr",align:null},"DOM Element"),(0,t.yg)("th",{parentName:"tr",align:null},"React Component"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Definici\xf3n"),(0,t.yg)("td",{parentName:"tr",align:null},"Elemento HTML est\xe1ndar"),(0,t.yg)("td",{parentName:"tr",align:null},"Componente personalizado en React")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Escrito en JSX"),(0,t.yg)("td",{parentName:"tr",align:null},"Min\xfasculas (","<","div>)"),(0,t.yg)("td",{parentName:"tr",align:null},"May\xfasculas (","<","MyComponent>)")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Representaci\xf3n en JavaScript"),(0,t.yg)("td",{parentName:"tr",align:null},"type: 'tag_name' (por ejemplo, 'div')"),(0,t.yg)("td",{parentName:"tr",align:null},"type: Component")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Renderiza directamente"),(0,t.yg)("td",{parentName:"tr",align:null},"Nodos HTML"),(0,t.yg)("td",{parentName:"tr",align:null},"JSX retornado por el componente")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Puede contener l\xf3gica"),(0,t.yg)("td",{parentName:"tr",align:null},"No"),(0,t.yg)("td",{parentName:"tr",align:null},"S\xed")))),(0,t.yg)("h4",{id:"diferencias-clave"},"Diferencias Clave"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Uso de l\xf3gica:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Los React Components pueden contener l\xf3gica (estado, eventos, etc.)."),(0,t.yg)("li",{parentName:"ul"},"Los DOM Elements no tienen l\xf3gica; simplemente representan un nodo HTML."))),(0,t.yg)("li",{parentName:"ol"},"Prop\xf3sito:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Los DOM Elements son bloques b\xe1sicos."),(0,t.yg)("li",{parentName:"ul"},"Los React Components son bloques reutilizables que pueden agrupar DOM Elements y m\xe1s React Components.")))),(0,t.yg)("h2",{id:"componentes-funcionales-vs-componentes-de-clase"},"Componentes funcionales vs componentes de clase"),(0,t.yg)("h4",{id:"componentes-funcionales"},"Componentes Funcionales"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Son funciones de JavaScript que contienen un parametro llamado props y retornan elementos de React (generalmente JSX)."),(0,t.yg)("li",{parentName:"ul"},"Sintaxis b\xe1sica:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'function ComponenteFuncional(props) {\n  return (\n    <div>\n      <h1>Hola, {props.nombre}</h1>\n    </div>\n  );\n}\n\n// Uso del componente\n<ComponenteFuncional nombre="Juan" />\n\n')),(0,t.yg)("h4",{id:"con-hooks-estado-y-efectos"},"Con Hooks (estado y efectos)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los componentes funcionales no ten\xedan estado ni acceso a ciclos de vida hasta que se introdujeron los Hooks en React 16.8:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState, useEffect } from 'react';\n\nfunction ComponenteConEstado() {\n  const [contador, setContador] = useState(0);\n\n  useEffect(() => {\n    console.log('El contador cambi\xf3:', contador);\n    return () => {\n      console.log('Limpieza del efecto');\n    };\n  }, [contador]); // Ejecutar efecto cuando contador cambie\n\n  return (\n    <div>\n      <p>Contador: {contador}</p>\n      <button onClick={() => setContador(contador + 1)}>Incrementar</button>\n    </div>\n  );\n}\n\n")),(0,t.yg)("h4",{id:"componentes-de-clase"},"Componentes de Clase"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Son clases de JavaScript que extienden de React.Component y deben incluir un m\xe9todo render() que retorna JSX."),(0,t.yg)("li",{parentName:"ul"},"Sintaxis b\xe1sica")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React, { Component } from 'react';\n\nclass ComponenteClase extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Hola, {this.props.nombre}</h1>\n      </div>\n    );\n  }\n}\n\n// Uso del componente\n<ComponenteClase nombre=\"Mar\xeda\" />\n\n")),(0,t.yg)("h4",{id:"con-estado-y-m\xe9todos-del-ciclo-de-vida"},"Con estado y m\xe9todos del ciclo de vida"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los componentes de clase tienen acceso a un estado interno y a los m\xe9todos del ciclo de vida de React:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"class ComponenteConEstado extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contador: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log('El componente se mont\xf3');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('El componente se actualiz\xf3');\n  }\n\n  componentWillUnmount() {\n    console.log('El componente se desmont\xf3');\n  }\n\n  incrementar = () => {\n    this.setState({ contador: this.state.contador + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <p>Contador: {this.state.contador}</p>\n        <button onClick={this.incrementar}>Incrementar</button>\n      </div>\n    );\n  }\n}\n\n")),(0,t.yg)("h4",{id:"diferencias-clave-1"},"Diferencias clave"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Aspecto"),(0,t.yg)("th",{parentName:"tr",align:null},"Componentes Funcionales"),(0,t.yg)("th",{parentName:"tr",align:null},"Componentes de Clase"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Estado"),(0,t.yg)("td",{parentName:"tr",align:null},"Se maneja con useState y otros Hooks."),(0,t.yg)("td",{parentName:"tr",align:null},"Se maneja con this.state y setState.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Ciclo de vida"),(0,t.yg)("td",{parentName:"tr",align:null},"Se maneja con Hooks como useEffect."),(0,t.yg)("td",{parentName:"tr",align:null},"Se usa componentDidMount, componentDidUpdate, etc.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Simplicidad"),(0,t.yg)("td",{parentName:"tr",align:null},"M\xe1s concisos, ideales para l\xf3gica simple."),(0,t.yg)("td",{parentName:"tr",align:null},"M\xe1s verbosos y con m\xe1s c\xf3digo repetitivo.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Performance"),(0,t.yg)("td",{parentName:"tr",align:null},"M\xe1s r\xe1pidos porque no tienen la sobrecarga de clases."),(0,t.yg)("td",{parentName:"tr",align:null},"Menos eficientes debido a la sobrecarga de las clases.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"Migraci\xf3n"),(0,t.yg)("td",{parentName:"tr",align:null},"Preferidos en versiones modernas de React."),(0,t.yg)("td",{parentName:"tr",align:null},"Se usan menos en proyectos nuevos.")))),(0,t.yg)("h4",{id:"recomendaci\xf3n"},"Recomendaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Usa componentes funcionales para la mayor\xeda de los casos, especialmente en proyectos modernos, porque son m\xe1s simples, concisos y est\xe1n alineados con las pr\xe1cticas actuales de React."),(0,t.yg)("li",{parentName:"ul"},"Los componentes de clase pueden ser \xfatiles en proyectos antiguos que no han migrado a Hooks.")),(0,t.yg)("h2",{id:"extensi\xf3n-jsx"},"Extensi\xf3n JSX"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Por lo general los componentes tienen las extensiones .jsx o .tsx pero no es obligatorio.")),(0,t.yg)("h4",{id:"qu\xe9-es-jsx"},"\xbfQu\xe9 es Jsx?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"JSX es lo que se retorna en un componente funcional (y tambi\xe9n lo que devuelve el metodo render de un  componente de clase), y es lo que React utiliza para crear los elementos React que conforman la interfaz de usuario."),(0,t.yg)("li",{parentName:"ul"},"JSX (JavaScript XML) es una extensi\xf3n de sintaxis de JavaScript que permite escribir HTML dentro de JavaScript de manera m\xe1s declarativa y legible. Fue creado para crear componentes en React, ya que permite definir la estructura de la interfaz de usuario (UI).")),(0,t.yg)("h4",{id:"caracter\xedsticas-de-jsx"},"Caracter\xedsticas de JSX"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Sintaxis similar a HTML: JSX permite escribir algo que se parece a HTML, lo que facilita la comprensi\xf3n y escritura de los componentes React, sin necesidad de preocuparse por la sintaxis m\xe1s compleja de JavaScript puro."),(0,t.yg)("li",{parentName:"ol"},'Declarativo, no imperativo: Aunque JSX se ve como HTML, lo que realmente hace React es convertir este JSX en \u201celementos React\u201d utilizando funciones como React.createElement(). Es decir, no est\xe1s escribiendo directamente c\xf3digo para manipular el DOM de forma imperativa. React maneja la creaci\xf3n y manipulaci\xf3n de elementos por ti. Este enfoque declarativo permite enfocarse en "qu\xe9" deber\xeda renderizarse, no en "c\xf3mo" se hace internamente.'),(0,t.yg)("li",{parentName:"ol"},"Abstracci\xf3n sobre el proceso de creaci\xf3n de elementos: Bajo el cap\xf3, JSX se convierte en JavaScript, y es JavaScript el que crea los elementos que forman la UI. Lo que hace React es usar estos elementos para sincronizar el estado de la UI con el DOM virtual y actualizar el DOM de manera eficiente."),(0,t.yg)("li",{parentName:"ol"},"Es una extensi\xf3n de sintaxis que debe ser transformada por herramientas como Babel en c\xf3digo JavaScript est\xe1ndar que los navegadores puedan entender.")),(0,t.yg)("h4",{id:"ventajas-de-jsx"},"Ventajas de JSX"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Legibilidad: La sintaxis similar a HTML facilita la escritura y comprensi\xf3n de los componentes."),(0,t.yg)("li",{parentName:"ol"},"Integraci\xf3n con JavaScript: Puedes usar JavaScript directamente dentro de JSX, lo que permite una mayor flexibilidad para crear din\xe1micamente los elementos de la interfaz."),(0,t.yg)("li",{parentName:"ol"},"Optimizaci\xf3n en React: JSX permite a React realizar un seguimiento eficiente de los cambios en la interfaz de usuario utilizando un algoritmo llamado Reconciliaci\xf3n.")),(0,t.yg)("h4",{id:"caracter\xedsticas-principales-de-jsx"},"Caracter\xedsticas principales de JSX"),(0,t.yg)("h5",{id:"sintaxis-similar-a-html"},"Sintaxis similar a HTML"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"JSX permite escribir c\xf3digo que se parece a HTML, pero en realidad es JavaScript. Esto facilita la creaci\xf3n de componentes de la interfaz de usuario."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo de JSX:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const elemento = <h1>Hola, mundo</h1>;\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Este c\xf3digo parece HTML, pero es realmente una llamada a React.createElement() bajo el cap\xf3.")))),(0,t.yg)("h5",{id:"expresiones-javascript-dentro-de-jsx"},"Expresiones JavaScript dentro de JSX"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Puedes incrustar expresiones JavaScript dentro de JSX utilizando llaves {}. Esto permite incluir variables, funciones o cualquier c\xf3digo v\xe1lido de JavaScript."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const nombre = 'Juan';\nconst saludo = <h1>Hola, {nombre}</h1>;\n\n")),(0,t.yg)("h5",{id:"elementos-jsx"},"Elementos JSX"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"JSX se convierte en un objeto JavaScript que React puede usar para crear la UI. React usa React.createElement() para transformar JSX en un \xe1rbol de elementos React (DOM virtual)."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const elemento = <h1>Hola, mundo</h1>;\n// Esto es equivalente a:\nconst elemento = React.createElement('h1', null, 'Hola, mundo');\n\n")),(0,t.yg)("h5",{id:"atributos-en-jsx"},"Atributos en JSX"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los atributos de los elementos en JSX son similares a los atributos HTML, pero con algunas diferencias. Por ejemplo, en JSX se usa className en lugar de class (porque class es una palabra reservada en JavaScript)."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo: ")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const elemento = <div className="contenedor">Contenido aqu\xed</div>;\n')),(0,t.yg)("h5",{id:"cierre-autom\xe1tico-de-etiquetas"},"Cierre autom\xe1tico de etiquetas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En JSX, las etiquetas deben cerrarse expl\xedcitamente. Esto significa que incluso las etiquetas como ","<","img > o ","<","br > deben ser cerradas."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const imagen = <img src="imagen.jpg" alt="Descripci\xf3n" />;\n')),(0,t.yg)("h4",{id:"jsx-vs-html"},"JSX vs HTML"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Aunque JSX se parece a HTML, hay diferencias clave:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Atributos: En JSX, algunos atributos HTML tienen nombres diferentes, como class \u2192 className, for \u2192 htmlFor, y style \u2192 un objeto con propiedades de estilo en lugar de una cadena de texto."),(0,t.yg)("li",{parentName:"ul"},"Etiquetas de cierre: Las etiquetas en JSX deben cerrarse correctamente, incluso las auto cerradas como ","<","img > o ","<","br >.")))),(0,t.yg)("h4",{id:"extensiones-comunes-de-react"},"Extensiones comunes de React"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},".jsx"),": Indica que el archivo contiene JavaScript con JSX (JavaScript XML), que es una sintaxis que permite escribir componentes React de forma declarativa."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},".tsx"),": Se usa en proyectos de TypeScript y combina TypeScript con JSX, permitiendo escribir componentes React con tipado est\xe1tico.")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Ambas extensiones son convencionales para distinguir archivos que contienen JSX o TSX del resto de los archivos JavaScript o TypeScript.")))),(0,t.yg)("h4",{id:"es-obligatorio-usar-jsx-o-tsx"},"\xbfEs obligatorio usar .jsx o .tsx?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"No. React puede procesar archivos con la extensi\xf3n .js (para JavaScript) o .ts (para TypeScript) siempre que est\xe9n configurados correctamente en tu entorno de desarrollo."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\n\nfunction Componente() {\n  return <h1>Hola, mundo</h1>;\n}\n\nexport default Componente;\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Esto funciona porque Babel (o el compilador que uses) est\xe1 configurado para transformar JSX en llamadas a React.createElement().")))),(0,t.yg)("h4",{id:"ventajas-de-usar-jsx-o-tsx"},"Ventajas de usar .jsx o .tsx"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Claridad: Facilita identificar archivos que contienen JSX o TSX, especialmente en proyectos grandes."),(0,t.yg)("li",{parentName:"ol"},"Herramientas: Algunos editores de c\xf3digo, como VS Code, ofrecen soporte mejorado (como resaltado de sintaxis) para estas extensiones."),(0,t.yg)("li",{parentName:"ol"},"Convenci\xf3n: Seguir esta pr\xe1ctica est\xe1ndar ayuda a que otros desarrolladores comprendan m\xe1s r\xe1pidamente tu c\xf3digo.")),(0,t.yg)("h4",{id:"casos-para-usar-js-o-ts-en-lugar-de-jsx-o-tsx"},"Casos para usar .js o .ts en lugar de .jsx o .tsx"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"C\xf3digos que no contienen JSX: Si el archivo solo tiene l\xf3gica JavaScript o TypeScript (sin JSX), se suele usar .js o .ts."),(0,t.yg)("li",{parentName:"ol"},"Configuraci\xf3n personalizada: En algunos proyectos con configuraciones avanzadas, el equipo puede decidir no usar las extensiones .jsx o .tsx.")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Aunque no es obligatorio usar .jsx o .tsx, es altamente recomendado porque mejora la legibilidad, el mantenimiento del c\xf3digo, y la integraci\xf3n con herramientas. Si est\xe1s trabajando en un proyecto moderno o colaborando con otros desarrolladores, es mejor seguir estas convenciones.")))))}p.isMDXComponent=!0}}]);