"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[3870],{5680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>g});var o=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,o,r=function(e,a){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var t=o.createContext({}),c=function(e){var a=o.useContext(t),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=c(e.components);return o.createElement(t.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,r=e.mdxType,s=e.originalType,t=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,g=d["".concat(t,".").concat(p)]||d[p]||m[p]||s;return n?o.createElement(g,l(l({ref:a},u),{},{components:n})):o.createElement(g,l({ref:a},u))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=p;var i={};for(var t in a)hasOwnProperty.call(a,t)&&(i[t]=a[t]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<s;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5186:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>t,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=n(8168),r=(n(6540),n(5680));const s={sidebar_position:15},l="Extra",i={unversionedId:"Javascript/extra",id:"Javascript/extra",title:"Extra",description:"Pagina primer plano",source:"@site/docs/Javascript/extra.md",sourceDirName:"Javascript",slug:"/Javascript/extra",permalink:"/documentacion/docs/Javascript/extra",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Javascript/extra.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"Javascript",previous:{title:"Buenas practicas",permalink:"/documentacion/docs/Javascript/practicas"}},t={},c=[{value:"Pagina primer plano",id:"pagina-primer-plano",level:2},{value:"\xbfQue es JSON?",id:"que-es-json",level:2},{value:"\xbfCu\xe1les son sus caracter\xedsticas?",id:"cu\xe1les-son-sus-caracter\xedsticas",level:4},{value:"Sintaxis",id:"sintaxis",level:4},{value:"Observable",id:"observable",level:2},{value:"Concepto variable",id:"concepto-variable",level:4},{value:"Concepto de Promesa y la progamaci\xf3n as\xedncrona",id:"concepto-de-promesa-y-la-progamaci\xf3n-as\xedncrona",level:4},{value:"Javascript Observable y la programaci\xf3n as\xedncrona",id:"javascript-observable-y-la-programaci\xf3n-as\xedncrona",level:4},{value:"Anatom\xeda de un Observable",id:"anatom\xeda-de-un-observable",level:4},{value:"Creaci\xf3n de Observable",id:"creaci\xf3n-de-observable",level:4},{value:"Subscripci\xf3n a Observable",id:"subscripci\xf3n-a-observable",level:4},{value:"Abortando subscripciones",id:"abortando-subscripciones",level:4},{value:"RxJS",id:"rxjs",level:4},{value:"Underscore",id:"underscore",level:2},{value:"Decoradores",id:"decoradores",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Modificamos el ejemplo anterior",id:"modificamos-el-ejemplo-anterior",level:4},{value:"Extender m\xe9todo",id:"extender-m\xe9todo",level:4},{value:"Decorator Factory",id:"decorator-factory",level:4},{value:"Patron decorador",id:"patron-decorador",level:2},{value:"NaN",id:"nan",level:2},{value:"Operaciones matem\xe1ticas inv\xe1lidas",id:"operaciones-matem\xe1ticas-inv\xe1lidas",level:4},{value:"Convertir cadenas que no son n\xfameros",id:"convertir-cadenas-que-no-son-n\xfameros",level:4},{value:"Resultados de operaciones no num\xe9ricas",id:"resultados-de-operaciones-no-num\xe9ricas",level:4},{value:"\xbfC\xf3mo comprobar si un valor es NaN?",id:"c\xf3mo-comprobar-si-un-valor-es-nan",level:4}],u={toc:c},d="wrapper";function m(e){let{components:a,...n}=e;return(0,r.yg)(d,(0,o.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"extra"},"Extra"),(0,r.yg)("h2",{id:"pagina-primer-plano"},"Pagina primer plano"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Como detectar si tu web est\xe1 en primer plano")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'    // Primera Alternativa\n    // Detecta si el usuario quito el sitio web del primer plano\n    window.addEventListener("blur" , () => {\n      document.title="Nadie nos mira"\n    });\n   // Detecta si el usuario  tiene el sitio web en primer plano\n    window.addEventListener("focus" , () => {\n      document.title = "Nos mira alguien";\n    })\n    // Segunda alternativa\n    document.addEventListener("visibilitychange" , () => {\n      document.title = document.visibilityState;\n    })\n')),(0,r.yg)("h2",{id:"que-es-json"},"\xbfQue es JSON?"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"JSON es un formato de texto totalmente independiente del lenguaje de programaci\xf3n"),(0,r.yg)("li",{parentName:"ul"},"JSON, cuyas siglas significan en verdad JavaScript object notation que, en espa\xf1ol se traducen como, notaci\xf3n de objetos de JavaScript."),(0,r.yg)("li",{parentName:"ul"},"Es un formato de intercambio de datos que resulta muy f\xe1cil de leer y escribir para los programadores y sencillo de interpretar y crear para las m\xe1quinas."),(0,r.yg)("li",{parentName:"ul"},"Se usa cuando se requiere que un sistema requiera mostrar o enviar informaci\xf3n para que otros sistemas los lean e interpreten."),(0,r.yg)("li",{parentName:"ul"},"Se utiliza principalmente para transferir datos entre un servidor y un cliente.")),(0,r.yg)("p",null,"En resumen, JSON no es un lenguaje de programaci\xf3n sino un archivo que contiene datos estructurados, que se utiliza para transferir informaci\xf3n entre sistemas."),(0,r.yg)("p",null,"Una de las caracter\xedsticas m\xe1s significativas de JSON, al ser un formato independiente de los lenguajes de programaci\xf3n, es que los servicios que comparten informaci\xf3n por este m\xe9todo no necesitan hablar el mismo idioma. Es decir que el emisor y el receptor pueden ser totalmente distintos, por ejemplo, Java y Python\nEsto es as\xed porque cada uno tiene su propia librer\xeda de codificaci\xf3n y decodificaci\xf3n para cadenas en este formato."),(0,r.yg)("p",null,"Es decir que JSON es un formato com\xfan para serializar y deserializar objetos en la mayor\xeda de los idiomas"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Su funcionamiento se basa en la estructuraci\xf3n de una colecci\xf3n de pares  que contienen:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Una clave: que corresponde al identificador del contenido."),(0,r.yg)("li",{parentName:"ul"},"Un valor: que representa el contenido correspondiente.")))),(0,r.yg)("h4",{id:"cu\xe1les-son-sus-caracter\xedsticas"},"\xbfCu\xe1les son sus caracter\xedsticas?"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"JSON es solo un formato de datos."),(0,r.yg)("li",{parentName:"ul"},"Requiere usar comillas dobles para las cadenas y los nombres de propiedades. Las comillas simples no son v\xe1lidas."),(0,r.yg)("li",{parentName:"ul"},"Una coma o dos puntos mal ubicados pueden producir que un archivo JSON no funcione."),(0,r.yg)("li",{parentName:"ul"},"A diferencia del c\xf3digo JavaScript, en el que las propiedades del objeto pueden no estar entre comillas, en JSON solo los Strings entre comillas pueden ser utilizadas como propiedades."),(0,r.yg)("li",{parentName:"ul"},"El ultimo valor no debe tener coma.")),(0,r.yg)("h4",{id:"sintaxis"},"Sintaxis"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Un objeto JSON comienza y termina con llaves {}"),(0,r.yg)("li",{parentName:"ul"},"Hay dos elementos centrales en un objeto JSON: claves (Keys) y valores (Values)."),(0,r.yg)("li",{parentName:"ul"},"Las Keys deben ser cadenas de caracteres (strings). Como su nombre en espa\xf1ol lo indica, estas contienen una secuencia de caracteres rodeados de comillas."),(0,r.yg)("li",{parentName:"ul"},"Los Values son un tipo de datos JSON v\xe1lido. Puede ser un arreglo (array), objeto, cadena (string), booleano, n\xfamero o nulo."),(0,r.yg)("li",{parentName:"ul"},"Puede tener dos o m\xe1s pares de claves/valor dentro, con una coma para separarlos. As\xed mismo, cada key es seguida por dos puntos para distinguirla del valor.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},"    {\n        \u201ckey\u201d:\u201cvalue\u201d,\n        \u201ckey\u201d:\u201cvalue\u201d,\n        \u201ckey\u201d:\u201cvalue\u201d\n      }\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"La sintaxis de JSON funciona de modo similar a JavaScript. Por ejemplo:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Se usan claves(keys)/valores."),(0,r.yg)("li",{parentName:"ul"},"La informaci\xf3n se separa por comas."),(0,r.yg)("li",{parentName:"ul"},"Las llaves agrupan objetos."),(0,r.yg)("li",{parentName:"ul"},"Los corchetes agrupan arreglos de datos (array)."))),(0,r.yg)("li",{parentName:"ul"},"Sin embargo, JSON se distingue de JavaScript porque sus claves tienen que ser strings (o secuencias de caracteres), mientras que sus valores deben ser strings, n\xfameros, objetos, arreglos, boleados o null.")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.nextu.com/blog/que-es-json-por-que-es-importante-conocerlo-rc22/"},"\xbfQu\xe9 es Json? \xbfPor qu\xe9 es importante conocerlo?")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.hostinger.com.ar/tutoriales/que-es-json"},"\xbfQu\xe9 es JSON?")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://blog.hubspot.es/website/que-es-json"},"JSON para principiantes: qu\xe9 es, para qu\xe9 sirve y ejemplos"))))),(0,r.yg)("h2",{id:"observable"},"Observable"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Los Observables son conceptos que cuesta realmente entender en profundidad ya que est\xe1n ligados a la programaci\xf3n as\xedncrona y relacionados con el concepto de Promesas. Para entender correctamente los Observables hay que entender de forma correcta como funcionan los conceptos de programaci\xf3n as\xedncrona a alto nivel. Vamos a explicarlos:")),(0,r.yg)("h4",{id:"concepto-variable"},"Concepto variable"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Imaginemonos que nosotros queremos irnos de viaje y el viaje nos cuesta 1000 euros .  \xbfPodemos o no podemos irnos de viaje? . Es una pregunta sencilla y todo depender\xe1 de si tenemos el dinero disponible en nuestra cuenta corriente . En caso afirmativo nos podemos ir de viaje ya que tenemos guardados los 1000 euros necesarios."),(0,r.yg)("li",{parentName:"ul"},'Una variable es una "caja" que almacena un valor que puede variar en el tiempo.')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"let dinero = 1000\n")),(0,r.yg)("h4",{id:"concepto-de-promesa-y-la-progamaci\xf3n-as\xedncrona"},"Concepto de Promesa y la progamaci\xf3n as\xedncrona"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"El concepto de Promesa es algo m\xe1s complejo , pero vamos a intentarlo explicar con los 1000 euros y el viaje. Supongamos que seguimos queriendo irnos de viaje y no disponemos del dinero. La realidad es que no podremos irnos de viaje. Sin embargo ganamos  la loter\xeda y hemos sido premiado con 1000 euros ."),(0,r.yg)("li",{parentName:"ul"},"\xbfEntonces podremos viajar? . La realidad es que s\xed pero no \u2026. tendremos que ir a la administraci\xf3n de la loter\xeda a confirmar el premio y la administraci\xf3n tardar\xe1 unos d\xedas en procesarlo y darnos el dinero . Esto es lo que habitualmente se conoce como una Promesa en programaci\xf3n es una variable que en el momento actual no tiene valor pero en un futuro lo tendr\xe1 y podremos usarle.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"var promesa= new Promise (function(resolve,reject) {\n \n  setTimeout(function() {\n \n    resolve(1000);\n \n  },2000);\n \n \n})\n \npromesa.then(function(resultado) {\n \n  console.log(resultado);\n \n})\n\n")),(0,r.yg)("h4",{id:"javascript-observable-y-la-programaci\xf3n-as\xedncrona"},"Javascript Observable y la programaci\xf3n as\xedncrona"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Supongamos ahora que nos queremos ir de viaje , no tenemos el dinero y no nos ha tocado la loter\xeda . Hemos tenido bastante mala suerte, pero todav\xeda nos queda una opci\xf3n podemos recurrir a nuestros amigos y que cada uno de ellos nos preste 100 euros para irnos de viaje ."),(0,r.yg)("li",{parentName:"ul"},"Tendremos que hacer 10 llamadas de tel\xe9fono y esperar pacientemente a quedar con con cada persona para que nos de los 100 euros, cuando hayamos quedado con todos nos encontraremos  que finalmente podemos viajar. Ese es el concepto de JavaScript Observable , hace referencia a la combinaci\xf3n de multiples peticiones as\xedncronas que pueden terminar en diferentes momentos temporales .  Seg\xfan vayamos recibiendo el dinero podremos ir pagando el viaje. "),(0,r.yg)("li",{parentName:"ul"},"Resumiendo:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Un observable en JavaScript es un objeto que permite a los desarrolladores manejar de manera eficiente y escalable m\xfaltiples peticiones as\xedncronas que pueden terminar en diferentes momentos temporales."),(0,r.yg)("li",{parentName:"ul"},"Un observable es como una promesa, pero en lugar de devolver un valor \xfanico, devuelve una secuencia de valores que se pueden recibir en diferentes momentos.")))),(0,r.yg)("h4",{id:"anatom\xeda-de-un-observable"},"Anatom\xeda de un Observable"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Los observables en JavaScript se crean utilizando el constructor Observable o alguno de los operadores de creaci\xf3n proporcionados por las bibliotecas de observables, como rxjs."),(0,r.yg)("li",{parentName:"ul"},"Despu\xe9s de crear un observable, se puede suscribir a \xe9l un objeto Observer que define las funciones next, error y complete para manejar los valores que el observable entrega."),(0,r.yg)("li",{parentName:"ul"},"El observable se ejecuta cuando se realiza la suscripci\xf3n y entrega los valores al objeto Observer seg\xfan su programaci\xf3n. Una vez que el observable ha completado su ejecuci\xf3n o se ha producido un error, la suscripci\xf3n se termina y ya no se reciben m\xe1s valores."),(0,r.yg)("li",{parentName:"ul"},"Hay cuatro conceptos cuando tratamos con Observables:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Creaci\xf3n de Observable"),(0,r.yg)("li",{parentName:"ul"},"Subscripci\xf3n a Observable"),(0,r.yg)("li",{parentName:"ul"},"Ejecuci\xf3n del Observable"),(0,r.yg)("li",{parentName:"ul"},"Desechando el Observable")))),(0,r.yg)("h4",{id:"creaci\xf3n-de-observable"},"Creaci\xf3n de Observable"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Primero, creamos un Observable por medio del m\xe8todo create:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const observable = Observable.create((subscriber) => {\n\n})\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},'El m\xe9todo create nos pide un callback para crear el "flujo de datos".'),(0,r.yg)("li",{parentName:"ul"},"El par\xe1metro que recibe el callback es una instancia de Subscriber, el cual implementa la interface Observer. Por medio de este Subscriber podemos enviar valores , errores y finalizar el flujo."),(0,r.yg)("li",{parentName:"ul"},"Por lo general se usan next , error y complete:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"next: Se ejecuta para enviar un valor. "),(0,r.yg)("li",{parentName:"ul"},"error: Se ejecuta para lanzar un error. "),(0,r.yg)("li",{parentName:"ul"},"complete: Se ejecuta para dar por finalizado el flujo."))),(0,r.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"subscriber.next('Un dato')\nsubscriber.next('Otro dato')\nsubscriber.next('\xdaltimo dato')\nsubscriber.complete()\nsubscriber.next('Me olvid\xe9 de este') // nunca se enviar\xe1\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Una vez que se hace llamado al m\xe9todo complete el subscriber no podr\xe1 emitir m\xe1s datos. Bien, ahora tenemos una cola con mensajes.")))),(0,r.yg)("h4",{id:"subscripci\xf3n-a-observable"},"Subscripci\xf3n a Observable"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Para poder acceder a los datos que tiene un Observable, tenemos que subscribirnos a \xe9l mediante un Observer. Un Observer es simplemente un objeto  que contiene tres m\xe9todos:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"next: este m\xe9todo acepta un argumento el cual es el dato enviado por el Observable."),(0,r.yg)("li",{parentName:"ul"},"error: este m\xe9todo tambi\xe9n tiene un argumento el cual es un error. Puede ser una subclase de Error o cualquier otro tipo de dato."),(0,r.yg)("li",{parentName:"ul"},"complete: este m\xe9todo es ejecutado cuando el Observable notifica que ya no hay m\xe1s valores que enviar osea cuando el observable ejecuta el complete().")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Veamos al Observable en acci\xf3n con un ejemplo:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const observer = {\n  next: value => console.log('Valor recibido: ', value),\n  error: err => console.error('Error encontrado: ', err),\n  complete: _ => console.log('Ya no hay m\xe1s valores por recibir')\n}\nobservable.subscribe(observer)\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Cuando llamas a ",(0,r.yg)("inlineCode",{parentName:"li"},"observable.subscribe(observer)"),", ocurren las siguientes cosas:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Suscripci\xf3n al flujo de datos: El observable comienza a emitir valores al observador. Cada vez que el observable emite un valor con next, la funci\xf3n next del observador se ejecuta."),(0,r.yg)("li",{parentName:"ul"},"Recibir valores: El observer recibe cada valor emitido por el observable y ejecuta la funci\xf3n next, pasando el valor emitido como argumento."),(0,r.yg)("li",{parentName:"ul"},"Manejar errores: Si el observable emite un error usando el m\xe9todo error, el observer ejecutar\xe1 su funci\xf3n error. Esto detiene la emisi\xf3n de m\xe1s valores."),(0,r.yg)("li",{parentName:"ul"},"Finalizar la emisi\xf3n: Cuando el observable termina su emisi\xf3n y ya no habr\xe1 m\xe1s valores, se ejecuta el m\xe9todo complete. Esto indica que el flujo de datos ha finalizado correctamente.")))))),(0,r.yg)("h4",{id:"abortando-subscripciones"},"Abortando subscripciones"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Las ejecuciones de un Observable pueden ser infinitas. Una pr\xe1ctica com\xfan que se desea para un Observer es abortar la ejecuci\xf3n cuando ya no necesitemos seguir observando valores. Para este prop\xf3sito est\xe1 la clase Subscription."),(0,r.yg)("li",{parentName:"ul"},"Cuando nos subscribimos a un observable, inmediatamente obtenemos una instancia de la clase Subscription, la cual, tiene entre su prototipo, al m\xe9todo unsubscribe. De esta manera, podemos detener la ejecuci\xf3n de un Observable.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const subscription = observable.subscribe(observer)\n// luego de un rato\nsubscription.unsubscribe()\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"As\xed ya no liberamos recursos usados por el Observable, optimizando nuestra aplicaci\xf3n.")))),(0,r.yg)("h4",{id:"rxjs"},"RxJS"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"RxJS es una biblioteca para programaci\xf3n reactiva que utiliza Observables, lo que facilita la composici\xf3n de c\xf3digo as\xedncrono o basado en callbacks. Permite manejar eventos, flujos y datos en  tiempo real de manera m\xe1s sencilla y eficiente."),(0,r.yg)("li",{parentName:"ul"},'RxJS es una herramienta que ayuda a manejar eventos y datos en tiempo real. Por ejemplo, si quieres realizar un seguimiento de los clics del rat\xf3n en una p\xe1gina web, puedes usar RxJS para crear un "flujo" de eventos de clic.'),(0,r.yg)("li",{parentName:"ul"},'Luego, puedes usar diferentes "operadores" para transformar o controlar este flujo de eventos. Por ejemplo, puedes usar un operador para filtrar solo los clics que ocurren en un \xe1rea espec\xedfica de la p\xe1gina, o un operador para limitar el n\xfamero de eventos que se procesan cada segundo.'),(0,r.yg)("li",{parentName:"ul"},'Adem\xe1s, RxJS te permite crear c\xf3digo m\xe1s "puro", lo que significa que es m\xe1s f\xe1cil de probar y depurar. En general, RxJS es una herramienta muy \xfatil para manejar eventos y datos en tiempo real en aplicaciones web y otras aplicaciones basadas en JavaScript.'),(0,r.yg)("li",{parentName:"ul"},"Ejemplo de un Observable en RxJS:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import { Observable } from 'rxjs';\n\n// Creamos un Observable que emite n\xfameros cada segundo\nconst observable = new Observable((observer) => {\n  let count = 0;\n  const intervalId = setInterval(() => {\n    observer.next(count);\n    count++;\n    if (count > 5) {\n      // Completamos el Observable despu\xe9s de emitir 5 valores\n      observer.complete();\n      clearInterval(intervalId);\n    }\n  }, 1000);\n});\n\n// Nos suscribimos al Observable para recibir notificaciones\nobservable.subscribe({\n  next: (value) => console.log(`Recibido: ${value}`),\n  error: (err) => console.error(`Error: ${err}`),\n  complete: () => console.log('Observable completado')\n});\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"RxJS tambi\xe9n te permite crear Observables a partir de eventos, como eventos de teclado o clic del mouse. Un ejemplo com\xfan es utilizar el operador fromEvent para convertir un evento en un Observable."),(0,r.yg)("li",{parentName:"ul"},"Aqu\xed te muestro un ejemplo de c\xf3mo crear un Observable a partir del evento click de un button:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'<button id="my-button">Clickeame</button>\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import { fromEvent } from 'rxjs';\n\nconst button = document.getElementById('my-button');\nconst clicks$ = fromEvent(button, 'click');\n\nclicks$.subscribe({\n  next: (event) => console.log('Se recibi\xf3 un clic'),\n  error: (err) => console.error(`Error: ${err}`),\n  complete: () => console.log('Observable completado')\n});\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"En este ejemplo, utilizamos el m\xe9todo fromEvent para convertir el evento click del bot\xf3n en un Observable. Cada vez que se produce un clic en el bot\xf3n, el Observable emite un valor y se ejecuta la funci\xf3n next del suscriptor."),(0,r.yg)("li",{parentName:"ul"},"En este ejemplo, el m\xe9todo error se ejecutar\xe1 solo si hay un error en la creaci\xf3n del Observable o en la emisi\xf3n de valores, y el m\xe9todo complete no se ejecutar\xe1 nunca.")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Pero, \xbfqu\xe9 pasa si queremos que el Observable se complete despu\xe9s de un cierto n\xfamero de clics? Puedes utilizar el operador take para lograrlo:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import { fromEvent } from 'rxjs';\n\nconst button = document.getElementById('my-button');\nconst clicks$ = fromEvent(button, 'click').pipe(take(5)); // Completa despu\xe9s de 5 clics\n\nclicks$.subscribe({\n  next: (event) => console.log('Se recibi\xf3 un clic'),\n  error: (err) => console.error(`Error: ${err}`),\n  complete: () => console.log('Observable completado despu\xe9s de 5 clics')\n});\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"En este caso, el Observable se completar\xe1 despu\xe9s de 5 clics, y se ejecutar\xe1 el m\xe9todo complete del suscriptor."),(0,r.yg)("li",{parentName:"ul"},"La funci\xf3n pipe permite a\xf1adirle operadores  al observable. En este caso, se utiliza el operador take(5), que limita el n\xfamero de emisiones del observable."),(0,r.yg)("li",{parentName:"ul"},"take(5): Este operador se asegura de que el observable solo emita 5 valores (es decir, solo responder\xe1 a los primeros 5 clics en el bot\xf3n). Despu\xe9s de esos 5 clics, el observable completar\xe1 su ejecuci\xf3n y ya no emitir\xe1 m\xe1s valores, ignorando clics futuros.")))),(0,r.yg)("h2",{id:"underscore"},"Underscore"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},'En JavaScript, el underscore  es una variable/parametro llamado "_" que se utiliza a menudo como una variable de desecho cuando no estamos interesados en el valor de una variable espec\xedfica.'),(0,r.yg)("li",{parentName:"ul"},"El underscore no tiene ning\xfan significado especial en JavaScript y se puede utilizar como cualquier otro nombre de variable o par\xe1metro. Sin embargo, se ha convertido en una convenci\xf3n com\xfan en la comunidad de JavaScript utilizar el underscore como un nombre de variable o par\xe1metro de desecho para indicar que no se va a utilizar el valor asignado a esa variable."),(0,r.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const observer = {\n  next: value => console.log('Valor recibido: ', value),\n  error: err => console.error('Error encontrado: ', err),\n  complete: _ => console.log('Ya no hay m\xe1s valores por recibir')\n}\nobservable.subscribe(observer)\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},'El underscore (_) se utiliza aqu\xed como un nombre de par\xe1metro "de desecho" para indicar que el par\xe1metro no se va a utilizar en la funci\xf3n. Esto es una convenci\xf3n com\xfan en JavaScript y otros lenguajes para indicar que un par\xe1metro no se va a utilizar.'),(0,r.yg)("li",{parentName:"ul"},"En otras palabras, el underscore (_) se utiliza aqu\xed para ignorar el par\xe1metro que se le pasa a la funci\xf3n complete, ya que no se necesita procesar informaci\xf3n adicional cuando el observable ha terminado de emitir valores.")))),(0,r.yg)("h2",{id:"decoradores"},"Decoradores"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Es un concepto que se aplica a varios lenguajes."),(0,r.yg)("li",{parentName:"ul"},"No es lo mismo que patr\xf3n decorador."),(0,r.yg)("li",{parentName:"ul"},"Te permite \u201cextender/modificar\u201d las clases, con nuevos (y si existe remplazarlo) campos, m\xe9todos, getters, setters , etc.. Por lo tanto, se podr\xeda decir que sirve para a\xf1adir/modificar/remplazar funcionalidades."),(0,r.yg)("li",{parentName:"ul"},"El decorador se define con una AROBBA (@) al comienzo. "),(0,r.yg)("li",{parentName:"ul"},"El decorador es una funci\xf3n."),(0,r.yg)("li",{parentName:"ul"},"Ejemplo de decorador que modifica toda una clase:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'@defineElement("my-class")\nclass C extends HTMLElement {\n  @reactive accessor clicked = false;\n}\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Los decoradores se pueden aplicar en:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Clases"),(0,r.yg)("li",{parentName:"ul"},"Campos de clase "),(0,r.yg)("li",{parentName:"ul"},"M\xe9todos de clases"),(0,r.yg)("li",{parentName:"ul"},"Accesores de clases")))),(0,r.yg)("h4",{id:"ejemplo"},"Ejemplo"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'function logger(value , context) {\n console.log(\'decorator called!\')\n console.log("value" , value)\n console.log("context" , context)\n}\n\n@logger\nclass Persona {\n}\n\n\n')),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Un decorador es una funci\xf3n que contiene dos par\xe1metros:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"value: Contiene lo que estamos decorando, el elemento al que se aplica el decorador. En el ejemplo contiene una funci\xf3n constructora (clase)."),(0,r.yg)("li",{parentName:"ul"},"context : Nos da informaci\xf3n sobre que es lo que estamos decorando (el elemento)."))),(0,r.yg)("li",{parentName:"ul"},"El decorador se aplica siguiendo la sintaxis: @NombreDecorador"),(0,r.yg)("li",{parentName:"ul"},"Los decoradores se ejecutan en el momento en el que se eval\xfaa la clase. Por lo tanto, lo que contiene la funci\xf3n se va a ejecutar cuando se evalu\xe9 ese c\xf3digo y no cuando se instancie un objeto.")))),(0,r.yg)("h4",{id:"modificamos-el-ejemplo-anterior"},"Modificamos el ejemplo anterior"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'function logger(value , context) {\n console.log(\'decorator called!\')\n console.log("value" , value)\n console.log("context" , context)\n}\n\n@logger // type = class\nclass Persona {\n\n    @logger\n    weight = 75 // kind = field\n    \n    @logger\n    getWeight() { // kind = method\n     return this.weight\n    }\n    \n    \n    @logger\n    get peso() {  // kind = getter\n      return this.weight;\n    }\n    \n    @logger\n    set setPeso(value) {  // kind = setter\n         this.weight = value;\n    }\n\n}\n\n\n')),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"En el field, el value es undefined ya que los decoradores se ejecutan cuando \u201cse eval\xfaa el c\xf3digo, no cuando se ejecuta\u201d y por lo tanto todavia no se sabe el valor del campo.")))),(0,r.yg)("h4",{id:"extender-m\xe9todo"},"Extender m\xe9todo"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"El c\xf3digo del decorador puede ser:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"function logger(value , {name, kind}) {\n   console.log('Decorated called')\n  if (kind === 'method') {\n     return function(...args) {\n      console.log(`Logging ${name} execution with arguments ${args.join(',')}`)\n      const returnedValue = value.call(this , ...args);\n      console.log(`End execution after returning ${returnedValue}`);\n     }\n  }\n}\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"En este ejemplo modificamos todos los m\xe9todos de la clase (que solo hay uno llamado getWeight)."),(0,r.yg)("li",{parentName:"ul"},"This en la complicaci\xf3n no tiene valor porque no est\xe1 asociado a ninguna clase, pero en tiempo de ejecuci\xf3n se refiere a la instancia que invoco el m\xe9todo."),(0,r.yg)("li",{parentName:"ul"},"Sin embargo, cuando se evalu\xe9 el m\xe9todo: El primer console.log se mostrar\xe1, pero la funci\xf3n que devolvemos no se ejecutar\xe1 hasta que invoquemos al m\xe9todo en una instancia."),(0,r.yg)("li",{parentName:"ul"},"Para resumir:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"El console.log    console.log('Decorated called') se ejecuta al evaluar el elemento \u201cdecorado\u201d."),(0,r.yg)("li",{parentName:"ul"},"La funci\xf3n que se devuelve se ejecuta cuando de verdad se llame al m\xe9todo. ")))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Ejecutamos el m\xe9todo modificado:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const p = new Persona();\np.getWeight();\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"Al ejecutar getWeight() invocamos el m\xe9todo que devolvimos en el decorador"))),(0,r.yg)("h4",{id:"decorator-factory"},"Decorator Factory"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Podes a\xf1adirle par\xe1metros al decorador poni\xe9ndole argumentos a la funci\xf3n:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const logger = (logerName) => function (value , {name, kind}) {\n   console.log('Decorated called')\n  if (kind === 'method') {\n     return function(...args) {\n      console.log(`Logging ${logerName} execution with arguments ${args.join(',')}`)\n      const returnedValue = value.call(this , ...args);\n      console.log(`End execution after returning ${returnedValue}`);\n     }\n  }\n}\n\n\n\nclass Persona {\n\n\n    weight = 75 // kind = field\n    \n    @logger('metodos')\n    getWeight() { // kind = method\n     return this.weight\n    }\n    \n    \n\n    get peso() {  // kind = getter\n      return this.weight;\n    }\n    \n  \n    set setPeso(value) {  // kind = setter\n         this.weight = value;\n    }\n\n}\n\nconst p = new Persona();\np.getWeight();\n\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Al decorador le pod\xe9s pasar un par\xe1metro."),(0,r.yg)("li",{parentName:"ul"},"Se llama Decorator Factory porque el m\xe9todo devuelve un decorador, \xf3sea lo crea. ")))),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/tc39/proposal-decorators"},"Decorators")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/tc39/proposal-decorator-metadata"},"Decorator Metadata"))))),(0,r.yg)("h2",{id:"patron-decorador"},"Patron decorador"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},'El patr\xf3n decorador es un patr\xf3n de dise\xf1o estructural que permite a\xf1adir funcionalidades a un objeto de manera din\xe1mica sin alterar su estructura original. Se utiliza para "envolver" un objeto con otro objeto decorador que agrega nuevas responsabilidades.')),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Patron")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Un patr\xf3n de dise\xf1o es una soluci\xf3n general y reutilizable a un problema com\xfan. Estos patrones no son c\xf3digo espec\xedfico, sino gu\xedas o enfoques que pueden ser adaptados y aplicados a diferentes situaciones de programaci\xf3n para resolver problemas de dise\xf1o recurrentes."),(0,r.yg)("li",{parentName:"ul"},"Un patr\xf3n estructural se enfoca en c\xf3mo se relacionan y se organizan las clases y los objetos para formar estructuras m\xe1s grandes. Estos patrones ayudan a garantizar que, si cambias la estructura interna de un sistema, el impacto en otras partes del sistema sea m\xednimo.")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"En este patr\xf3n, tienes una clase base y una serie de clases decoradoras que implementan la misma interfaz o heredan de la misma clase base. Cada decorador agrega o modifica el comportamiento del objeto al que envuelve. Puedes encadenar varios decoradores para a\xf1adir m\xfaltiples capas de funcionalidad."),(0,r.yg)("li",{parentName:"ul"},"El patr\xf3n decorador es una forma de componer objetos para extender su funcionalidad de manera din\xe1mica y flexible, permitiendo m\xfaltiples combinaciones de comportamiento.")),(0,r.yg)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Es diferente a un decorador en Typescript que es una caracter\xedstica del lenguaje que permite a\xf1adir meta-informaci\xf3n o modificar la definici\xf3n de clases, m\xe9todos, propiedades, o par\xe1metros mediante una funci\xf3n especial."),(0,r.yg)("li",{parentName:"ul"},"En un patr\xf3n decorador se puede utilizar un decorador en el sentido de que se puede envolver un objeto con otros objetos que a\xf1aden funcionalidades adicionales. Sin embargo, el uso de decoradores en el sentido de la programaci\xf3n orientada a objetos (como en TypeScript) no es necesario para implementar el patr\xf3n decorador. ")))),(0,r.yg)("h2",{id:"nan"},"NaN"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},'NaN en JavaScript significa "Not-a-Number" (no es un n\xfamero) y es un valor especial que se utiliza para indicar que no es un n\xfamero v\xe1lido. '),(0,r.yg)("li",{parentName:"ul"},"NaN puede aparecer en varias situaciones.")),(0,r.yg)("h4",{id:"operaciones-matem\xe1ticas-inv\xe1lidas"},"Operaciones matem\xe1ticas inv\xe1lidas"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Realizar una operaci\xf3n cuyo resultado no puede convertirse en un n\xfamero:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"let result = 0 / 0; // NaN, porque dividir cero entre cero no tiene un valor num\xe9rico definido.\n")),(0,r.yg)("h4",{id:"convertir-cadenas-que-no-son-n\xfameros"},"Convertir cadenas que no son n\xfameros"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Usar parseInt o parseFloat en una cadena que no se puede convertir a un n\xfamero:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'let value = parseInt("abc"); // NaN, porque "abc" no es un n\xfamero.\n')),(0,r.yg)("h4",{id:"resultados-de-operaciones-no-num\xe9ricas"},"Resultados de operaciones no num\xe9ricas"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Cualquier operaci\xf3n matem\xe1tica que involucre NaN tambi\xe9n resultar\xe1 en NaN:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"let value = NaN + 5; // NaN, porque cualquier operaci\xf3n con NaN resulta en NaN.\n")),(0,r.yg)("h4",{id:"c\xf3mo-comprobar-si-un-valor-es-nan"},"\xbfC\xf3mo comprobar si un valor es NaN?"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Para verificar si un valor es NaN, puedes usar la funci\xf3n isNaN(), que devuelve true si el valor es NaN. Sin embargo, hay una forma m\xe1s precisa de comprobarlo:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Usar Number.isNaN(), que solo devuelve true si el valor es realmente NaN y no coerciona otros tipos de datos.")))))}m.isMDXComponent=!0}}]);