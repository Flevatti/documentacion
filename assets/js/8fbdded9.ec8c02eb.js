"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[4307],{5680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>g});var o=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=o.createContext({}),c=function(e){var a=o.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=c(e.components);return o.createElement(l.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,s=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(n),p=t,g=u["".concat(l,".").concat(p)]||u[p]||m[p]||s;return n?o.createElement(g,i(i({ref:a},d),{},{components:n})):o.createElement(g,i({ref:a},d))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=n.length,i=new Array(s);i[0]=p;var r={};for(var l in a)hasOwnProperty.call(a,l)&&(r[l]=a[l]);r.originalType=e,r[u]="string"==typeof e?e:t,i[1]=r;for(var c=2;c<s;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8931:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var o=n(8168),t=(n(6540),n(5680));const s={sidebar_position:11},i="Hooks y CSS",r={unversionedId:"React/hookcss",id:"React/hookcss",title:"Hooks y CSS",description:'- Un hook es una funci\xf3n especial de React que te permite "enganchar" (de ah\xed el t\xe9rmino hook, que significa gancho) funcionalidades de React, como el manejo de estado y el ciclo de vida, en componentes funcionales.',source:"@site/docs/React/hookcss.md",sourceDirName:"React",slug:"/React/hookcss",permalink:"/documentacion/docs/React/hookcss",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/hookcss.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"React",previous:{title:"Proyecto",permalink:"/documentacion/docs/React/proyecto"},next:{title:"Otros",permalink:"/documentacion/docs/React/otros"}},l={},c=[{value:"\xbfQu\xe9 significa &quot;enganchar&quot; (hook) funcionalidades?",id:"qu\xe9-significa-enganchar-hook-funcionalidades",level:4},{value:"Caracter\xedsticas principales de los hooks",id:"caracter\xedsticas-principales-de-los-hooks",level:4},{value:"Reglas fundamentales de los hooks",id:"reglas-fundamentales-de-los-hooks",level:4},{value:"Analog\xeda: Los hooks como herramientas especializadas",id:"analog\xeda-los-hooks-como-herramientas-especializadas",level:4},{value:"\xbfQu\xe9 es un hook personalizado?",id:"qu\xe9-es-un-hook-personalizado",level:4},{value:"\xbfCu\xe1les son las condiciones para crear un hook personalizado?",id:"cu\xe1les-son-las-condiciones-para-crear-un-hook-personalizado",level:4},{value:"\xbfQu\xe9 se hace en un hook personalizado?",id:"qu\xe9-se-hace-en-un-hook-personalizado",level:4},{value:"\xbfQu\xe9 debe retornar un hook personalizado?",id:"qu\xe9-debe-retornar-un-hook-personalizado",level:4},{value:"\xbfQu\xe9 no debe retornar?",id:"qu\xe9-no-debe-retornar",level:4},{value:"Hooks personalizado",id:"hooks-personalizado",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Convertimos el c\xf3digo anterior en un Hook",id:"convertimos-el-c\xf3digo-anterior-en-un-hook",level:4},{value:"Hoks basicos",id:"hoks-basicos",level:2},{value:"useState",id:"usestate",level:3},{value:"Cuando una variable regular no es suficiente",id:"cuando-una-variable-regular-no-es-suficiente",level:4},{value:"Agregar una variable de estado",id:"agregar-una-variable-de-estado",level:4},{value:"Anatom\xeda del useState",id:"anatom\xeda-del-usestate",level:4},{value:"Colocar m\xfaltiples variables de estado a un componente",id:"colocar-m\xfaltiples-variables-de-estado-a-un-componente",level:4},{value:"\xbfC\xf3mo sabe React qu\xe9 estado devolver?",id:"c\xf3mo-sabe-react-qu\xe9-estado-devolver",level:4},{value:"\xbfComo detecta el orden?",id:"como-detecta-el-orden",level:5},{value:"El estado es aislado y privado",id:"el-estado-es-aislado-y-privado",level:4},{value:"Ejemplo",id:"ejemplo-1",level:5},{value:"Referencia",id:"referencia",level:4},{value:"La funci\xf3n set(nuevovalor)",id:"la-funci\xf3n-setnuevovalor",level:4},{value:"React pone la funci\xf3n de actualizaci\xf3n en una &quot;cola&quot;",id:"react-pone-la-funci\xf3n-de-actualizaci\xf3n-en-una-cola",level:4},{value:"Ejemplo",id:"ejemplo-2",level:5},{value:"En resumen:",id:"en-resumen",level:5},{value:"Ejemplo",id:"ejemplo-3",level:4},{value:"Contador",id:"contador",level:5},{value:"Actualizaci\xf3n en base al estado anterior",id:"actualizaci\xf3n-en-base-al-estado-anterior",level:5},{value:"Actualizaci\xf3n de objetos y arrays en UNA VARIABLE DE ESTADO",id:"actualizaci\xf3n-de-objetos-y-arrays-en-una-variable-de-estado",level:4},{value:"Evitar recrear el estado inicial",id:"evitar-recrear-el-estado-inicial",level:4},{value:"Reinicio del estado con una key",id:"reinicio-del-estado-con-una-key",level:4},{value:"Almacenamiento de informaci\xf3n de renderizados anteriores",id:"almacenamiento-de-informaci\xf3n-de-renderizados-anteriores",level:4},{value:"useEffect",id:"useeffect",level:3},{value:"C\xf3mo escribir un efecto",id:"c\xf3mo-escribir-un-efecto",level:4},{value:"1- Declarar un efecto",id:"1--declarar-un-efecto",level:4},{value:"2- Dependencias del Efecto",id:"2--dependencias-del-efecto",level:4},{value:"3- A\xf1ade limpieza si es necesario",id:"3--a\xf1ade-limpieza-si-es-necesario",level:4},{value:"useContext",id:"usecontext",level:3},{value:"Hooks Adicionales",id:"hooks-adicionales",level:2},{value:"useReducer",id:"usereducer",level:3},{value:"useCallback",id:"usecallback",level:3},{value:"Codigo sin Usecallback",id:"codigo-sin-usecallback",level:4},{value:"Solucionamos el problema con el useCallback",id:"solucionamos-el-problema-con-el-usecallback",level:4},{value:"useMemo",id:"usememo",level:3},{value:"Ejemplo",id:"ejemplo-4",level:4},{value:"Otro Ejemplo",id:"otro-ejemplo",level:4},{value:"useRef",id:"useref",level:3},{value:"useImperativeHandle",id:"useimperativehandle",level:3},{value:"Ejemplo",id:"ejemplo-5",level:4},{value:"useLayoutEffect",id:"uselayouteffect",level:3},{value:"useEffect",id:"useeffect-1",level:4},{value:"useLayoutEffect",id:"uselayouteffect-1",level:4},{value:"Ejemplo",id:"ejemplo-6",level:4},{value:"useDebugValue",id:"usedebugvalue",level:3},{value:"Mas info",id:"mas-info",level:4},{value:"useDeferredValue",id:"usedeferredvalue",level:3},{value:"Mas info",id:"mas-info-1",level:4},{value:"Ejemplo",id:"ejemplo-7",level:4},{value:"\xbfQuien se actualiza Primero?",id:"quien-se-actualiza-primero",level:4},{value:"useTransition",id:"usetransition",level:3},{value:"Problema",id:"problema",level:4},{value:"El hook useTransition",id:"el-hook-usetransition",level:4},{value:"Ejemplo",id:"ejemplo-8",level:4},{value:"Ahora usamos el isPending para realizar un Loading",id:"ahora-usamos-el-ispending-para-realizar-un-loading",level:4},{value:"useID",id:"useid",level:3},{value:"Info de hooks",id:"info-de-hooks",level:2},{value:"Formas de a\xf1adir CSS",id:"formas-de-a\xf1adir-css",level:2},{value:"Hoja de estilos externas",id:"hoja-de-estilos-externas",level:3},{value:"Ventajas",id:"ventajas",level:4},{value:"Contras",id:"contras",level:4},{value:"CSS Inline",id:"css-inline",level:3},{value:"De forma tradicional",id:"de-forma-tradicional",level:4},{value:"Declarando los estilos como un objeto",id:"declarando-los-estilos-como-un-objeto",level:4},{value:"Ventajas",id:"ventajas-1",level:4},{value:"Contras",id:"contras-1",level:4},{value:"Module CSS",id:"module-css",level:3},{value:"Ejemplo",id:"ejemplo-9",level:4},{value:"Ventajas",id:"ventajas-2",level:4},{value:"Contras",id:"contras-2",level:4},{value:"CSS in JS",id:"css-in-js",level:3},{value:"Ventajas",id:"ventajas-3",level:4},{value:"Contras",id:"contras-3",level:4},{value:"Preprocesadores",id:"preprocesadores",level:3},{value:"Ventajas",id:"ventajas-4",level:4},{value:"Contras",id:"contras-4",level:4},{value:"Frameworks de interfaz de usuario",id:"frameworks-de-interfaz-de-usuario",level:3},{value:"Componentes en clases",id:"componentes-en-clases",level:2},{value:"\xbfQu\xe9 pasa si le agrego clases a un componente?",id:"qu\xe9-pasa-si-le-agrego-clases-a-un-componente",level:4},{value:"NO PASA NADA , NO SE PUEDE",id:"no-pasa-nada--no-se-puede",level:4}],d={toc:c},u="wrapper";function m(e){let{components:a,...n}=e;return(0,t.yg)(u,(0,o.A)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"hooks-y-css"},"Hooks y CSS"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Un hook es una funci\xf3n especial de React que te permite "enganchar" (de ah\xed el t\xe9rmino hook, que significa gancho) funcionalidades de React, como el manejo de estado y el ciclo de vida, en componentes funcionales.'),(0,t.yg)("li",{parentName:"ul"},"Los hooks no funcionan dentro de las clases."),(0,t.yg)("li",{parentName:"ul"},"Proporcionan un estado y un ciclo de vida a los componentes evit\xe1ndonos a los desarrolladores el uso de las clases."),(0,t.yg)("li",{parentName:"ul"},"Tambi\xe9n puedes crear tus propios Hooks para reutilizar logica.")),(0,t.yg)("h4",{id:"qu\xe9-significa-enganchar-hook-funcionalidades"},'\xbfQu\xe9 significa "enganchar" (hook) funcionalidades?'),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'El t\xe9rmino "enganchar" viene del ingl\xe9s hook, que significa gancho. La idea es que puedes "enganchar" o conectar (usar) funcionalidades avanzadas de React (como estado, ciclo de vida, contexto, etc.) dentro de un componente funcional.'),(0,t.yg)("li",{parentName:"ul"},"En otras palabras, los hooks nos permite usar funcionalidades avanzadas (como estado, ciclo de vida, contexto, etc.) dentro de componentes funcionales, que antes solo estaban disponibles en los componentes de clase. Cada Hook tiene una funcionalidad concreta de React."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Hook"),(0,t.yg)("th",{parentName:"tr",align:null},"Funcionalidad que te brinda"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useState"),(0,t.yg)("td",{parentName:"tr",align:null},"Crear y manejar estado.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useEffect"),(0,t.yg)("td",{parentName:"tr",align:null},"Manejar efectos secundarios y el ciclo de vida.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useContext"),(0,t.yg)("td",{parentName:"tr",align:null},"Acceder a datos globales (compartidos entre componentes).")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useRef"),(0,t.yg)("td",{parentName:"tr",align:null},"Crear referencias al DOM o guardar datos persistentes.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useReducer"),(0,t.yg)("td",{parentName:"tr",align:null},"Manejar estado complejo con l\xf3gica basada en acciones.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Antes de los hooks, estas funcionalidades solo estaban disponibles en los componentes de clase. Con los hooks, puedes escribir componentes m\xe1s simples y reutilizables usando funciones."),(0,t.yg)("li",{parentName:"ul"},"Un hook en React es una funci\xf3n especial que te permite usar caracter\xedsticas avanzadas de React, como el manejo del estado o el ciclo de vida, en componentes funcionales. Los hooks son una de las mayores innovaciones en React porque unifican y simplifican la forma en que interactuamos con el framework, eliminando la necesidad de componentes de clase para manejar funcionalidades complejas.")),(0,t.yg)("h4",{id:"caracter\xedsticas-principales-de-los-hooks"},"Caracter\xedsticas principales de los hooks"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Funciones puras: Los hooks son simples funciones que puedes usar dentro de componentes funcionales."),(0,t.yg)("li",{parentName:"ol"},"Declarativos: No necesitas escribir c\xf3digo adicional para manejar estados o ciclos de vida. Los hooks lo hacen de forma natural y legible."),(0,t.yg)("li",{parentName:"ol"},"Reutilizables: Puedes crear tus propios hooks personalizados para encapsular l\xf3gica repetitiva y usarlos en diferentes componentes.")),(0,t.yg)("h4",{id:"reglas-fundamentales-de-los-hooks"},"Reglas fundamentales de los hooks"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Solo se pueden usar dentro de funciones de React: No puedes usarlos fuera de un componente funcional ni en funciones regulares."),(0,t.yg)("li",{parentName:"ol"},"Llamados en el mismo orden: React necesita que los hooks se llamen en el mismo orden en cada renderizaci\xf3n de un componente. Esto es porque React usa ese orden para asociar correctamente el estado y otros valores a cada hook.  Si cambias el orden de los hooks (por ejemplo, al usarlos dentro de condicionales), React puede perder la referencia de qu\xe9 estado pertenece a cada hook."),(0,t.yg)("li",{parentName:"ol"},"No usar condicionales: No puedes llamar hooks dentro de if, for,  bloques condicionales o bucles. Siempre deben estar al nivel superior de tu componente.")),(0,t.yg)("h4",{id:"analog\xeda-los-hooks-como-herramientas-especializadas"},"Analog\xeda: Los hooks como herramientas especializadas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Imagina que est\xe1s construyendo una casa y tienes un conjunto de herramientas:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"useState: Es como un destornillador: simple y esencial para ajustar (manejar) cosas r\xe1pidamente."),(0,t.yg)("li",{parentName:"ul"},"useEffect: Es como un taladro el\xe9ctrico: lo usas para acciones m\xe1s pesadas (como hacer agujeros, que ser\xedan efectos secundarios)."),(0,t.yg)("li",{parentName:"ul"},"useContext: Es como un sistema de tuber\xedas: permite que el agua (datos) fluya entre las habitaciones (componentes) sin pasar por todos los pisos."),(0,t.yg)("li",{parentName:"ul"},"useRef: Es como una caja de herramientas que guarda cosas importantes para usar despu\xe9s, sin afectar el trabajo actual."),(0,t.yg)("li",{parentName:"ul"},"useReducer: Es como una herramienta multifunci\xf3n: m\xe1s compleja, pero poderosa cuando necesitas manejar tareas avanzadas.")))),(0,t.yg)("h4",{id:"qu\xe9-es-un-hook-personalizado"},"\xbfQu\xe9 es un hook personalizado?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado (custom hook) es una funci\xf3n que creas para encapsular l\xf3gica que se repite o que deseas reutilizar entre varios componentes."),(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado resuelve un problema o realiza una tarea espec\xedfica, y puedes usarlo en cualquier componente que lo necesite."),(0,t.yg)("li",{parentName:"ul"},"En lugar de duplicar la l\xf3gica en m\xfaltiples componentes, la extraes a un hook personalizado, lo que hace que el c\xf3digo sea m\xe1s legible, reutilizable y f\xe1cil de mantener."),(0,t.yg)("li",{parentName:"ul"},"Los hooks personalizados encapsulan l\xf3gica que puede ser utilizada por varios componentes, como manejar formularios, realizar peticiones HTTP, etc.")),(0,t.yg)("h4",{id:"cu\xe1les-son-las-condiciones-para-crear-un-hook-personalizado"},"\xbfCu\xe1les son las condiciones para crear un hook personalizado?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado no es m\xe1s que una funci\xf3n de JavaScript que:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Sigue las reglas de los hooks:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"No debe llamarse dentro de bucles, condicionales o funciones anidadas."),(0,t.yg)("li",{parentName:"ul"},"Debe ser llamado al nivel superior de un componente o de otro hook."))),(0,t.yg)("li",{parentName:"ol"},"Puede utilizar otros hooks est\xe1ndar:\nPor ejemplo, useState, useEffect, useReducer, etc., para encapsular l\xf3gica m\xe1s compleja."),(0,t.yg)("li",{parentName:"ol"},"Debe comenzar con el prefijo use:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Esto es una convenci\xf3n para que React lo identifique como un hook y pueda rastrear correctamente su estado y efectos."))),(0,t.yg)("li",{parentName:"ol"},"Debe ser reutilizable.")))),(0,t.yg)("h4",{id:"qu\xe9-se-hace-en-un-hook-personalizado"},"\xbfQu\xe9 se hace en un hook personalizado?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En un hook personalizado, puedes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Manejar estado: Usando hooks como useState o useReducer."),(0,t.yg)("li",{parentName:"ul"},"Realizar efectos secundarios: Usando hooks como useEffect."),(0,t.yg)("li",{parentName:"ul"},"Encapsular l\xf3gica repetitiva: Haciendo que sea f\xe1cil de reutilizar en m\xfaltiples componentes."))),(0,t.yg)("li",{parentName:"ul"},"En esencia, un hook personalizado es una abstracci\xf3n. En lugar de escribir la l\xf3gica directamente dentro de un componente, la extraes a una funci\xf3n independiente para simplificar el componente y mejorar la reutilizaci\xf3n.")),(0,t.yg)("h4",{id:"qu\xe9-debe-retornar-un-hook-personalizado"},"\xbfQu\xe9 debe retornar un hook personalizado?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado debe retornar lo que devuelve otros hooks de React, como useState, useEffect, useReducer, o cualquier otro, pero no el hook en s\xed."),(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado puede retornar:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Datos: Por ejemplo, el estado (el valor que retorna useState)."),(0,t.yg)("li",{parentName:"ol"},"Funciones: Por ejemplo, La acci\xf3n que modifica el estado (la funci\xf3n que devuelve useState)."),(0,t.yg)("li",{parentName:"ol"},"Cualquier combinaci\xf3n de ambos: Puedes retornar tanto datos como funciones, dependiendo de la l\xf3gica que encapsule el hook.")))),(0,t.yg)("h4",{id:"qu\xe9-no-debe-retornar"},"\xbfQu\xe9 no debe retornar?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un hook personalizado no deber\xeda retornar directamente los hooks est\xe1ndar de React (useState, useEffect, etc.)."),(0,t.yg)("li",{parentName:"ul"},"Esto es porque:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Los hooks est\xe1ndar est\xe1n dise\xf1ados para ser utilizados dentro de un componente o de otro hook."),(0,t.yg)("li",{parentName:"ul"},"Retornarlos directamente expone su implementaci\xf3n interna y podr\xeda llevar a errores al no seguir las reglas de los hooks.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Los ejemplos de esta documentaci\xf3n pueden estar escritos en TypeScript.")))),(0,t.yg)("h2",{id:"hooks-personalizado"},"Hooks personalizado"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Construir tus propios Hooks te permite extraer la l\xf3gica del componente en funciones reutilizables."),(0,t.yg)("li",{parentName:"ul"},"Nos permite utilizar los hook para crear una l\xf3gica reutilizable."),(0,t.yg)("li",{parentName:"ul"},"Un Hook personalizado es una funci\xf3n de JavaScript cuyo nombre comienza con \u201duse\u201d y que puede llamar a otros Hooks")),(0,t.yg)("h4",{id:"ejemplo"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [active , setActive] = useState(false);\n  const handleToggle = () => {\n    setActive(!active)\n  } \n  const handleFalse = () => {\n    setActive(false)\n  }\n  const handleTrue = () => {\n    setActive(true)\n  }\n  return (\n    <div className=\"App\">\n      <h1>Componente Principal</h1>\n       <button onClick={handleToggle }>Toggle</button>\n       <button onClick={handleFalse }>False</button>\n       <button onClick={handleTrue }>True</button>\n       {active.toString()}\n    </div>\n  );\n}\n\nexport default App;\n\n")),(0,t.yg)("h4",{id:"convertimos-el-c\xf3digo-anterior-en-un-hook"},"Convertimos el c\xf3digo anterior en un Hook"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los hooks personalizados son funciones que retornan un estado."),(0,t.yg)("li",{parentName:"ul"},"Los hooks personalizados Retornan:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Un estado creado por un/varios hook de React "),(0,t.yg)("li",{parentName:"ul"},"funciones/m\xe9todos que modifiquen el estado que se retorna."))),(0,t.yg)("li",{parentName:"ul"},"En pocas palabras, retorna hooks de React y funciones que modifiquen estos hooks."),(0,t.yg)("li",{parentName:"ul"},"Reglas que contienen los hook:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Empiezan con la palabra \u201cuse\u201d en min\xfascula y el resto en CamelCase"),(0,t.yg)("li",{parentName:"ul"},"Adentro del hook personalizado debe existir hooks de React (useState , etc)")))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\n\nimport './App.css';\nimport { useState } from 'react';\nfunction  useMiHook() {\n  const [active , setActive] = useState(false);\n  const handleToggle = () => {\n    setActive(!active)\n  } \n  const handleFalse = () => {\n    setActive(false)\n  }\n  const handleTrue = () => {\n    setActive(true)\n  }\n\n  return {active , handleToggle , handleFalse , handleTrue }\n}\nfunction App() {\n  const {active , handleToggle , handleFalse , handleTrue } = useMiHook()\n  return (\n    <div className=\"App\">\n      <h1>Componente Principal</h1>\n       <button onClick={handleToggle }>Toggle</button>\n       <button onClick={handleFalse }>False</button>\n       <button onClick={handleTrue }>True</button>\n       {active.toString()}\n    </div>\n  );\n}\n\nexport default App;\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El hook retorna una variable de estado creada con useState y funciones que modifiquen el estado."),(0,t.yg)("li",{parentName:"ul"},"El componente principal utiliza el hook.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Si dos componentes utilizan el mismo hook, el ESTADO que devuelve este va a ser independiente del otro."))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Los hooks pueden tener parametros."))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Los hooks de React que debe utilizar uno personalizado puede ser cualquiera (UseState , useEffect , y cualquier otro useXXXX que venga de React)."))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Los hooks Personalizados pueden devolver un arreglo (como el de useState)  o un objeto."))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Documentaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.reactjs.org/docs/hooks-custom.html"},"Construyendo tus propios Hooks (antiguo)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/reusing-logic-with-custom-hooks"},"Reutilizar la l\xf3gica con Hooks personalizados"))))),(0,t.yg)("h2",{id:"hoks-basicos"},"Hoks basicos"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los hooks b\xe1sicos son los m\xe1s comunes y esenciales para construir aplicaciones en React.")),(0,t.yg)("h3",{id:"usestate"},"useState"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los componentes a menudo necesitan cambiar lo que se muestra en pantalla como resultado de una interacci\xf3n. Escribir dentro de un formulario deber\xeda actualizar el campo de texto, hacer clic en \xabsiguiente\xbb en un carrusel de im\xe1genes deber\xeda cambiar la imagen que es mostrada; hacer clic en un bot\xf3n para comprar un producto deber\xeda actualizar el carrito de compras. En los ejemplos anteriores los componentes deben \xabrecordar\xbb cosas: el campo de texto, la imagen actual, el carrito de compras. En React, a este tipo de memoria de los componentes se le conoce como estado.")),(0,t.yg)("h4",{id:"cuando-una-variable-regular-no-es-suficiente"},"Cuando una variable regular no es suficiente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Aqu\xed hay un componente que renderiza una imagen de una escultura. Al hacer clic en el bot\xf3n \xabSiguiente\xbb, deber\xeda mostrarse la siguiente escultura cambiando el \xedndice index a 1, luego a 2, y as\xed sucesivamente. Sin embargo, esto no funcionar\xe1 (\xa1puedes intentarlo!):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="data.js"',title:'"data.js"'},"export const sculptureList = [{\n  name: 'Homenaje a la neurocirug\xeda',\n  artist: 'Marta Colvin Andrade',\n  description: 'Aunque Colvin es predominantemente conocida por temas abstractos que aluden a s\xedmbolos prehisp\xe1nicos, esta gigantesca escultura, un homenaje a la neurocirug\xeda, es una de sus obras de arte p\xfablico m\xe1s reconocibles.',\n  url: 'https://i.imgur.com/Mx7dA2Y.jpg',\n  alt: 'Una estatua de bronce de dos manos cruzadas sosteniendo delicadamente un cerebro humano en la punta de sus dedos.'\n}, {\n  name: 'Floralis gen\xe9rica',\n  artist: 'Eduardo Catalano',\n  description: 'Esta enorme flor plateada (75 pies o 23 m) se encuentra en Buenos Aires. Est\xe1 dise\xf1ado para moverse, cerrando sus p\xe9talos por la tarde o cuando soplan fuertes vientos y abri\xe9ndolos por la ma\xf1ana.',\n  url: 'https://i.imgur.com/ZF6s192m.jpg',\n  alt: 'Una gigantesca escultura de flor met\xe1lica con p\xe9talos reflectantes como espejos y fuertes estambres.'\n}, {\n  name: 'Presencia eterna',\n  artist: 'John Woodrow Wilson',\n  description: 'Wilson era conocido por su preocupaci\xf3n por la igualdad, la justicia social, as\xed como por las cualidades esenciales y espirituales de la humanidad. Este bronce masivo (7 pies o 2,13 m) representa lo que \xe9l describi\xf3 como \"una presencia negra simb\xf3lica infundida con un sentido de humanidad universal\".\"',\n  url: 'https://i.imgur.com/aTtVpES.jpg',\n  alt: 'La escultura que representa una cabeza humana parece omnipresente y solemne. Irradia calma y serenidad.'\n}, {\n  name: 'Mo\xe1i',\n  artist: 'Artista desconocido',\n  description: 'Ubicados en la Isla de Pascua, hay 1,000 mo\xe1i, o estatuas monumentales existentes, creadas por los primeros rapanui , que algunos creen que representan a ancestros deificados.',\n  url: 'https://i.imgur.com/RCwLEoQm.jpg',\n  alt: 'Tres bustos monumentales de piedra con las cabezas desproporcionadamente grandes con rostros sombr\xedos.'\n}, {\n  name: 'Nana azul',\n  artist: 'Niki de Saint Phalle',\n  description: 'Las Nanas son criaturas triunfantes, s\xedmbolos de feminidad y maternidad. En un principio, Saint Phalle utilizaba telas y objetos encontrados para las Nanas, y m\xe1s tarde introdujo el poli\xe9ster para conseguir un efecto m\xe1s vibrante.',\n  url: 'https://i.imgur.com/Sd1AgUOm.jpg',\n  alt: 'Gran escultura en mosaico de una caprichosa figura femenina bailando con un colorido traje que emana alegr\xeda.'\n}, {\n  name: 'Forma definitiva',\n  artist: 'Barbara Hepworth',\n  description: 'Esta escultura abstracta de bronce es parte de la serie La Familia del Hombre ubicada en Yorkshire Sculpture Park. Hepworth opt\xf3 por no crear representaciones literales del mundo, sino que desarroll\xf3 formas abstractas inspiradas en personas y paisajes.',\n  url: 'https://i.imgur.com/2heNQDcm.jpg',\n  alt: 'Una escultura alta formada por tres elementos apilados unos sobre otros que recuerdan una figura humana.'\n}, {\n  name: 'Cavaliere',\n  artist: 'Lamidi Olonade Fakeye',\n  description: \"Descendiente de cuatro generaciones de talladores de madera, el trabajo de Fakeye combin\xf3 temas yoruba tradicionales y contempor\xe1neos.\",\n  url: 'https://i.imgur.com/wIdGuZwm.png',\n  alt: 'Una intrincada escultura de madera de un guerrero con el rostro centrado en un caballo adornado con motivos.'\n}, {\n  name: 'Grandes barrigas',\n  artist: 'Alina Szapocznikow',\n  description: \"Szapocznikow es conocida por sus esculturas del cuerpo fragmentado como met\xe1fora de la fragilidad y la impermanencia de la juventud y la belleza. Esta escultura representa dos barrigas grandes muy realistas apiladas una encima de otra, cada una de unos cinco pies (1,5 m) de altura.\",\n  url: 'https://i.imgur.com/AlHTAdDm.jpg',\n  alt: 'La escultura recuerda una cascada de pliegues, muy diferente a los vientres de las esculturas cl\xe1sicas.'\n}, {\n  name: 'Guerreros de terracota',\n  artist: 'Artista desconocido',\n  description: 'Los Guerreros de terracota es una colecci\xf3n de esculturas de terracota que representan los ej\xe9rcitos de Qin Shi Huang, el primer emperador de China. El ej\xe9rcito constaba de m\xe1s de 8.000 soldados, 130 carros con 520 caballos y 150 caballos de caballer\xeda.',\n  url: 'https://i.imgur.com/HMFmH6m.jpg',\n  alt: '12 esculturas de terracota de guerreros solemnes, cada uno con una expresi\xf3n facial y una armadura \xfanicas.'\n}, {\n  name: 'Paisaje lunar',\n  artist: 'Louise Nevelson',\n  description: 'Nevelson era conocida por recoger objetos de los escombros de la ciudad de Nueva York, que luego ensamblar\xeda en construcciones monumentales. En este, us\xf3 partes dispares como un poste de cama, una clava de malabarista y un fragmento de asiento, clav\xe1ndolos y peg\xe1ndolos en cajas que reflejan la influencia de la abstracci\xf3n geom\xe9trica del espacio y la forma del cubismo.',\n  url: 'https://i.imgur.com/rN7hY6om.jpg',\n  alt: 'Una escultura negra mate donde los elementos individuales son inicialmente indistinguibles.'\n}, {\n  name: 'Aureola',\n  artist: 'Ranjani Shettar',\n  description: 'Shettar fusiona lo tradicional y lo moderno, lo natural y lo industrial. Su arte se centra en la relaci\xf3n entre el hombre y la naturaleza. Su trabajo fue descrito como convincente tanto en sentido abstracto como figurado, que desaf\xeda la gravedad y una \"fina s\xedntesis de materiales inveros\xedmiles\".',\n  url: 'https://i.imgur.com/okTpbHhm.jpg',\n  alt: 'Una escultura parecida a un alambre p\xe1lido montada en una pared de hormig\xf3n y descendiendo al suelo. Parece ligero.'\n}, {\n  name: 'Hipop\xf3tamos',\n  artist: 'Zool\xf3gico de Taipei',\n  description: 'El Zool\xf3gico de Taipei encarg\xf3 una Plaza del Hipop\xf3tamo con hipop\xf3tamos sumergidos jugando.',\n  url: 'https://i.imgur.com/6o5Vuyu.jpg',\n  alt: 'Un grupo de esculturas de hipop\xf3tamos de bronce que emergen de la acera como si estuvieran nadando.'\n}];\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"import { sculptureList } from './data.js';\n\nexport default function Gallery() {\n  let index = 0;\n\n  function handleClick() {\n    index = index + 1;\n  }\n\n  let sculpture = sculptureList[index];\n  return (\n    <>\n      <button onClick={handleClick}>\n        Siguiente\n      </button>\n      <h2>\n        <i>{sculpture.name} </i> \n        por {sculpture.artist}\n      </h2>\n      <h3>  \n        ({index + 1} de {sculptureList.length})\n      </h3>\n      <img \n        src={sculpture.url} \n        alt={sculpture.alt}\n      />\n      <p>\n        {sculpture.description}\n      </p>\n    </>\n  );\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El handler handleClick est\xe1 actualizando una variable local, index. Pero dos cosas impiden que ese cambio sea visible:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},'Las variables locales no persisten entre renderizaciones: Cuando React renderiza (ya sea por primera vez o debido a un cambio) un componente, lo hace "desde cero". Esto significa que las variables locales (definidas dentro de la funci\xf3n del componente) se vuelven a declarar e inicializar. Por lo tanto, cualquier cambio hecho en esas variables locales se pierde cuando el componente se renderiza nuevamente.'),(0,t.yg)("li",{parentName:"ol"},'Los cambios en las variables locales no activar\xe1n renderizaciones: React solo vuelve a renderizar un componente cuando detecta un cambio en el estado (useState) o en las props. Si cambias una variable local (como index), React no lo sabe porque las variables locales no tienen un mecanismo que le diga: "Hey, este dato ha cambiado, vuelve a renderizar".'))),(0,t.yg)("li",{parentName:"ul"},"Para que los cambios puedan ser visibles en el DOM tiene que pasar dos cosas:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Conservar los datos entre renderizaciones:  Los valores que cambian deben persistir incluso despu\xe9s de que React vuelva a renderizar el componente. Esto se logra utilizando mecanismos como el estado (useState) o un referencia (useRef), ya que las variables locales normales se pierden despu\xe9s de cada renderizaci\xf3n."),(0,t.yg)("li",{parentName:"ol"},"Provocar que React renderice de nuevo el componente debido a cambios en estos datos: React necesita ser informado de que algo ha cambiado en los datos para volver a renderizar el componente. Esto ocurre autom\xe1ticamente cuando actualizas el estado o las props."))),(0,t.yg)("li",{parentName:"ul"},"El hook useState ofrece dos cosas fundamentales:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Una variable de estado: Esta variable almacena los datos que se deben mantener entre renderizaciones del componente. A diferencia de las variables locales, React recuerda el valor de esta variable incluso despu\xe9s de que el componente se vuelva a renderizar, lo que permite que los datos persistan y se mantengan actualizados."),(0,t.yg)("li",{parentName:"ol"},'Una funci\xf3n para actualizar el estado: Esta funci\xf3n (generalmente llamada setEstado) se utiliza para modificar el valor de la variable de estado. Al llamar a esta funci\xf3n, le est\xe1s diciendo a React: "actualiza el valor de la variable de estado y renderiza nuevamente el componente para reflejar los cambios en la interfaz de usuario".')))),(0,t.yg)("h4",{id:"agregar-una-variable-de-estado"},"Agregar una variable de estado"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para agregar una variable de estado, debemos importar el useState de React al inicio del archivo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { useState } from 'react';\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Luego, reemplazamos esta l\xednea:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"let index = 0;\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Con:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [index, setIndex] = useState(0);\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"index")," es una variable de estado y ",(0,t.yg)("inlineCode",{parentName:"li"},"setIndex")," es la funci\xf3n que modifica el estado.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"As\xed es como funcionan juntos en el handleClick:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function handleClick() {\n  setIndex(index + 1);\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"C\xf3digo Completo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"import { useState } from 'react';\nimport { sculptureList } from './data.js';\n\nexport default function Gallery() {\n  const [index, setIndex] = useState(0);\n\n  function handleClick() {\n    setIndex(index + 1);\n  }\n\n  let sculpture = sculptureList[index];\n  return (\n    <>\n      <button onClick={handleClick}>\n        Siguiente\n      </button>\n      <h2>\n        <i>{sculpture.name} </i> \n        por {sculpture.artist}\n      </h2>\n      <h3>  \n        ({index + 1} de {sculptureList.length})\n      </h3>\n      <img \n        src={sculpture.url} \n        alt={sculpture.alt}\n      />\n      <p>\n        {sculpture.description}\n      </p>\n    </>\n  );\n}\n\n")),(0,t.yg)("h4",{id:"anatom\xeda-del-usestate"},"Anatom\xeda del useState"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando llamamos al useState, le estamos diciendo a React que debe recordar algo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [index, setIndex] = useState(0);\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En este caso, queremos que React recuerde el index."),(0,t.yg)("li",{parentName:"ul"},"El \xfanico argumento para useState es el valor inicial de su variable de estado. En este ejemplo, el valor inicial de index se establece en 0 con useState(0)."),(0,t.yg)("li",{parentName:"ul"},"Cada vez que el componente se renderiza, el useState devuelve un array que contiene dos valores:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"La variable de estado (index) con el valor que almacenaste."),(0,t.yg)("li",{parentName:"ol"},"La funci\xf3n (setIndex) que puede actualizar la variable de estado y alertar a React para que renderice el componente nuevamente."))),(0,t.yg)("li",{parentName:"ul"},"As\xed es como sucede en acci\xf3n:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [index, setIndex] = useState(0);\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Flujo")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ol",{parentName:"div"},(0,t.yg)("li",{parentName:"ol"},"Tu componente se renderiza por primera vez. Debido a que pasamos 0 a useState como valor inicial para index, esto devolver\xe1 ","[0, setIndex]",". React recuerda que 0 es el \xfaltimo valor de estado."),(0,t.yg)("li",{parentName:"ol"},"Actualizas el estado. Cuando un usuario hace clic en el bot\xf3n, llama a setIndex(index + 1). index es 0, por lo tanto es setIndex(1). Esto le dice a React que recuerde que index es 1 ahora y ejecuta otro renderizado."),(0,t.yg)("li",{parentName:"ol"},"El componente se renderiza por segunda vez. React todav\xeda ve useState(0), pero debido a que React recuerda que estableci\xf3 index en 1, devuelve ","[1, setIndex]"," en su lugar."),(0,t.yg)("li",{parentName:"ol"},"\xa1Y as\xed sucesivamente!")))),(0,t.yg)("h4",{id:"colocar-m\xfaltiples-variables-de-estado-a-un-componente"},"Colocar m\xfaltiples variables de estado a un componente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Podemos tener m\xe1s de una variable de estado de diferentes tipos en un componente. Este componente tiene dos variables de estado, un index num\xe9rico y un showMore booleano que se activa al hacer clic en \xabMostrar detalles\xbb:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport { useState } from 'react';\nimport { sculptureList } from './data.js';\n\nexport default function Gallery() {\n  const [index, setIndex] = useState(0);\n  const [showMore, setShowMore] = useState(false);\n\n  function handleNextClick() {\n    setIndex(index + 1);\n  }\n\n  function handleMoreClick() {\n    setShowMore(!showMore);\n  }\n\n  let sculpture = sculptureList[index];\n  return (\n    <>\n      <button onClick={handleNextClick}>\n        Siguiente\n      </button>\n      <h2>\n        <i>{sculpture.name} </i> \n        por {sculpture.artist}\n      </h2>\n      <h3>  \n        ({index + 1} de {sculptureList.length})\n      </h3>\n      <button onClick={handleMoreClick}>\n        {showMore ? 'Ocultar' : 'Mostrar'} detalles\n      </button>\n      {showMore && <p>{sculpture.description}</p>}\n      <img \n        src={sculpture.url} \n        alt={sculpture.alt}\n      />\n    </>\n  );\n}\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Es una buena idea tener m\xfaltiples variables de estado si no se encuentran relacionadas entre s\xed, como index y showMore en este ejemplo. Pero si encontramos que a menudo cambiamos dos variables de estado juntas, podr\xeda ser mejor combinarlas en una sola. Por ejemplo, si tenemos un formulario con muchos campos, es m\xe1s conveniente tener una \xfanica variable de estado que contenga un objeto que una variable de estado por campo.")))),(0,t.yg)("h4",{id:"c\xf3mo-sabe-react-qu\xe9-estado-devolver"},"\xbfC\xf3mo sabe React qu\xe9 estado devolver?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es posible que hayas notado que la llamada a useState no recibe ninguna informaci\xf3n sobre a qu\xe9 variable de estado se refiere. No hay un \xabidentificador\xbb que se pase a useState, entonces, \xbfc\xf3mo sabe cu\xe1l de las variables de estado deber\xeda devolver? \xbfSe basa en alg\xfan tipo de magia para esto? La respuesta es no."),(0,t.yg)("li",{parentName:"ul"},"Los Hooks necesitan que las llamadas a ellos se realicen siempre en el mismo orden cada vez que un componente se renderiza. Esto es esencial porque React usa este orden para vincular cada variable de estado con su correspondiente funci\xf3n que modifica el estado."),(0,t.yg)("li",{parentName:"ul"},"Para que esto funcione correctamente, debemos cumplir una regla esencial:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Llamar a los Hooks \xfanicamente en el nivel superior del componente o de funciones personalizadas de Hooks."))),(0,t.yg)("li",{parentName:"ul"},"Este ",(0,t.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/eslint-plugin-react-hooks"},"complemento para el linter")," detecta la mayor\xeda de los errores."),(0,t.yg)("li",{parentName:"ul"},"Internamente, React mantiene un array de arrays, donde cada uno contiene:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"\xcdndice 0: La variable de estado."),(0,t.yg)("li",{parentName:"ul"},"\xcdndice 1: La funci\xf3n que modifica ese estado."))),(0,t.yg)("li",{parentName:"ul"},"En otras palabras, cada array dentro de este array contiene la informaci\xf3n relacionada con un estado en particular."),(0,t.yg)("li",{parentName:"ul"},"React almacena un \u201cnumero\u201d llamado \xedndice interno (que por defecto es 0 antes de renderizar el componente) para saber qu\xe9 estado debe devolver al llamar a useState()."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import React, { useState } from \'react\';\n\nfunction MiComponente() {\n  // Primer estado: contador\n  const [contador, setContador] = useState(0);\n\n  // Segundo estado: nombre\n  const [nombre, setNombre] = useState("Juan");\n\n  return (\n    <div>\n      <p>Contador: {contador}</p>\n      <button onClick={() => setContador(contador + 1)}>Incrementar Contador</button>\n      <p>Nombre: {nombre}</p>\n      <button onClick={() => setNombre("Maria")}>Cambiar Nombre</button>\n    </div>\n  );\n}\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Internamente, React mantiene algo similar a este array de arrays (lo llamaremos arrayReact para identificarlo):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const arrayReact = [\n  [0 , setContador],  // Primer par (\xedndice 0: variable de estado, \xedndice 1: funci\xf3n)\n  ["Juan", setNombre],      // Segundo par (\xedndice 0: variable de estado, \xedndice 1: funci\xf3n)\n];\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Ahora, cuando haces clic en el bot\xf3n "Incrementar Contador", se llama a setContador(contador + 1):',(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"React llama a setContador(1), lo que cambia el valor de contador a 1."),(0,t.yg)("li",{parentName:"ol"},"React vuelve a renderizar el componente, y ahora, el array de arrays interno se actualiza manteniendo el mismo orden de elementos:")))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'[\n  [1, setContador],  // Contador actualizado a 1, con la funci\xf3n setContador\n  ["Juan", setNombre], // Nombre sigue siendo "Juan", con la funci\xf3n setNombre\n]\n\n\n')),(0,t.yg)("h5",{id:"como-detecta-el-orden"},"\xbfComo detecta el orden?"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Al renderizarse un componente por primera vez o por una actualizaci\xf3n, el valor del \xedndice interno es 0 y por cada llamada a useState() aumenta en 1.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'const [contador, setContador] = useState(0); : Devuelve el arrayReact[0] \nconst [nombre, setNombre] = useState("Juan"); :   Devuelve el arrayReact[1]  \n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Al renderizarse el componente nuevamente, React sigue el mismo orden para asociar las variables de estado con sus funciones. El \xedndice de la primera llamada a useState es 0, y el de la segunda llamada es 1. De esta manera, React asegura que cada estado se vincule correctamente con su funci\xf3n correspondiente."),(0,t.yg)("li",{parentName:"ul"},"Lo puedes entender con este ejemplo que nos puede llegar a dar una idea de c\xf3mo funciona:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="Index.html"',title:'"Index.html"'},'\n<button id="nextButton">\n  Siguiente\n</button>\n<h3 id="header"></h3>\n<button id="moreButton"></button>\n<p id="description"></p>\n<img id="image">\n\n<style>\n* { box-sizing: border-box; }\nbody { font-family: sans-serif; margin: 20px; padding: 0; }\nbutton { display: block; margin-bottom: 10px; }\n</style>\n')),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Index.js"',title:'"Index.js"'},"let componentHooks = [];\nlet currentHookIndex = 0;\n\n// C\xf3mo funciona useState dentro de React (simplificado).\nfunction useState(initialState) {\n  let pair = componentHooks[currentHookIndex];\n  if (pair) {\n    // Este no es el primer render,\n    // entonces el par de estados ya existe.\n    // Devu\xe9lvelo y prep\xe1rate para la pr\xf3xima llamada del Hook.\n    currentHookIndex++;\n    return pair;\n  }\n\n  // Esta es la primera vez que estamos renderizando,\n  // as\xed que crea un array de dos posiciones y gu\xe1rdalo.\n  pair = [initialState, setState];\n\n  function setState(nextState) {\n    // Cuando el usuario solicita un cambio de estado,\n    // guarda el nuevo valor en el par.\n    pair[0] = nextState;\n    updateDOM();\n  }\n\n  // Guarda el par para futuros renderizados\n  // y se prepara para la siguiente llamada del Hook.\n  componentHooks[currentHookIndex] = pair;\n  currentHookIndex++;\n  return pair;\n}\n\nfunction Gallery() {\n  // Cada llamada a useState() devolver\xe1 el siguiente par.\n  const [index, setIndex] = useState(0);\n  const [showMore, setShowMore] = useState(false);\n\n  function handleNextClick() {\n    setIndex(index + 1);\n  }\n\n  function handleMoreClick() {\n    setShowMore(!showMore);\n  }\n\n  let sculpture = sculptureList[index];\n  // Este ejemplo no usa React, entonces\n  // devuelve un objeto como resultado en lugar de JSX.\n  return {\n    onNextClick: handleNextClick,\n    onMoreClick: handleMoreClick,\n    header: `${sculpture.name} por ${sculpture.artist}`,\n    counter: `${index + 1} of ${sculptureList.length}`,\n    more: `${showMore ? 'Ocultar' : 'Mostrar'} detalles`,\n    description: showMore ? sculpture.description : null,\n    imageSrc: sculpture.url,\n    imageAlt: sculpture.alt\n  };\n}\n\nfunction updateDOM() {\n  // Reinicia el \xedndice del Hook actual\n  // antes de renderizar el componente.\n  currentHookIndex = 0;\n  let output = Gallery();\n\n  // Actualiza el DOM para que coincida con el resultado.\n  // Esta es la parte que React hace por ti.\n  nextButton.onclick = output.onNextClick;\n  header.textContent = output.header;\n  moreButton.onclick = output.onMoreClick;\n  moreButton.textContent = output.more;\n  image.src = output.imageSrc;\n  image.alt = output.imageAlt;\n  if (output.description !== null) {\n    description.textContent = output.description;\n    description.style.display = '';\n  } else {\n    description.style.display = 'none';\n  }\n}\n\nlet nextButton = document.getElementById('nextButton');\nlet header = document.getElementById('header');\nlet moreButton = document.getElementById('moreButton');\nlet description = document.getElementById('description');\nlet image = document.getElementById('image');\nexport const sculptureList = [{\n  name: 'Homenaje a la neurocirug\xeda',\n  artist: 'Marta Colvin Andrade',\n  description: 'Aunque Colvin es predominantemente conocida por temas abstractos que aluden a s\xedmbolos prehisp\xe1nicos, esta gigantesca escultura, un homenaje a la neurocirug\xeda, es una de sus obras de arte p\xfablico m\xe1s reconocibles.',\n  url: 'https://i.imgur.com/Mx7dA2Y.jpg',\n  alt: 'Una estatua de bronce de dos manos cruzadas sosteniendo delicadamente un cerebro humano en la punta de sus dedos.'\n}, {\n  name: 'Floralis gen\xe9rica',\n  artist: 'Eduardo Catalano',\n  description: 'Esta enorme flor plateada (75 pies o 23 m) se encuentra en Buenos Aires. Est\xe1 dise\xf1ado para moverse, cerrando sus p\xe9talos por la tarde o cuando soplan fuertes vientos y abri\xe9ndolos por la ma\xf1ana.',\n  url: 'https://i.imgur.com/ZF6s192m.jpg',\n  alt: 'Una gigantesca escultura de flor met\xe1lica con p\xe9talos reflectantes como espejos y fuertes estambres.'\n}, {\n  name: 'Presencia eterna',\n  artist: 'John Woodrow Wilson',\n  description: 'Wilson era conocido por su preocupaci\xf3n por la igualdad, la justicia social, as\xed como por las cualidades esenciales y espirituales de la humanidad. Este bronce masivo (7 pies o 2,13 m) representa lo que \xe9l describi\xf3 como \"una presencia negra simb\xf3lica infundida con un sentido de humanidad universal\".\"',\n  url: 'https://i.imgur.com/aTtVpES.jpg',\n  alt: 'La escultura que representa una cabeza humana parece omnipresente y solemne. Irradia calma y serenidad.'\n}, {\n  name: 'Mo\xe1i',\n  artist: 'Artista desconocido',\n  description: 'Ubicados en la Isla de Pascua, hay 1,000 mo\xe1i, o estatuas monumentales existentes, creadas por los primeros rapanui , que algunos creen que representan a ancestros deificados.',\n  url: 'https://i.imgur.com/RCwLEoQm.jpg',\n  alt: 'Tres bustos monumentales de piedra con las cabezas desproporcionadamente grandes con rostros sombr\xedos.'\n}, {\n  name: 'Nana azul',\n  artist: 'Niki de Saint Phalle',\n  description: 'Las Nanas son criaturas triunfantes, s\xedmbolos de feminidad y maternidad. En un principio, Saint Phalle utilizaba telas y objetos encontrados para las Nanas, y m\xe1s tarde introdujo el poli\xe9ster para conseguir un efecto m\xe1s vibrante.',\n  url: 'https://i.imgur.com/Sd1AgUOm.jpg',\n  alt: 'Gran escultura en mosaico de una caprichosa figura femenina bailando con un colorido traje que emana alegr\xeda.'\n}, {\n  name: 'Forma definitiva',\n  artist: 'Barbara Hepworth',\n  description: 'Esta escultura abstracta de bronce es parte de la serie La Familia del Hombre ubicada en Yorkshire Sculpture Park. Hepworth opt\xf3 por no crear representaciones literales del mundo, sino que desarroll\xf3 formas abstractas inspiradas en personas y paisajes.',\n  url: 'https://i.imgur.com/2heNQDcm.jpg',\n  alt: 'Una escultura alta formada por tres elementos apilados unos sobre otros que recuerdan una figura humana.'\n}, {\n  name: 'Cavaliere',\n  artist: 'Lamidi Olonade Fakeye',\n  description: \"Descendiente de cuatro generaciones de talladores de madera, el trabajo de Fakeye combin\xf3 temas yoruba tradicionales y contempor\xe1neos.\",\n  url: 'https://i.imgur.com/wIdGuZwm.png',\n  alt: 'Una intrincada escultura de madera de un guerrero con el rostro centrado en un caballo adornado con motivos.'\n}, {\n  name: 'Grandes barrigas',\n  artist: 'Alina Szapocznikow',\n  description: \"Szapocznikow es conocida por sus esculturas del cuerpo fragmentado como met\xe1fora de la fragilidad y la impermanencia de la juventud y la belleza. Esta escultura representa dos barrigas grandes muy realistas apiladas una encima de otra, cada una de unos cinco pies (1,5 m) de altura.\",\n  url: 'https://i.imgur.com/AlHTAdDm.jpg',\n  alt: 'La escultura recuerda una cascada de pliegues, muy diferente a los vientres de las esculturas cl\xe1sicas.'\n}, {\n  name: 'Guerreros de terracota',\n  artist: 'Artista desconocido',\n  description: 'Los Guerreros de terracota es una colecci\xf3n de esculturas de terracota que representan los ej\xe9rcitos de Qin Shi Huang, el primer emperador de China. El ej\xe9rcito constaba de m\xe1s de 8.000 soldados, 130 carros con 520 caballos y 150 caballos de caballer\xeda.',\n  url: 'https://i.imgur.com/HMFmH6m.jpg',\n  alt: '12 esculturas de terracota de guerreros solemnes, cada uno con una expresi\xf3n facial y una armadura \xfanicas.'\n}, {\n  name: 'Paisaje lunar',\n  artist: 'Louise Nevelson',\n  description: 'Nevelson era conocida por recoger objetos de los escombros de la ciudad de Nueva York, que luego ensamblar\xeda en construcciones monumentales. En este, us\xf3 partes dispares como un poste de cama, una clava de malabarista y un fragmento de asiento, clav\xe1ndolos y peg\xe1ndolos en cajas que reflejan la influencia de la abstracci\xf3n geom\xe9trica del espacio y la forma del cubismo.',\n  url: 'https://i.imgur.com/rN7hY6om.jpg',\n  alt: 'Una escultura negra mate donde los elementos individuales son inicialmente indistinguibles.'\n}, {\n  name: 'Aureola',\n  artist: 'Ranjani Shettar',\n  description: 'Shettar fusiona lo tradicional y lo moderno, lo natural y lo industrial. Su arte se centra en la relaci\xf3n entre el hombre y la naturaleza. Su trabajo fue descrito como convincente tanto en sentido abstracto como figurado, que desaf\xeda la gravedad y una \"fina s\xedntesis de materiales inveros\xedmiles\".',\n  url: 'https://i.imgur.com/okTpbHhm.jpg',\n  alt: 'Una escultura parecida a un alambre p\xe1lido montada en una pared de hormig\xf3n y descendiendo al suelo. Parece ligero.'\n}, {\n  name: 'Hipop\xf3tamos',\n  artist: 'Zool\xf3gico de Taipei',\n  description: 'El Zool\xf3gico de Taipei encarg\xf3 una Plaza del Hipop\xf3tamo con hipop\xf3tamos sumergidos jugando.',\n  url: 'https://i.imgur.com/6o5Vuyu.jpg',\n  alt: 'Un grupo de esculturas de hipop\xf3tamos de bronce que emergen de la acera como si estuvieran nadando.'\n}];\n\n// Hacemos que la interfaz de usuario coincida con el estado inicial..\nupdateDOM();\n\n")),(0,t.yg)("h4",{id:"el-estado-es-aislado-y-privado"},"El estado es aislado y privado"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El estado es \xfanico para cada instancia del componente. Es decir, si tienes el mismo componente varias veces en la pantalla, cada uno tendr\xe1 su propio estado independiente.")),(0,t.yg)("h5",{id:"ejemplo-1"},"Ejemplo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Imagina que tienes un contador que puedes aumentar al hacer clic en un bot\xf3n:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function Contador() {\n  const [contador, setContador] = useState(0);\n\n  return (\n    <div>\n      <p>Contador: {contador}</p>\n      <button onClick={() => setContador(contador + 1)}>Incrementar</button>\n    </div>\n  );\n}\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Si colocas dos de estos contadores en la pantalla, como aqu\xed:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function App() {\n  return (\n    <div>\n      <Contador />\n      <Contador />\n    </div>\n  );\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cada contador tiene su propio valor de estado."),(0,t.yg)("li",{parentName:"ul"},"Si haces clic en el primer contador, solo cambiar\xe1 el valor de ese contador."),(0,t.yg)("li",{parentName:"ul"},"Si haces clic en el segundo contador, solo cambiar\xe1 el valor del segundo contador."),(0,t.yg)("li",{parentName:"ul"},"Aunque ambos contadores hacen lo mismo (incrementar un n\xfamero), no se afectan entre s\xed. Cada uno tiene su propio estado aislado, lo que significa que lo que pase en uno no afecta al otro."),(0,t.yg)("li",{parentName:"ul"},"En resumen: cada vez que renderizas el mismo componente, React guarda un estado independiente para cada uno. Si tienes 10 contadores en la pantalla, cada uno ser\xe1 independiente y sus cambios no afectar\xe1n a los dem\xe1s."),(0,t.yg)("li",{parentName:"ul"},"Esto es lo que hace que el estado sea diferente de las variables locales. "),(0,t.yg)("li",{parentName:"ul"},"A diferencia de las props, el estado es privado. El componente padre no puede modificarlo directamente. Esto permite agregar o eliminar el estado en cualquier componente sin afectar a los dem\xe1s."),(0,t.yg)("li",{parentName:"ul"},"Puedes leer m\xe1s sobre este mecanismo en ",(0,t.yg)("a",{parentName:"li",href:"https://medium.com/@ryardley/react-hooks-not-magic-just-arrays-cd4f1857236e"},"React Hooks: No es magia, s\xf3lo son Arrays"),".")))),(0,t.yg)("h4",{id:"referencia"},"Referencia"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En resumen, useState() te permite crear una variable de estado."),(0,t.yg)("li",{parentName:"ul"},"La sintaxis es la siguiente:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"useState(initialState)\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Par\xe1metro")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"initialState: El valor que deseas que tenga la variable de estado inicialmente. Puede ser un valor de cualquier tipo, pero hay un comportamiento especial para las funciones. Este argumento solo se tiene en cuenta en el primer renderizado y se ignora en los otros (actualizaciones)."),(0,t.yg)("li",{parentName:"ul"},"Si pasa una funci\xf3n como initialState, se tratar\xe1 como una funci\xf3n inicializadora. Debe ser pura, no debe aceptar argumentos y debe devolver un valor de cualquier tipo. React llamar\xe1 a tu funci\xf3n de inicializaci\xf3n al inicializar el componente y almacenar\xe1 el valor que devuelve en la variable de estado.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Retorno")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"useState devuelve un array con exactamente dos valores:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Una variable de estado. Durante el primer renderizado, tendr\xe1 el  valor de  initialState."),(0,t.yg)("li",{parentName:"ol"},"La funci\xf3n set que te permite actualizar la variable de estado y desencadenar un nuevo renderizado.")))))),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En Modo estricto, React llamar\xe1 a tu funci\xf3n de inicializaci\xf3n dos veces para a encontrar problemas de rendimiento. Este es un comportamiento exclusivo de desarrollo y no ocurre en producci\xf3n. Si tu funci\xf3n de inicializaci\xf3n es pura (como deber\xeda ser), esto no deber\xeda afectar la l\xf3gica de tu componente. ")))),(0,t.yg)("h4",{id:"la-funci\xf3n-setnuevovalor"},"La funci\xf3n set(nuevovalor)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n set(nuevoValor) devuelta por useState te permite actualizar la variable de estado con un nuevo valor y desencadenar un nuevo renderizado. Puedes pasar el valor directamente, o una funci\xf3n que lo calcule a partir del valor anterior:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [name, setName] = useState('Edward');\n\nfunction handleClick() {\n  setName('Taylor');\n  setAge(a => a + 1);\n  // ...\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Par\xe1metros ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"NuevoValor: El valor que deseas que tenga la variable de estado. Puede ser un valor de cualquier tipo, pero hay un comportamiento especial para las funciones."),(0,t.yg)("li",{parentName:"ul"},"Si pasas una funci\xf3n como NuevoValor, se tratar\xe1 como una funci\xf3n de actualizaci\xf3n. Debe ser pura, debe tener un par\xe1metro que contiene el valor anterior de la variable de estado y debe devolver el nuevo valor. ")))),(0,t.yg)("h4",{id:"react-pone-la-funci\xf3n-de-actualizaci\xf3n-en-una-cola"},'React pone la funci\xf3n de actualizaci\xf3n en una "cola"'),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Cuando llamas a la funci\xf3n setEstado para actualizar el estado, React no actualiza inmediatamente la variable de estado. En su lugar:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Guarda tu solicitud de actualizaci\xf3n en una lista (la "cola").'),(0,t.yg)("li",{parentName:"ul"},"Esa lista se procesa m\xe1s tarde, antes de que React vuelva a dibujar (renderizar) la pantalla."))),(0,t.yg)("li",{parentName:"ul"},"Por ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"setCount(c => c + 1); // React guarda esta funci\xf3n en una lista\nsetCount(c => c + 2); // Guarda esta otra funci\xf3n en la misma lista\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'React espera hasta el pr\xf3ximo "renderizado"'),(0,t.yg)("li",{parentName:"ul"},"React no cambia el estado de inmediato porque podr\xeda haber otras actualizaciones pendientes. As\xed que:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Espera hasta que sea el momento de volver a "dibujar" tu componente.'),(0,t.yg)("li",{parentName:"ul"},"En ese momento, React procesa todas las actualizaciones guardadas en la cola."))),(0,t.yg)("li",{parentName:"ul"},"React aplica las actualizaciones, una por una."),(0,t.yg)("li",{parentName:"ul"},"Cuando React procesa la cola:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Toma el estado actual."),(0,t.yg)("li",{parentName:"ul"},"Aplica todas las funciones de actualizaci\xf3n que guardaste en la cola, una tras otra.")))),(0,t.yg)("h5",{id:"ejemplo-2"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [count, setCount] = useState(0);\n\nfunction handleClick() {\n  setCount(c => c + 1); // Suma 1 al estado actual\n  setCount(c => c + 2); // Luego suma 2 al estado actualizado\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"React guarda ambas funciones en la cola."),(0,t.yg)("li",{parentName:"ul"},"Cuando procesa la cola:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"La primera funci\xf3n suma 1 al estado actual: 0 + 1 = 1."),(0,t.yg)("li",{parentName:"ul"},"La segunda funci\xf3n suma 2 al estado actualizado: 1 + 2 = 3."))),(0,t.yg)("li",{parentName:"ul"},"Resultado final: count ser\xe1 3.")))),(0,t.yg)("h5",{id:"en-resumen"},"En resumen:"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Cada vez que llamas a setEstado, React no cambia el estado inmediatamente; lo guarda en una lista (cola)."),(0,t.yg)("li",{parentName:"ol"},"Antes del pr\xf3ximo renderizado, React procesa todas las actualizaciones en la cola."),(0,t.yg)("li",{parentName:"ol"},"Esto asegura que el estado siempre se actualice correctamente, incluso si hay varias actualizaciones al mismo tiempo."),(0,t.yg)("li",{parentName:"ol"},"Las funciones set no devuelve ning\xfan valor.")),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n set solo actualiza la variable de estado para el pr\xf3ximo renderizado. Si lees la variable de estado despu\xe9s de llamar a la funci\xf3n set, seguir\xe1s obteniendo el mismo valor."),(0,t.yg)("li",{parentName:"ul"},"Si el nuevo valor que proporcionas es id\xe9ntico al estado actual, seg\xfan lo determinado por un Object.is, React omitir\xe1 volver a renderizar el componente y sus hijos. Esta es una optimizaci\xf3n. En algunos casos, React puede necesitar ejecutar la funci\xf3n del componente padre para verificar si hubo alg\xfan cambio, pero no deber\xeda afectar tu c\xf3digo."),(0,t.yg)("li",{parentName:"ul"},"React actualiza la pantalla despu\xe9s de que todos los controladores de eventos (Handler) se hayan ejecutado y hayan llamado a sus funciones set. Esto evita m\xfaltiples renderizados durante un solo evento. En el raro caso de que necesite forzar a React a actualizar la pantalla antes, por ejemplo, para acceder al DOM, puedes usar flushSync."),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n set siempre es la misma funci\xf3n durante la vida del componente, no importa cu\xe1ntas veces se renderice. Por eso, muchas veces puedes omitirla de la lista de dependencias en los efectos (useEffect). Sin embargo, si decides incluirla, no causar\xe1 que el efecto se vuelva a ejecutar. Si el linter (herramienta de an\xe1lisis de c\xf3digo) te permite omitir una dependencia sin generar errores, significa que es seguro hacerlo.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Llamar a la funci\xf3n set mientras se est\xe1 renderizando un componente solo es v\xe1lido si la llamada ocurre dentro de ese mismo componente. Cuando esto sucede:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"React descarta el renderizado actual (ignora su salida)."),(0,t.yg)("li",{parentName:"ul"},"React intenta renderizar nuevamente el componente, pero ahora con el nuevo estado que actualizaste."))),(0,t.yg)("li",{parentName:"ul"},"Este comportamiento es poco com\xfan y solo deber\xedas usarlo si realmente necesitas guardar informaci\xf3n sobre c\xf3mo fue el estado o el renderizado anterior."),(0,t.yg)("li",{parentName:"ul"},'Cuando usas el Modo Estricto en React, este llamar\xe1 a tu funci\xf3n de actualizaci\xf3n dos veces en desarrollo. Esto lo hace para ayudarte a detectar problemas, como si tu funci\xf3n no es "pura".')))),(0,t.yg)("h4",{id:"ejemplo-3"},"Ejemplo"),(0,t.yg)("h5",{id:"contador"},"Contador"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En este ejemplo, la variable contador contiene un n\xfamero. Al hacer click en el bot\xf3n lo incrementa:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    <button onClick={handleClick}>\n      Hiciste clic {count} veces\n    </button>\n  );\n}\n\n")),(0,t.yg)("h5",{id:"actualizaci\xf3n-en-base-al-estado-anterior"},"Actualizaci\xf3n en base al estado anterior"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Supongamos que age es 42. La funci\xf3n handler llama setAge(age + 1) tres veces:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function handleClick() {\n  setAge(age + 1); // setAge(42 + 1)\n  setAge(age + 1); // setAge(42 + 1)\n  setAge(age + 1); // setAge(42 + 1)\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"\xa1Sin embargo, despu\xe9s de un click, age solo ser\xe1 43 en lugar de 45! Esto se debe a que llamar a la funci\xf3n set no actualizar\xe1 la variable de estado age en el c\xf3digo que ya se est\xe1 ejecutando. As\xed que cada llamada setAge(age + 1) se convierte en setAge(43)."),(0,t.yg)("li",{parentName:"ul"},"Para resolver este problema, puedes pasar una funci\xf3n de actualizaci\xf3n a setAge:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nfunction handleClick() {\n  setAge(a => a + 1); // setAge(42 => 43)\n  setAge(a => a + 1); // setAge(43 => 44)\n  setAge(a => a + 1); // setAge(44 => 45)\n}\n\n")),(0,t.yg)("h4",{id:"actualizaci\xf3n-de-objetos-y-arrays-en-una-variable-de-estado"},"Actualizaci\xf3n de objetos y arrays en UNA VARIABLE DE ESTADO"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se pueden poner objetos y arrays en la variable de estado. En React, el estado se considera de solo lectura, por lo que debes reemplazar en lugar de mutar tus objetos existentes. Por ejemplo, si tienes un objeto formulario en una variable de estado, no lo actualices as\xed:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// \ud83d\udea9 No cambies un objeto en un estado como este:\nform.firstName = 'Taylor';\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En su lugar, reemplaza todo el objeto creando uno nuevo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"// \u2705 Reemplaza el estado con un nuevo objeto\nsetForm({\n  ...form,\n  firstName: 'Taylor'\n});\n\n")),(0,t.yg)("h4",{id:"evitar-recrear-el-estado-inicial"},"Evitar recrear el estado inicial"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"React usa el valor inicial una vez y lo ignora en los pr\xf3ximos renderizados:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function TodoList() {\n  const [todos, setTodos] = useState(createInitialTodos());\n  // ...\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Aunque el resultado de createInitialTodos() solo se usa para el renderizado inicial, todav\xeda est\xe1 llamando a esta funci\xf3n en cada renderizado. Esto puede ser un desperdicio si se trata de crear arrays grandes o realizar c\xe1lculos costosos."),(0,t.yg)("li",{parentName:"ul"},"Para resolver esto, puedes pasarlo como una funci\xf3n inicializadora a useState en su lugar:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function TodoList() {\n  const [todos, setTodos] = useState(createInitialTodos);\n  // ...\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Observa que est\xe1s pasando createInitialTodos, que es la funci\xf3n misma, y no createInitialTodos(), que es el resultado de llamarla. Si pasas una funci\xf3n a useState, React solo la llamar\xe1 durante la inicializaci\xf3n.")))),(0,t.yg)("h4",{id:"reinicio-del-estado-con-una-key"},"Reinicio del estado con una key"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Por lo general, es posible que encuentre el atributo key al renderizar listas. Sin embargo, tambi\xe9n tiene otro prop\xf3sito."),(0,t.yg)("li",{parentName:"ul"},"Puede reiniciar el estado de un componente modificando la key que tiene ese componente. En este ejemplo, el bot\xf3n Reiniciar cambia la variable de estado versi\xf3n, que pasamos como una key al Formulario. Cuando la key cambia, React vuelve a crear el componente Formulario (y todos sus hijos) desde cero, por lo que su estado se reinicia."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { useState } from 'react';\n\nexport default function App() {\n  const [version, setVersion] = useState(0);\n\n  function handleReset() {\n    setVersion(version + 1);\n  }\n\n  return (\n    <>\n      <button onClick={handleReset}>Reiniciar</button>\n      <Form key={version} />\n    </>\n  );\n}\n\nfunction Form() {\n  const [name, setName] = useState('Taylor');\n\n  return (\n    <>\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <p>Hola, {name}.</p>\n    </>\n  );\n}\n\n\n")),(0,t.yg)("h4",{id:"almacenamiento-de-informaci\xf3n-de-renderizados-anteriores"},"Almacenamiento de informaci\xf3n de renderizados anteriores"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Normalmente, actualizas las variables de estado dentro de controladores de eventos (handlers), como cuando un usuario hace clic en un bot\xf3n o escribe en un campo."),(0,t.yg)("li",{parentName:"ul"},"Sin embargo, en situaciones poco comunes, podr\xedas necesitar actualizar el estado como respuesta a un renderizado. Por ejemplo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Si una propiedad (prop) cambia, podr\xedas querer ajustar el estado para reflejar ese cambio."))),(0,t.yg)("li",{parentName:"ul"},"En la mayor\xeda de los casos, no lo necesitas:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Evita estados redundantes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Si puedes calcular el valor que necesitas a partir de las props actuales o de otro estado que ya tienes, no hace falta que guardes un nuevo estado para ese valor."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo: Si el estado depende de algo que ya tienes (como una prop), simplemente der\xedvalo de ah\xed en vez de guardarlo por separado."))),(0,t.yg)("li",{parentName:"ul"},"Optimizaci\xf3n con useMemo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Si te preocupa que el c\xe1lculo se haga demasiadas veces (por ejemplo, cada vez que el componente se renderiza), puedes usar el Hook useMemo para memorizar el resultado y evitar c\xe1lculos innecesarios."))),(0,t.yg)("li",{parentName:"ul"},"Reiniciar el estado del \xe1rbol de componentes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Si quieres reiniciar el estado de todo el \xe1rbol de componentes, en lugar de actualizar el estado manualmente, puedes usar un key diferente en el componente para forzar su reinicio. Esto hace que React "destruya" el componente actual y cree uno nuevo con el nuevo estado.'))),(0,t.yg)("li",{parentName:"ul"},"Actualizar el estado en los controladores de eventos:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Siempre que sea posible, es mejor actualizar el estado directamente desde los controladores de eventos. Esto simplifica las cosas y mantiene el flujo de datos m\xe1s claro."))))),(0,t.yg)("li",{parentName:"ul"},"En el raro caso de que ninguno de estos se aplique, hay un patr\xf3n que puedes usar para actualizar el estado en funci\xf3n de las propiedades (props) del componente, llamando a una funci\xf3n set mientras tu componente se est\xe1 renderizando."),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed hay un ejemplo. Este componente CountLabel muestra la propiedad count que se le pas\xf3:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"export default function CountLabel({ count }) {\n  return <h1>{count}</h1>\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Digamos que quieres mostrar si el contador ha aumentado o disminuido desde el \xfaltimo cambio. La prop count no te lo dice, \u2014 necesitas saber su valor anterior. Agrega la variable de estado prevCount para almacenar el valor anterior. Agrega otra variable de estado llamada trend para determinar si el conteo ha aumentado o disminuido. Compara prevCount con count y, si no son iguales, actualiza tanto prevCount como trend. Ahora puedes mostrar  el  conteo actual y ha cambiado desde el \xfaltimo renderizado."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="CountLabel.js"',title:'"CountLabel.js"'},"\nimport { useState } from 'react';\n\nexport default function CountLabel({ count }) {\n  const [prevCount, setPrevCount] = useState(count);\n  const [trend, setTrend] = useState(null);\n  if (prevCount !== count) {\n    setPrevCount(count);\n    setTrend(count > prevCount ? 'aumenta' : 'disminuye');\n  }\n  return (\n    <>\n      <h1>{count}</h1>\n      {trend && <p>El contador {trend}</p>}\n    </>\n  );\n}\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"import { useState } from 'react';\nimport CountLabel from './CountLabel.js';\n\nexport default function App() {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <button onClick={() => setCount(count + 1)}>\n        Aumentar\n      </button>\n      <button onClick={() => setCount(count - 1)}>\n        Disminuir\n      </button>\n      <CountLabel count={count} />\n    </>\n  );\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ten en cuenta que si llamas a una funci\xf3n set durante el renderizado, debe estar dentro de una condici\xf3n como prevCount !== count, y debe haber una llamada como setPrevCount(count) dentro de la condici\xf3n. De lo contrario, tu componente se volver\xeda a procesar en un bucle hasta que se bloquee. Adem\xe1s, solo puedes actualizar el estado del componente actual  de esta manera. Tu llamada set a\xfan deber\xeda actualizar el estado sin mutaci\xf3n \u2014 este caso especial no significa que puedas romper otras reglas de funciones puras."),(0,t.yg)("li",{parentName:"ul"},"Llamar a la funci\xf3n set de otro componente durante el renderizado es un error."),(0,t.yg)("li",{parentName:"ul"},"Este patr\xf3n puede ser dif\xedcil de entender y, por lo general, es mejor evitarlo. Sin embargo, es mejor que actualizar el estado en un Efecto. Cuando llamas a la funci\xf3n set durante el renderizado, React volver\xe1 a renderizar ese componente inmediatamente despu\xe9s de que tu componente salga con una declaraci\xf3n return y antes de renderizar los hijos. De esta manera, sus hijos no necesitan renderizarse dos veces. El resto de la funci\xf3n de tu componente a\xfan se ejecutar\xe1 (y el resultado se descartar\xe1), pero si tu condici\xf3n est\xe1 por debajo de todas las llamadas a Hooks, puedes agregar un return; anticipado dentro de \xe9l para reiniciar el renderizado antes."),(0,t.yg)("li",{parentName:"ul"},"Si llamas a la funci\xf3n set dentro de la funci\xf3n del componente (durante el renderizado), React hace lo siguiente:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Vuelve a renderizar el componente inmediatamente despu\xe9s de que se ejecute lo que contiene el return de tu componente."),(0,t.yg)("li",{parentName:"ol"},"Este nuevo renderizado ocurre antes de que React renderice los hijos del componente. Esto se hace para evitar que los hijos se rendericen dos veces innecesariamente."))),(0,t.yg)("li",{parentName:"ul"},"Aunque la funci\xf3n del componente se ejecuta y la llamada a set provoca un nuevo renderizado, React descarta el resultado de un renderizado interrumpido. Es decir, React no va a mostrar lo que se renderiz\xf3 antes del cambio de estado."),(0,t.yg)("li",{parentName:"ul"},"Si tienes una condici\xf3n que dispara la llamada a set y esa condici\xf3n est\xe1 despu\xe9s de las llamadas a los Hooks (como useState o useEffect), puedes agregar un return anticipado dentro de la condici\xf3n para reiniciar el renderizado antes de que React siga ejecutando el c\xf3digo. Esto evita que se ejecute el resto de la funci\xf3n y ayuda a evitar renderizados innecesarios."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function Counter() {\n  const [count, setCount] = useState(0);\n\n  if (count < 5) {\n    setCount(count + 1);  // Esto provocar\xe1 un renderizado adicional\n    return;  // Evita que el resto del componente se ejecute\n  }\n\n  return <div>Contador: {count}</div>;\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En este ejemplo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Si el count es menor que 5, se llama a setCount y luego se hace un return para evitar que el resto del componente se ejecute."),(0,t.yg)("li",{parentName:"ul"},"Esto reinicia el renderizado y previene que React ejecute el resto del c\xf3digo innecesario.")))))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Documentaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.legacy.reactjs.org/docs/hooks-state.html"},"Usando el Hook de estado (antiguo)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/state-a-components-memory"},"El estado: la memoria de un componente")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/choosing-the-state-structure"},"Elecci\xf3n de la estructura del estado")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/sharing-state-between-components"},"Compartir estado entre componentes")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/reference/react/useState"},"useState")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/updating-objects-in-state"},"Actualizar objetos en el estado"))))),(0,t.yg)("h3",{id:"useeffect"},"useEffect"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es un hook en React que permite realizar efectos secundarios en componentes funcionales. "),(0,t.yg)("li",{parentName:"ul"},"Los efectos secundarios (o side effects en ingl\xe9s) se refieren a cualquier operaci\xf3n que afecta a algo que se encuentra fuera de la funci\xf3n o componente, o que depende de algo que no se puede garantizar que sea constante entre las ejecuciones. En el contexto de React, los efectos secundarios son aquellas acciones que ocurren cuando un componente se muestra en el DOM (confirmaci\xf3n) y que afectan o interact\xfaan con alg\xfan sistema o elemento que no es accesible durante el renderizado.")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Funciones puras (Pureza)")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cuando hablamos de pureza en el contexto de funciones, nos referimos a funciones puras, que son aquellas que cumplen con dos condiciones principales:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Determinismo: Una funci\xf3n pura siempre produce la misma salida para la misma entrada. Esto significa que no importa cu\xe1ntas veces llames a la funci\xf3n con los mismos argumentos, el resultado ser\xe1 siempre el mismo."),(0,t.yg)("li",{parentName:"ul"},"Sin efectos secundarios: Una funci\xf3n pura no modifica ning\xfan estado fuera de su propio alcance ni depende de ning\xfan estado que no est\xe9 expl\xedcitamente pasado como argumento. Es decir, no afecta a variables globales, no realiza operaciones de entrada/salida (interacci\xf3n con sistemas externos para recibir o enviar datos como solicitudes a APIs) y no cambia datos en otros lugares."))),(0,t.yg)("li",{parentName:"ul"},"En el contexto de React, una operaci\xf3n de entrada/salida (I/O) se refiere a acciones que interact\xfaan con sistemas externos o elementos que no son accesibles durante el renderizado.  Por lo tanto, manipular DOM se incluye en las operaciones de Entrada/Salida ya que no se pueden acceder desde el renderizado."),(0,t.yg)("li",{parentName:"ul"},"En el contexto de React:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Renderizado puro: Cuando React renderiza un componente, espera que el resultado (la salida) sea predecible y no cambie en funci\xf3n de algo que no est\xe9 en el estado del componente o en sus props. Si una funci\xf3n de renderizado(componente) tuviera efectos secundarios (como hacer una solicitud a una API), no ser\xeda pura, ya que el resultado depender\xeda de algo externo y podr\xeda cambiar en cada renderizado."),(0,t.yg)("li",{parentName:"ul"},"Uso de useEffect: Aqu\xed es donde entra en juego el hook useEffect. Permite realizar efectos secundarios sin romper la pureza del renderizado. Al mover las operaciones que causan efectos secundarios a useEffect, React se asegura de que el renderizado del componente siga siendo predecible y se mantenga separado de las operaciones que tienen efectos secundarios")))))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Componentes funcionales")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Son componentes que se crean como funciones y no como clase.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"useEffect es un Hook de React que te permite sincronizar un componente con un sistema externo."),(0,t.yg)("li",{parentName:"ul"},"Esta sincronizaci\xf3n se refiere a la capacidad de un componente para interactuar con un sistema externo con el fin de crear/obtener/editar/eliminar datos que se encuentran fuera del alcance del componente y que este no puede controlar."),(0,t.yg)("li",{parentName:"ul"},"Los eventos contienen ",(0,t.yg)("a",{parentName:"li",href:"https://es.wikipedia.org/wiki/Efecto_secundario_%28inform%C3%A1tica%29"},"efectos secundarios (cambia el estado del programa)"),"\nque son provocados por acciones espec\xedficas del usuario. A veces, esto no es suficiente. Considera un componente ChatRoom que debe conectarse al servidor del chat cada vez que est\xe9 visible en pantalla. Conectarse al servidor no es algo puro (es un efecto secundario), por lo que no puede suceder durante el renderizado. Sin embargo, no hay un evento particular como un clic que haga que se conecte al servidor del chat."),(0,t.yg)("li",{parentName:"ul"},"Los Efectos te permiten especificar efectos secundarios que son causados por el renderizado en s\xed mismo, en lugar de por un evento particular. Enviar un mensaje en el chat es un evento porque es directamente causado por el usuario haciendo clic en un bot\xf3n. Sin embargo, establecer una conexi\xf3n a un servidor es un Efecto porque deber\xeda suceder sin importar qu\xe9 interacci\xf3n caus\xf3 que el componente apareciera. Los efectos se ejecutan al final de la confirmaci\xf3n (es cuando se renderiza en el DOM), despu\xe9s de que la pantalla se actualice. Este es un buen momento para sincronizar los componentes de React con alg\xfan sistema externo (como una red o una biblioteca de terceros).")),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"No te apresures en a\xf1adir Efectos en tus componentes. Ten en cuenta que los Efectos se usan t\xedpicamente para \xabsalir\xbb de tu c\xf3digo React y interactuar con alg\xfan sistema externo. Esto incluye APIs del navegador, widgets de terceros, red, etc. Si tu Efecto depende del estado de otro componente, quiz\xe1s no necesites un Efecto."),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed, sistema externo significa cualquier pieza de c\xf3digo que no est\xe1 controlado por React, como:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Un temporizador gestionado con setInterval() y clearInterval()."),(0,t.yg)("li",{parentName:"ul"},"Una suscripci\xf3n de eventos usando addEventListener() y removeEventListener()."),(0,t.yg)("li",{parentName:"ul"},"Una biblioteca de animaci\xf3n de terceros con una API como animation.start() y animation.reset()."))),(0,t.yg)("li",{parentName:"ul"},"Si no estas conectado a ning\xfan sistema externo, probablemente no necesites un efecto.")))),(0,t.yg)("h4",{id:"c\xf3mo-escribir-un-efecto"},"C\xf3mo escribir un efecto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para escribir un Efecto, sigue los siguientes pasos:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Declara un Efecto. Por defecto, tu Efecto se ejecutar\xe1 despu\xe9s de cada confirmaci\xf3n (cada vez que se renderice en el DOM)."),(0,t.yg)("li",{parentName:"ol"},"Define las dependencias del Efecto. La mayor\xeda de los Efectos solo deben volver a ejecutarse cuando sea necesario en lugar de hacerlo despu\xe9s de cada renderizado. Por ejemplo, una animaci\xf3n de desvanecimiento solo debe desencadenarse cuando aparece el componente. La conexi\xf3n y desconexi\xf3n a una sala de chat solo debe suceder cuando el componente aparece y desaparece, o cuando cambia la sala de chat. Aprender\xe1s c\xf3mo controlar esto especificando las dependencias."),(0,t.yg)("li",{parentName:"ol"},"A\xf1ade limpieza si es necesario. Algunos Efectos necesitan especificar c\xf3mo detener, deshacer, o limpiar cualquier cosa que estaban haciendo. Por ejemplo, \xabconectar\xbb necesita \xabdesconectar\xbb, \xabsuscribirse\xbb necesita \xabanular suscripci\xf3n\xbb y \xabbuscar\xbb necesita \xabcancelar\xbb o \xabignorar\xbb. Aprender\xe1s c\xf3mo hacer esto devolviendo una funci\xf3n de limpieza.")))),(0,t.yg)("h4",{id:"1--declarar-un-efecto"},"1- Declarar un efecto"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useEffect } from 'react'\n\nimport './App.css'\n\nfunction App() : JSX.Element {\n   \n  useEffect( () => {\n     console.log('El c\xf3digo aqu\xed se ejecutar\xe1 despu\xe9s de *cada* renderizado')\n  })\n\n  return (\n    <>\n      <p>Es un componente</p>\n       \n    </>\n  )\n}\n\nexport default App\n\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Para declarar un efecto en tu componente, importa el Hook useEffect desde React:"),(0,t.yg)("li",{parentName:"ul"},"UseEffect() como primer par\xe1metro recibe una funci\xf3n/callback que contiene el c\xf3digo que se va a ejecutar."),(0,t.yg)("li",{parentName:"ul"},"Por defecto la funci\xf3n se ejecuta cuando el componente se renderiza/aparece en el DOM.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ahora considera un componente de React ","<","VideoPlayer>. Ser\xeda bueno controlar si est\xe1 reproduci\xe9ndose o en pausa, envi\xe1ndole la prop isPlaying."),(0,t.yg)("li",{parentName:"ul"},"Al usar una referencia con useRef() puede que sientas la tentaci\xf3n de intentar llamar a play() o pause() durante el renderizado, pero eso no es correcto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useState, useRef } from 'react';\n\nfunction VideoPlayer({ src, isPlaying } : {src:string , isPlaying : boolean}) {\n  const ref = useRef(null);\n\n  if (isPlaying) {\n    ref.current.play();  // Llamar a estas funciones mientras se renderiza no est\xe1 permitido.\n  } else {\n    ref.current.pause(); // Esto tambi\xe9n causa error.\n  }\n\n  return <video ref={ref} src={src} loop playsInline />;\n}\n\nexport default function App() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  return (\n    <>\n      <button onClick={() => setIsPlaying(!isPlaying)}>\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n      <VideoPlayer\n        isPlaying={isPlaying}\n        src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\"\n      />\n    </>\n  );\n}\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Esto te devuelve: Cannot read properties of null (reading 'pause')"),(0,t.yg)("li",{parentName:"ul"},"La raz\xf3n por la que este c\xf3digo no es correcto es porque intenta hacer algo con el nodo de DOM durante el renderizado. En React, renderizar debe ser una funci\xf3n pura de JSX y no debe contener efectos secundarios como la modificaci\xf3n del DOM."),(0,t.yg)("li",{parentName:"ul"},'"Durante el renderizado" en React es el momento en que React toma el c\xf3digo JSX de cada componente y lo convierte en elementos de React, que son descripciones de elementos HTML. Estos elementos de React son objetos que describen c\xf3mo deber\xeda verse el componente en la interfaz de usuario.'),(0,t.yg)("li",{parentName:"ul"},'Despu\xe9s de crear estos elementos de React, el sistema de React usa un proceso llamado "reconciliaci\xf3n" para compararlos con el DOM real y hacer las actualizaciones necesarias. As\xed, React actualiza eficientemente el DOM solo en las partes que han cambiado, en lugar de volver a renderizar toda la p\xe1gina.'),(0,t.yg)("li",{parentName:"ul"},"Entonces hay dos momentos:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Renderizado (o creaci\xf3n del elemento de React): Durante esta fase, React toma el c\xf3digo JSX de un componente y lo convierte en "un elementos de React". Estos son objetos ligeros que describen c\xf3mo deber\xeda verse el componente en la interfaz, pero en este momento todav\xeda no han sido agregados al DOM real. React utiliza la jerarquia de estas elementos de React para crear un DOM virtual. En resumen, Se crean los elementos de React a partir del JSX, pero no se interact\xfaa con el DOM real.'),(0,t.yg)("li",{parentName:"ul"},"Confirmaci\xf3n (o actualizaci\xf3n del DOM): En esta fase, React toma los elementos de React que ha creado (su jerarquia, DOM virtual) y decide qu\xe9 cambios se deben hacer en el DOM real. Utiliza un proceso de reconciliaci\xf3n para comparar el DOM VIRTUAL con el DOM real. Solo las partes que han cambiado se actualizan en el DOM real, lo que hace que el proceso sea eficiente. En resumen, React aplica los cambios necesarios al DOM para actualizar la interfaz del usuario."))),(0,t.yg)("li",{parentName:"ul"},"Adem\xe1s, cuando se llama a VideoPlayer por primera vez, \xa1su DOM no existe todav\xeda! No hay un nodo de DOM para llamar a play() o pause(), porque React todavia no agrego ning\xfan elemento al DOM real.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"La soluci\xf3n es envolver el efecto secundario con useEffect:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useState, useRef, useEffect} from 'react';\n\nfunction VideoPlayer({ src, isPlaying } : {src:string , isPlaying : boolean}) {\n  const ref : React.MutableRefObject<HTMLVideoElement | null> = useRef(null);\n\n  useEffect(() => {\n    console.log('Se ejecuto');\n    if (isPlaying) {\n      ref.current?.play();\n    } else {\n      ref.current?.pause();\n    }\n  });\n\n  return <video ref={ref} src={src} loop playsInline />;\n}\n\nexport default function App() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  return (\n    <>\n      <button onClick={() => setIsPlaying(!isPlaying)}>\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n      <VideoPlayer\n        isPlaying={isPlaying}\n        src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\"\n      />\n    </>\n  );\n}\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"UseEffect () ejecuta la funci\xf3n/callback que recibe cuando el componente aparece en la pantalla."),(0,t.yg)("li",{parentName:"ul"},"Luego cada vez que se actualiza el componente en la pantalla, se ejecutara la funci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"El callback de useEffect se ejecuta despu\xe9s de que se haya completado el proceso de renderizado y confirmaci\xf3n, lo que significa que el DOM ya est\xe1 actualizado. Esto es crucial porque asegura que cualquier manipulaci\xf3n del DOM o interacciones con otros sistemas sucedan despu\xe9s de que el componente haya sido agregado o actualizado en la pantalla."),(0,t.yg)("li",{parentName:"ul"},"Ese proceso de renderizado y confirmaci\xf3n, se suele decir \u201crenderizado\u201d."),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo, el \xabsistema externo\xbb que sincronizaste con el estado de React fue la API browser media. Puedes usar un enfoque similar para envolver c\xf3digo heredado que no es de React (como plugins de jQuery) en componentes declarativos de React."),(0,t.yg)("li",{parentName:"ul"},"Nota que en la pr\xe1ctica, controlar un reproductor de video es mucho m\xe1s complejo. Llamar a play() puede fallar, el usuario podr\xeda reproducir o pausar usando los controles integrados del navegador, etc. Este ejemplo es muy simplificado e incompleto.")))),(0,t.yg)("h4",{id:"2--dependencias-del-efecto"},"2- Dependencias del Efecto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Por defecto, los Efectos se ejecutan despu\xe9s de cada renderizado. A menudo, esto no es lo que tu busca:\t",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"A veces, es lento. Sincronizar con un sistema externo no siempre es instant\xe1neo, por lo que es posible que desees evitar hacerlo a menos que sea necesario. Por ejemplo, no quieres volver a conectarte al servidor de chat en cada pulsaci\xf3n de tecla."),(0,t.yg)("li",{parentName:"ul"},"A veces, est\xe1 mal. Por ejemplo, no quieres desencadenar una animaci\xf3n de desvanecimiento en un componente en cada pulsaci\xf3n de tecla. La animaci\xf3n solo se debe reproducir cuando el componente aparece por primera vez."))),(0,t.yg)("li",{parentName:"ul"},"Para demostrar el problema, aqu\xed est\xe1 el ejemplo anterior con algunas llamadas console.log y un campo de texto que actualiza el estado del componente padre. Observa c\xf3mo escribir provoca que el Efecto se ejecute de nuevo:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useState, useRef, useEffect} from 'react';\n\nfunction VideoPlayer({ src, isPlaying } : {src:string , isPlaying : boolean}) {\n  const ref : React.MutableRefObject<HTMLVideoElement | null> = useRef(null);\n\n  useEffect(() => {\n    if (isPlaying) {\n      console.log('Llamando a video.play()');\n      ref.current?.play();\n    } else {\n      console.log('Llamando a video.pause()');\n      ref.current?.pause();\n    }\n  });\n\n  return <video ref={ref} src={src} loop playsInline />;\n}\n\nexport default function App() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [text, setText] = useState('');\n  return (\n    <>\n      <input value={text} onChange={e => setText(e.target.value)} />\n      <button onClick={() => setIsPlaying(!isPlaying)}>\n        {isPlaying ? 'Pausa' : 'Reproducir'}\n      </button>\n      <VideoPlayer\n        isPlaying={isPlaying}\n        src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\"\n      />\n    </>\n  );\n}\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El useEffect en el componente VideoPlayer se activa cada vez que ocurre un renderizado del componente, ya sea porque cambian sus propias props o porque un componente padre, como App, se vuelve a renderizar."),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed est\xe1 la raz\xf3n espec\xedfica:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Cada vez que introduces un valor en el ","<","input>, el estado text se actualiza con setText(e.target.value)."),(0,t.yg)("li",{parentName:"ol"},"Esta actualizaci\xf3n de estado provoca que App se vuelva a renderizar, ya que React vuelve a ejecutar la funci\xf3n de App para reflejar el cambio en el \xe1rbol de componentes."),(0,t.yg)("li",{parentName:"ol"},"Cuando App se renderiza nuevamente, VideoPlayer tambi\xe9n se vuelve a renderizar (porque VideoPlayer es un hijo de App)."),(0,t.yg)("li",{parentName:"ol"},"Cada vez que VideoPlayer se renderiza, el useEffect en su interior se ejecuta porque, en tu c\xf3digo, no tiene una lista de dependencias. Al no tener dependencias, el efecto se ejecuta en cada renderizado."))),(0,t.yg)("li",{parentName:"ul"},'Es importante se\xf1alar que React aplica un mecanismo de "reconciliaci\xf3n" para optimizar los renderizados; React solo actualiza las partes del DOM que realmente han cambiado en cada renderizado, en lugar de reconstruir todo el \xe1rbol del DOM. Sin embargo, el comportamiento de los hooks como useEffect sigue algunas reglas debido a la forma en que React maneja el re-renderizado de componentes.'),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed est\xe1n los detalles importantes:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Re-renderizado de componentes: Aunque React solo actualiza el DOM de manera selectiva, el re-renderizado en React significa que la funci\xf3n del componente se ejecuta nuevamente. As\xed, cualquier actualizaci\xf3n de estado en App provoca que React vuelva a ejecutar App, lo que incluye a todos sus componentes hijos (como VideoPlayer), porque React necesita determinar si la salida ha cambiado."),(0,t.yg)("li",{parentName:"ol"},"Ejecuta useEffect en cada renderizado: React ejecuta useEffect cada vez que el componente se renderiza, a menos que se especifique una lista de dependencias. En tu caso, useEffect en VideoPlayer se ejecuta con cada re-renderizado porque no tiene una lista de dependencias, lo que hace que el efecto se ejecute despu\xe9s de cada renderizado, aunque el DOM no se haya modificado visiblemente."))),(0,t.yg)("li",{parentName:"ul"},"Entonces, aunque React solo cambia el DOM en lo necesario, useEffect responde a cualquier renderizado del componente a menos que le digas lo contrario mediante dependencias, controlando as\xed cu\xe1ndo y c\xf3mo deben ejecutarse estos efectos.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Puedes indicarle a React omitir la innecesaria ejecuci\xf3n del Efecto especificando un array de dependencias como segundo argumento en la llamada a useEffect. Empieza a\xf1adiendo un array vac\xedo [] en el ejemplo anterior:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"  useEffect(() => {\n    if (isPlaying) {\n      console.log('Llamando a video.play()');\n      ref.current?.play();\n    } else {\n      console.log('Llamando a video.pause()');\n      ref.current?.pause();\n    }\n  } , []);\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cuando el segundo par\xe1metro de useEffect es un array vac\xedo ([]), le est\xe1s indicando a React que el efecto debe ejecutarse solo una vez, despu\xe9s del primer renderizado del componente, y no debe volver a ejecutarse en los renderizados posteriores, sin importar los cambios de estado o de props en el componente."),(0,t.yg)("li",{parentName:"ul"},"Esto es \xfatil para inicializar alguna funcionalidad que solo debe ejecutarse una vez al montar el componente, como suscribirse a un evento, realizar una llamada de API inicial, configurar un temporizador o cualquier operaci\xf3n que no dependa de actualizaciones futuras en el componente.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En nuestro c\xf3digo tendremos un error, ya que React se dio cuenta que el \u201cefecto\u201d deber\xeda ejecutarse cada vez que cambia \u201cisPlaying\u201d (dependencia) y no tendr\xeda sentido hacer que se ejecute solo una vez."),(0,t.yg)("li",{parentName:"ul"},"Por lo tanto, a\xf1adiremos en el array de dependencias el isPlaying:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-typescript"},"  useEffect(() => {\n    if (isPlaying) {\n      console.log('Llamando a video.play()');\n      ref.current?.play();\n    } else {\n      console.log('Llamando a video.pause()');\n      ref.current?.pause();\n    }\n  } , [isPlaying]);\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El array que se pasa como segundo par\xe1metro a useEffect es conocido como el array de dependencias. Su funci\xf3n es indicar a React cu\xe1ndo debe ejecutar el efecto nuevamente."),(0,t.yg)("li",{parentName:"ul"},'Una dependencia es cualquier valor o variable que el efecto necesita "observar" para funcionar correctamente. React vigila los cambios en estos valores y ejecuta el efecto solo cuando estos cambian. Entonces, al definir dependencias en el array, est\xe1s especificando expl\xedcitamente a React que el efecto solo debe ejecutarse si alguno de esos valores cambia. '),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Solo ejecuta el efecto en el primer renderizado y cuando isPlaying cambie: React observar\xe1 el valor de isPlaying, y si cambia (por ejemplo, de true a false o viceversa), useEffect volver\xe1 a ejecutarse. Esto hace que el efecto solo se dispare cuando sea relevante, es decir, cuando el estado isPlaying cambie."),(0,t.yg)("li",{parentName:"ul"},"Gracias al array de dependencias ","[isPlaying]",", React sabe que el efecto no necesita ejecutarse en otros renderizados del componente donde isPlaying no cambia. Esto mejora el rendimiento y evita ejecutar c\xf3digo de reproducci\xf3n o pausa innecesariamente."))),(0,t.yg)("li",{parentName:"ul"},"El array de dependencias puede contener m\xfaltiples dependencias. React s\xf3lo omitir\xe1 la ejecuci\xf3n del Efecto si todas las dependencias que especifiques tienen exactamente los mismos valores que ten\xedan durante el renderizado anterior. React compara los valores de dependencia utilizando la comparaci\xf3n Object.is. "),(0,t.yg)("li",{parentName:"ul"},"Observa que t\xfa no puedes \xabelegir\xbb las dependencias. As\xed como en el ejemplo anterior, obtendr\xe1s un error de lint si las dependencias que definiste no coinciden con lo que React espera seg\xfan el c\xf3digo dentro de tu Efecto. Esto ayuda a detectar errores en tu c\xf3digo. Si no deseas que cierto c\xf3digo se vuelva a ejecutar, edita el c\xf3digo del Efecto para no \xabnecesitar\xbb esa dependencia. ")))),(0,t.yg)("h4",{id:"3--a\xf1ade-limpieza-si-es-necesario"},"3- A\xf1ade limpieza si es necesario"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Considera otro ejemplo. Est\xe1s escribiendo un componente ChatRoom que necesita conectarse al servidor del chat cuando aparece. Se te da un m\xe9todo llamado createConnection() que devuelve un objeto con los m\xe9todos connect() y disconnect(). \xbfC\xf3mo mantienes conectado el componente mientras este se muestra al usuario?"),(0,t.yg)("li",{parentName:"ul"},"Simulemos la l\xf3gica del m\xe9todo createConnection con este archivo chat.js:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"export function createConnection() {\n  // Una implementaci\xf3n real se conectar\xeda al servidor\n  return {\n    connect() {\n      console.log('\u2705 Conectando...');\n    },\n    disconnect() {\n      console.log('\u274c Desconectado.');\n    }\n  };\n}\n\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ahora comenzamos por escribir la l\xf3gica dentro del array de dependencia del useEffect() en el componente App:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { useEffect } from 'react';\nimport {createConnection} from './chat.js'\n\nexport default function ChatRoom() {\n  useEffect(() => {\n    const connection = createConnection();\n    connection.connect();\n  }, []);\n  return <h1>\xa1Bienvenido al chat!</h1>;\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Este efecto solo se ejecuta cuando se monta el componente, entonces podr\xedas pensar que "\u2705 Conectando..." se imprime una vez en la consola. Sin embargo, si revisas la consola, "\u2705 Conectando..." se imprime dos veces. \xbfPor qu\xe9 sucede esto?'),(0,t.yg)("li",{parentName:"ul"},"Imagina que el componente ChatRoom es parte de una gran aplicaci\xf3n con muchas pantallas diferentes. El usuario inicia su viaje en la p\xe1gina ChatRoom. El componente se monta y llama a connection.connect(). Entonces imagina que el usuario navega hacia otra pantalla, por ejemplo, a la p\xe1gina de Configuraci\xf3n. El componente ChatRoom se desmonta. Finalmente, el usuario hace clic en el bot\xf3n de atr\xe1s y ChatRoom se monta nuevamente. Esto configurar\xeda una segunda conexi\xf3n \xa1Pero la primera conexi\xf3n nunca fue destruida! A medida que el usuario navega por la aplicaci\xf3n, las conexiones seguir\xedan acumul\xe1ndose."),(0,t.yg)("li",{parentName:"ul"},'Ver en consola dos veces "\u2705 Conectando..." te ayuda a notar el problema real: tu c\xf3digo no cierra la conexi\xf3n cuando el componente se desmonta.'),(0,t.yg)("li",{parentName:"ul"},"Para solucionar este problema, devuelve una funci\xf3n de limpieza desde el Efecto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"export default function ChatRoom() {\n  useEffect(() => {\n    const connection = createConnection();\n    connection.connect();\n    return () => {\n      connection.disconnect();\n    };\n  }, []);\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n de limpieza (o cleanup function) en useEffect es una funci\xf3n opcional que React ejecuta cuando el componente se desmonta o antes de que se ejecute nuevamente el efecto debido a cambios en sus dependencias. Su prop\xf3sito es limpiar recursos o cancelar efectos secundarios creados por useEffect, como eliminar event listeners, detener temporizadores o cancelar suscripciones a datos."),(0,t.yg)("li",{parentName:"ul"},"Dentro del callback de useEffect (), se implementa la l\xf3gica del efecto que se ejecutara por cada renderizado, dependencia, etc."),(0,t.yg)("li",{parentName:"ul"},"A su vez el callback puede devolver una funci\xf3n, esta funci\xf3n ser\xe1 la cleanup function que contendr\xe1 la l\xf3gica para limpiar o cancelar lo que se haya configurado en el efecto."),(0,t.yg)("li",{parentName:"ul"},"Ahora obtendr\xe1s tres mensajes en la consola en el modo de desarrollo:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},'"\u2705 Conectando..."'),(0,t.yg)("li",{parentName:"ol"},'"\u274c Desconectado."'),(0,t.yg)("li",{parentName:"ol"},'"\u2705 Conectando..."'))),(0,t.yg)("li",{parentName:"ul"},"Este es el comportamiento correcto en modo de desarrollo. Al volver a montar el componente, React verifica que navegar a otro lado y luego volver, no romper\xe1 tu c\xf3digo. \xa1Desconectar y luego conectar nuevamente es exactamente lo que deber\xeda suceder!"),(0,t.yg)("li",{parentName:"ul"},"Cuando implementas la limpieza adecuadamente, no debe haber ninguna diferencia visible para el usuario entre ejecutar el Efecto una vez o ejecutarlo, limpiarlo y volver a ejecutarlo \xf3sea que el usuario no deber\xeda darse cuenta si el efecto se ejecut\xf3 solo una vez o varias veces. Hay llamadas adicionales a connect/disconnect porque React est\xe1 explorando tu c\xf3digo en busca de errores en desarrollo. Esto es normal, \xa1No intentes hacerlo desaparecer!."),(0,t.yg)("li",{parentName:"ul"},'En producci\xf3n, solo ver\xe1s "\u2705 Conectando..." una vez. Volver a montar componentes solo sucede en desarrollo para ayudarte a encontrar Efectos que necesitan limpieza.'),(0,t.yg)("li",{parentName:"ul"},"React intencionalmente vuelve a montar tus componentes en desarrollo con el fin de encontrar errores como en el anterior ejemplo.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"M\xe1s informaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/synchronizing-with-effects#challenges"},"Sincronizar con Efectos")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/you-might-not-need-an-effect"},"Quiz\xe1s no necesites un Efecto")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/reference/react/useEffect"},"useEffect"))))),(0,t.yg)("h3",{id:"usecontext"},"useContext"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/React/context#usecontext"},"Guia"))),(0,t.yg)("h2",{id:"hooks-adicionales"},"Hooks Adicionales"),(0,t.yg)("h3",{id:"usereducer"},"useReducer"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/React/reducer#usereducer-1"},"guia"))),(0,t.yg)("h3",{id:"usecallback"},"useCallback"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Devuelve un callback memorizado."),(0,t.yg)("li",{parentName:"ul"},"useCallback tiene dos argumentos:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El callback"),(0,t.yg)("li",{parentName:"ul"},"Un array de dependencias."))),(0,t.yg)("li",{parentName:"ul"},"useCallback devolver\xe1 una versi\xf3n memorizada del callback que solo cambia si una de las dependencias ha cambiado",(0,t.yg)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"El arreglo de dependencias no se pasa como argumentos al callback. Sin embargo, conceptualmente, eso es lo que representan: cada valor al que se hace referencia dentro del callback tambi\xe9n debe aparecer en el arreglo de dependencias"))),(0,t.yg)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Callback memorizado")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Significa que esta guardado en la memoria RAM Y no se declara cada vez que se llama."))))),(0,t.yg)("h4",{id:"codigo-sin-usecallback"},"Codigo sin Usecallback"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [contador , setContador] = useState(0);\n  const incrementador = () => {\n    setContador(contador + 1)\n  }\n   useEffect(() => {\n     alert('Se creo la funcion incrementador');\n   } , [incrementador])\n\n  return (\n    <div className=\"App\">\n      <h1>Componente Principal</h1>\n      <button onClick={incrementador}>+</button>\n       {contador}\n    </div>\n  );\n}\n\nexport default App;\n\n")),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Cada vez que aumenta el contador, se vuelve a crear la funci\xf3n incrementador (se vuelve a renderizar la parte afectada y se vuelve a crear la funcion ya que utiliza  el hook que cambio)"))),(0,t.yg)("h4",{id:"solucionamos-el-problema-con-el-usecallback"},"Solucionamos el problema con el useCallback"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useEffect, useState, useCallback } from "react";\nimport "./App.css";\n\nfunction App() {\n  const [contador, setContador] = useState(0);\n  const incrementador = useCallback(() => {\n    setContador((viejo) => {\n      return viejo + 1;\n    });\n  } , []);\n  useEffect(() => {\n    alert("Se creo la funcion incrementador");\n  }, [incrementador]);\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <button onClick={incrementador}>+</button>\n      {contador}\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h3",{id:"usememo"},"useMemo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Devuelve un valor memorizado."),(0,t.yg)("li",{parentName:"ul"},"useMemo tiene dos argumentos:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Una funci\xf3n que devuelve un \u201cvalor\u201d."),(0,t.yg)("li",{parentName:"ul"},"Un array de dependencias.",(0,t.yg)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"El arreglo de dependencias no se pasa como argumentos a la funci\xf3n. Sin embargo, conceptualmente, eso es lo que representan: cada valor al que se hace referencia dentro de la funci\xf3n tambi\xe9n debe aparecer en el arreglo de dependencias"))),(0,t.yg)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Valor memorizado")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Significa que esta guardado en la memoria RAM Y no se declara cada vez que se llama."))))))),(0,t.yg)("h4",{id:"ejemplo-4"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useEffect, useState, useMemo } from "react";\nimport "./App.css";\n\nfunction App() {\n  const [contador, setContador] = useState(0);\n  const contadorMemorizado = useMemo(() => {\n    return contador\n  } , []);\n  useEffect(() => {\n    alert("Se cambio la variable");\n  }, [contadorMemorizado]);\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <button onClick={()=>{setContador(contador + 1)}}>+</button>\n      {contador}\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h4",{id:"otro-ejemplo"},"Otro Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useEffect, useState, useMemo } from "react";\nimport "./App.css";\n\nfunction App() {\n  const [contador, setContador] = useState(0);\n  const [valor , setValor] = useState(0);\n  const contadorMemorizado = useMemo(() => {\n    return contador\n  } , [valor]);\n  const incrementador = ()=> {\n    setContador(contador + 1);\n    setValor(valor + 1);\n  }\n  useEffect(() => {\n    alert("Se cambio el contadorMemorizado");\n    console.log(contadorMemorizado);\n  }, [contadorMemorizado]);\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <button onClick={incrementador}>+</button>\n      <p>contador  {contador}</p>\n      <p>valor  {valor}</p>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h3",{id:"useref"},"useRef"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/React/proyecto#useref"},"guia"))),(0,t.yg)("h3",{id:"useimperativehandle"},"useImperativeHandle"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Le sacamos provecho con:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"useRef (",(0,t.yg)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/React/proyecto#useref"},"guia1"),"  -- ",(0,t.yg)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/React/formulario#useref"},"guia 2"),")"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/React/proyecto#forwardref"},"forwardRef")," "))),(0,t.yg)("li",{parentName:"ul"},"useImperativeHandle es un hook que se utiliza para definir funciones en un componente que se puede invocar fuera de este."),(0,t.yg)("li",{parentName:"ul"},"La funcion no va a cambiar a menos que le indiques dependencias."),(0,t.yg)("li",{parentName:"ul"},"Tiene tres par\xe1metros")),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Ref (Especifica donde se va a guardar lo que se pase en el segundo parametro)"),(0,t.yg)("li",{parentName:"ol"},"Funci\xf3n que devuelve un objeto (Lo que devuelve el objeto , es lo que se va a guardar en la referencia)"),(0,t.yg)("li",{parentName:"ol"},"Un array con las dependencias")),(0,t.yg)("h4",{id:"ejemplo-5"},"Ejemplo"),(0,t.yg)("p",null,"Componente Padre"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useRef } from "react";\nimport "./App.css";\nimport Componente from "./components/Componente";\n\nfunction App() {\n   const elementoRef = useRef();\n  return (\n    <div className="App">\n      <h1 >Componente Principal</h1>\n       <Componente ref={elementoRef}></Componente>\n       <button onClick={()=> {elementoRef.current.metodoHijo(\'Texto del Padre\')}} >Boton del padre</button>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("p",null,"Componente Hijo "),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { forwardRef, useImperativeHandle, useState } from "react";\n\nconst Componente = forwardRef( (props , ref) => {\n\n    useImperativeHandle(ref , ()=> {\n        return {\n        //   Guardamos el metodo hijo en el ref\n            metodoHijo\n        }\n    })\n    const [dato , setDato] = useState("");\n    const metodoHijo = (texto) => {\n         setDato(texto);\n    }\n\n    \n    {\n        return (\n          <div>\n            <h1>Componente Hijo</h1>\n             <p>      {dato}</p>\n             <button onClick={()=> {metodoHijo(\'Texto del hijo\')}} >Boton Hijo</button>\n             </div>\n          \n        );\n      }\n}) \n  \n  export default Componente;\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Lo que devuelve la funcion del segundo par\xe1metro , es el objeto que  se guarda en el ref que se pas\xf3 en el primer par\xe1metro"),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo el objeto del segundo par\xe1metro se guardo en el elementoRef , que es el ref del componente Hijo que lo obtuvo del padre."),(0,t.yg)("li",{parentName:"ul"},"El componente padre le paso un ref al hijo y este lo uso para guardar un objeto en \xe9l (ref). De esta manera el padre tiene acceso al metodoHijo"),(0,t.yg)("li",{parentName:"ul"},"Por lo tanto a trav\xe9s del ref en el componente padre, pudimos acceder al m\xe9todo del componente Hijo.")))),(0,t.yg)("h3",{id:"uselayouteffect"},"useLayoutEffect"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es igual a useEffect , la diferencia es el tiempo de ejecuci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Se ejecuta antes de que se muestren todos los componentes en la pantalla.")),(0,t.yg)("h4",{id:"useeffect-1"},"useEffect"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Este hook se ejecuta de manera as\xedncrona despu\xe9s de ser renderizado y mostrado el componente en pantalla."),(0,t.yg)("li",{parentName:"ul"},"El useEffect se ejecuta despu\xe9s de que se  muestren todos los componentes en la pantalla."),(0,t.yg)("li",{parentName:"ul"},"Este es el paso a paso que sucede con tu componente cuando est\xe1s usando este hook:")),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"El estado del componente cambia"),(0,t.yg)("li",{parentName:"ol"},"El componente se vuelve a renderizar"),(0,t.yg)("li",{parentName:"ol"},"El componente es mostrado en pantalla"),(0,t.yg)("li",{parentName:"ol"},"useEffect se ejecuta")),(0,t.yg)("h4",{id:"uselayouteffect-1"},"useLayoutEffect"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"useLayoutEffect es id\xe9ntico a useEffect , pero su principal diferencia clave es que se activa sincr\xf3nicamente despu\xe9s de todas las mutaciones del DOM. Solo desea usar este gancho cuando necesite hacer cambios de DOM directamente."),(0,t.yg)("li",{parentName:"ul"},"useLayoutEffect se ejecuta de manera s\xedncrona despu\xe9s de que se tenga el render del componente, pero ANTES de ser pintado en pantalla."),(0,t.yg)("li",{parentName:"ul"},"Ahora ver\xe1s que pasa con tu componente:")),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"El estado del componente cambia"),(0,t.yg)("li",{parentName:"ol"},"El componente se vuelve a renderizar"),(0,t.yg)("li",{parentName:"ol"},"useLayoutEffect se ejecuta y React espera a que termine"),(0,t.yg)("li",{parentName:"ol"},"El componente es mostrado en pantalla")),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"\u26a0\ufe0f")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"}," Todo lo que hagas con este hook har\xe1 que el paint del componente tarde m\xe1s de lo esperado, lo cual puede afectar el performance."))),(0,t.yg)("h4",{id:"ejemplo-6"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useEffect, useLayoutEffect } from "react";\nimport "./App.css";\n\nfunction App() {\n  useEffect(()=> {\n         console.log(\'useEffect\');\n  } , []);  \n  \n  useLayoutEffect(()=> {\n         console.log(\'useLayoutEffect\');\n  } , []);\n \n  return (\n    <div className="App">\n      <h1 >Componente Principal</h1>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"}," Se ejecuta antes que useEffect."))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Mas info")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://kentcdodds.com/blog/useeffect-vs-uselayouteffect"},"Las diferencias")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://platzi.com/blog/useeffect-uselayouteffect/"},"Las diferencias parte 2"))))),(0,t.yg)("h3",{id:"usedebugvalue"},"useDebugValue"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se usa para imprimir(mostrar) informaci\xf3n de  hooks personalizados"),(0,t.yg)("li",{parentName:"ul"},"Es \xfatil para sus propios hooks, ya que puede ver r\xe1pidamente informaci\xf3n detallada sobre sus hooks."),(0,t.yg)("li",{parentName:"ul"},"Su \xfanico par\xe1metro es la informaci\xf3n a mostrar."),(0,t.yg)("li",{parentName:"ul"},"La informaci\xf3n solo la vera en la consola (si tiene la extension de React) o en alguna herramienta de depuraci\xf3n.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'\nimport { useDebugValue, useState } from "react";\nimport "./App.css";\n function useMyHook(nombre = null) {\n  const [user, setUser] = useState(nombre)\n\n  useDebugValue(nombre == null ? \'No User\' : user.name)\n\n  return [user, setUser]\n}\nfunction App() {\n  const [user,setUser] = useMyHook();\n  return (\n   \n    <div className="App">\n      <h1 >Componente Principal</h1>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h4",{id:"mas-info"},(0,t.yg)("a",{parentName:"h4",href:"https://blog.webdevsimplified.com/2021-11/use-debug-value/"},"Mas info")),(0,t.yg)("h3",{id:"usedeferredvalue"},"useDeferredValue"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"useDeferredValue acepta un valor y devuelve una nueva copia del valor que ceder\xe1 su lugar a actualizaciones m\xe1s urgentes"),(0,t.yg)("li",{parentName:"ul"},"El valor que devuelve tendr\xe1 prioridad baja al actualizarse, esperar\xe1 hasta que finalice todas las dem\xe1s actualizaciones para actualizarse."),(0,t.yg)("li",{parentName:"ul"},"useDeferredValue  devolver\xe1 una versi\xf3n diferida del valor pasado. Toma el valor del estado."),(0,t.yg)("li",{parentName:"ul"},"useDeferredValue Devolvera un valor diferido"),(0,t.yg)("li",{parentName:"ul"},"Tendr\xe1 un retraso al actualizarse (el valor diferido)."),(0,t.yg)("li",{parentName:"ul"},"Si el valor pasado al useDeferredValue cambia, el valor diferido cambia ")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Sintaxis ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("pre",{parentName:"div"},(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport { useDeferredValue } from 'react';\n\nconst deferredValue = useDeferredValue(value);\n\n")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Explicaci\xf3n del valor diferido al modificarse:")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"React devolver\xe1 el valor anterior. Luego, cambiar\xe1 al nuevo valor despu\xe9s de que se haya completado el renderizado actual."))),(0,t.yg)("h4",{id:"mas-info-1"},"Mas info"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://blog.webdevsimplified.com/2022-05/use-deferred-value/"},"Su uso")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://github.com/reactwg/react-18/discussions/129"},"Debates")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://blog.saeloun.com/2022/01/13/react-18-usedefferedvalue-hook"},"Un articulo sobre el hook"))),(0,t.yg)("h4",{id:"ejemplo-7"},"Ejemplo"),(0,t.yg)("p",null,"Sin el hook"),(0,t.yg)("p",null,"App.js"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import {  useState } from "react";\nimport "./App.css";\nimport List from "./List";\n\nfunction App() {\n\n  const [input, setInput] = useState("");\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  \n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <input type="text" value={input} onChange={handleChange}></input>\n        <List input={input}></List>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("p",null,"List.js"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useMemo } from "react";\n\nfunction List({input}){\n    const LIST_SIZE = 20000;\n    const list = useMemo(()=> {\n        const l = []\n        for (let i = 0; i < LIST_SIZE; i++){\n           l.push(<div key={i}>{input}</div>)\n        }\n        return l;\n    } , [input])\n\n    return list;\n}\n\nexport default List;\n\n')),(0,t.yg)("p",null,"Si aplicamos el Hook:"),(0,t.yg)("p",null,"List.js"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useMemo , useDeferredValue } from "react";\n\nfunction List({input}){\n    const LIST_SIZE = 20000;\n    const deferredInput = useDeferredValue(input);\n    const list = useMemo(()=> {\n        const l = []\n        for (let i = 0; i < LIST_SIZE; i++){\n           l.push(<div key={i}>{deferredInput}</div>)\n        }\n        return l;\n    } , [deferredInput])\n\n    return list;\n}\n\nexport default List;\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Le dar\xe1 la impresi\xf3n que el input es m\xe1s r\xe1pido."),(0,t.yg)("li",{parentName:"ul"},"Ya que se actualizar\xe1 primero el input y luego el m\xe9todo list memorizado."),(0,t.yg)("li",{parentName:"ul"},"Esto se debe a que el m\xe9todo memorizado esta pendiente de la versi\xf3n diferida del input.")))),(0,t.yg)("h4",{id:"quien-se-actualiza-primero"},"\xbfQuien se actualiza Primero?"),(0,t.yg)("p",null,"List.js"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useMemo , useDeferredValue, useEffect } from "react";\n\nfunction List({input}){\n    const LIST_SIZE = 20000;\n    const deferredInput = useDeferredValue(input);\n    const list = useMemo(()=> {\n        const l = []\n        for (let i = 0; i < LIST_SIZE; i++){\n           l.push(<div key={i}>{deferredInput}</div>)\n        }\n        return l;\n    } , [deferredInput])\n  useEffect(()=> {\n     console.log(`Input: ${input} \\nDeferred: ${deferredInput}`)\n  } , [input , deferredInput])\n    return list;\n}\n\nexport default List;\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Solucion")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"En el console.log va a poder distinguir el retraso que tiene el valor diferido con el otro."))),(0,t.yg)("h3",{id:"usetransition"},"useTransition"),(0,t.yg)("h4",{id:"problema"},"Problema"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useState } from "react";\nimport "./App.css";\n\nfunction App() {\n  const LIST_SIZE = 20000;\n  const [input, setInput] = useState("");\n  const [list, setList] = useState([]);\n  const handleChange = (e) => {\n    setInput(e.target.value);\n    const l = [];\n    for (let i = 0; i < LIST_SIZE; i++) {\n      l.push(e.target.value);\n    }\n    setList(l);\n  };\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <input type="text" value={input} onChange={handleChange}></input>\n      {list.map((i, index) => {\n        return <div key={index}>{i}</div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"React combina todos los cambios de estado y los hace todo a la vez."),(0,t.yg)("li",{parentName:"ul"},"Luego de hacer todos los cambios de estado, empieza a renderizar para que el usuario lo vea."),(0,t.yg)("li",{parentName:"ul"},"Orden de ejecuci\xf3n:")),(0,t.yg)("ol",{parentName:"div"},(0,t.yg)("li",{parentName:"ol"},"setInput"),(0,t.yg)("li",{parentName:"ol"},"setList"),(0,t.yg)("li",{parentName:"ol"},"Renderiza los cambios")))),(0,t.yg)("h4",{id:"el-hook-usetransition"},"El hook useTransition"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Nos va a ayudar a establecer el orden de los cambios de estado."),(0,t.yg)("li",{parentName:"ul"},"Por defecto todos los estados que cambian son de alta prioridad y todos corren uno despu\xe9s del otro (en orden de ejecuci\xf3n)"),(0,t.yg)("li",{parentName:"ul"},"El hook useTransition devuelve:")),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"isPending  : Valor booleano"),(0,t.yg)("li",{parentName:"ol"},"startTransition : Es una funcion que recibe un callback")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const [isPending , startTransition] = useTransition();\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El callback que recibe  startTransition se va a ejecutar(inmediatamente luego de ser definido) como un cambio de estado, pero con baja prioridad."),(0,t.yg)("li",{parentName:"ul"},"isPending es true hasta que se termine de ejecutar el cambio de estado de startTransition.")),(0,t.yg)("h4",{id:"ejemplo-8"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useState, useTransition } from "react";\nimport "./App.css";\n\nfunction App() {\n  const [isPending , startTransition] = useTransition();\n  const LIST_SIZE = 20000;\n  const [input, setInput] = useState("");\n  const [list, setList] = useState([]);\n  const handleChange = (e) => {\n    setInput(e.target.value);\n    startTransition(() => {\n      const l = [];\n      for (let i = 0; i < LIST_SIZE; i++) {\n        l.push(e.target.value);\n      }\n      setList(l);\n    })\n   \n  };\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <input type="text" value={input} onChange={handleChange}></input>\n      {list.map((i, index) => {\n        return <div key={index}>{i}</div>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Primero se aplica el cambio de estado del input"),(0,t.yg)("li",{parentName:"ul"},"Y Luego de un tiempo se aplica el cambio de estado de list."),(0,t.yg)("li",{parentName:"ul"},"Esto sucede porque el cambio de estado de list tiene baja prioridad ya que se ejecuta dentro de startTransition")))),(0,t.yg)("h4",{id:"ahora-usamos-el-ispending-para-realizar-un-loading"},"Ahora usamos el isPending para realizar un Loading"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <input type="text" value={input} onChange={handleChange}></input>\n      {!isPending? list.map((i, index) => {\n        return <div key={index}>{i}</div>;\n      }) : "Loading"}\n    </div>\n  );\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Si isPending es false (ya se realizo el cambio de estado , esta finalizado), mostrara un listado."),(0,t.yg)("li",{parentName:"ul"},"Si isPending es true (Todavia no se realiz\xf3 el cambio de estado , esta pendiente), mostrara un \u201cLoading\u201d.")))),(0,t.yg)("h3",{id:"useid"},"useID"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"useId es un hook para generar ID \xfanicos que son estables en el servidor y el cliente, al tiempo que evita los desajustes de hidrataci\xf3n.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import { useId } from "react";\nimport "./App.css";\n\nfunction App() {\n     const id = useId();\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <p> id {id}</p>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h2",{id:"info-de-hooks"},(0,t.yg)("a",{parentName:"h2",href:"https://es.reactjs.org/docs/hooks-reference.html"},"Info de hooks")),(0,t.yg)("h2",{id:"formas-de-a\xf1adir-css"},"Formas de a\xf1adir CSS"),(0,t.yg)("h3",{id:"hoja-de-estilos-externas"},"Hoja de estilos externas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se realizo importando un archivo css en el componente")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'  import { useId } from "react";\n// import \u201carchivo.css\u201d\nimport "./App.css";\n\nfunction App() {\n     const id = useId();\n\n  return (\n    <div className="App">\n      <h1>Componente Principal</h1>\n      <p> id {id}</p>\n    </div>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h4",{id:"ventajas"},"Ventajas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Nos brinda todas las herramientas del CSS moderno (variables, selectores avanzados, nuevas pseudoclases, etc.)"),(0,t.yg)("li",{parentName:"ul"},"Nos ayuda a limpiar nuestros archivos de componentes de estilos en l\xednea")),(0,t.yg)("h4",{id:"contras"},"Contras"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Necesita configurar el prefijo del proveedor para garantizar que las funciones m\xe1s recientes funcionen para todos los usuarios"),(0,t.yg)("li",{parentName:"ul"},"Requiere m\xe1s escritura y repetitivo que otras bibliotecas CSS (es decir, SASS)"),(0,t.yg)("li",{parentName:"ul"},"Cualquier hoja de estilo se conecta en cascada al componente y a todos los elementos secundarios; sin alcance"),(0,t.yg)("li",{parentName:"ul"},"Debe usar una convenci\xf3n de nomenclatura confiable para garantizar que los estilos no entren en conflicto")),(0,t.yg)("h3",{id:"css-inline"},"CSS Inline"),(0,t.yg)("h4",{id:"de-forma-tradicional"},"De forma tradicional"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},' <div style={{background:"red" , display: "inline-block"}}>\n      <h1>Componente Principal</h1>\n    </div>\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Dado que el CSS en l\xednea est\xe1 escrito en un objeto de JavaScript, las propiedades con dos nombres, como background-color, deben escribirse con la sintaxis de camelCase")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},' <div style={{backgroundColor:"red" , display: "inline-block"}}>\n      <h1>Componente Principal</h1>\n    </div>\n\n')),(0,t.yg)("h4",{id:"declarando-los-estilos-como-un-objeto"},"Declarando los estilos como un objeto"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'\nfunction App() {\n     const estilos = {\n       background : "red" ,\n       border:"5px solid salmon",\n       display:"inline-block"\n     }\n  return (\n    <div style={estilos}>\n      <h1>Componente Principal</h1>\n    </div>\n  );\n}\n\n')),(0,t.yg)("h4",{id:"ventajas-1"},"Ventajas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"La forma m\xe1s r\xe1pida de escribir estilos"),(0,t.yg)("li",{parentName:"ul"},"Bueno para la creaci\xf3n de prototipos (escriba estilos en l\xednea y luego mu\xe9vase a la hoja de estilo)"),(0,t.yg)("li",{parentName:"ul"},"Tiene una gran preferencia (puede anular estilos de una hoja de estilo)")),(0,t.yg)("h4",{id:"contras-1"},"Contras"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Tedioso convertir CSS simple a estilos en l\xednea"),(0,t.yg)("li",{parentName:"ul"},"Muchos estilos en l\xednea hacen que JSX sea ilegible"),(0,t.yg)("li",{parentName:"ul"},"No puede usar funciones b\xe1sicas de CSS como animaciones, selectores, etc."),(0,t.yg)("li",{parentName:"ul"},"No escala bien")),(0,t.yg)("h3",{id:"module-css"},"Module CSS"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"La magia del CSS Modular es que nunca vas a pisar estilos en uno u otro lugar, debido a que al momento de compilar tu proyecto, los nombres de las clases cambiar\xe1n un poco para tener caracteres aleatorios, de tal forma que no tendr\xe1s que preocuparte por utilizar metodolog\xedas como BEM."),(0,t.yg)("li",{parentName:"ul"},"El CSS dentro de un m\xf3dulo est\xe1 disponible solo para el componente que lo import\xf3 y no tiene que preocuparse por los conflictos de nombres."),(0,t.yg)("li",{parentName:"ul"},"Para trabajar con estos m\xf3dulos solo tienes que agregar .module antes del .css y despu\xe9s del nombre. Tus archivos deber\xedan quedar con un nombre similar a buttons.module.css"),(0,t.yg)("li",{parentName:"ul"},"Lo \xfaltimo que tienes que saber acerca del css modular es que se tiene un atributo extra llamado composes para mezclar clases de una forma parecida a lo que hacen los preprocesadores.")),(0,t.yg)("h4",{id:"ejemplo-9"},"Ejemplo"),(0,t.yg)("p",null,"buttons.module.css"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-css"},".red-color{\n    background-color: red;\n    border: 1px solid white; \n    color: white;\n  }\n  \n  .button-red{\n   composes: red-color;  \n   font-size: 18px;\n  }\n\n  div {\n    background:green;\n  }\n\n  .size {\n    font-size:50px;\n  }\n\n")),(0,t.yg)("p",null,"En el componente:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'import "./App.css";\n// Importamos el modulo css\nimport button from "./buttons.module.css"\nfunction App() {\n  //  Los estilos CSS estan en un objeto\n   console.log(button);\n\n  return (\n\n    <>\n \n    <div >\n      <h1>Componente Principal</h1>\n      {/* Si las clases tienen caracteres raros , se debe usar los corchetes [] */}\n       <button className={button[\'button-red\']}>Botton</button>\n     \n    </div>\n    <div >\n      {/* Como la clase no tiene  caracteres raros , se trata con el punto */}\n    <button className={button.size}> Grande</button>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h4",{id:"ventajas-2"},"Ventajas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los estilos est\xe1n en el \xe1mbito de uno u otro componente (a diferencia de CSS / SASS)"),(0,t.yg)("li",{parentName:"ul"},"Los nombres de clase \xfanicos y generados garantizan que no haya conflictos de estilo"),(0,t.yg)("li",{parentName:"ul"},"Puede usarlos inmediatamente sin configuraci\xf3n en proyectos CRA"),(0,t.yg)("li",{parentName:"ul"},"Se puede usar con SASS/CSS")),(0,t.yg)("h4",{id:"contras-2"},"Contras"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Puede ser complicado hacer referencia a los nombres de clase"),(0,t.yg)("li",{parentName:"ul"},"Puede ser una curva de aprendizaje usar estilos CSS como propiedades de objetos")),(0,t.yg)("h3",{id:"css-in-js"},"CSS in JS"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Existen multiples librerias para poder emplear este m\xe9todo."),(0,t.yg)("li",{parentName:"ul"},"Una de estas es  ",(0,t.yg)("a",{parentName:"li",href:"https://styled-components.com/"},"style components"))),(0,t.yg)("h4",{id:"ventajas-3"},"Ventajas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"CSS-in-JS es predecible: los estilos se limitan a componentes individuales"),(0,t.yg)("li",{parentName:"ul"},"Dado que nuestro CSS ahora es JS, podemos exportar, reutilizar e incluso extender nuestros estilos a trav\xe9s de accesorios."),(0,t.yg)("li",{parentName:"ul"},"Las bibliotecas CSS-in-JS aseguran que no haya conflictos de estilo al generar nombres de clase \xfanicos para sus estilos escritos"),(0,t.yg)("li",{parentName:"ul"},"No es necesario centrarse en las convenciones de nomenclatura de sus clases, \xa1simplemente escriba estilos!")),(0,t.yg)("h4",{id:"contras-3"},"Contras"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"A diferencia del CSS simple, deber\xe1 instalar una o m\xe1s bibliotecas de JavaScript de terceros, lo que agregar\xe1 peso a su proyecto construido.")),(0,t.yg)("h3",{id:"preprocesadores"},"Preprocesadores"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"React muestra una amplia compatibilidad con todos los preprocesadores como SASS, Less y Stylus para poder trabajar de una forma m\xe1s eficiente con CSS. Recuerda que en Webpack deber\xe1s configurar un loader especial para cada uno de estos.",(0,t.yg)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("p",{parentName:"div"},"Puedes combinarlos con Module CSS y sacarle un mayor provecho"))))),(0,t.yg)("h4",{id:"ventajas-4"},"Ventajas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Incluye muchas caracter\xedsticas din\xe1micas de CSS como extensi\xf3n, anidamiento y mixins"),(0,t.yg)("li",{parentName:"ul"},"Los estilos CSS se pueden escribir con mucho menos codigo repetitivo que CSS simple")),(0,t.yg)("h4",{id:"contras-4"},"Contras"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Al igual que el CSS simple, los estilos son globales y no se limitan a ning\xfan componente."),(0,t.yg)("li",{parentName:"ul"},"Las hojas de estilo CSS est\xe1n comenzando a incluir una serie de caracter\xedsticas que SASS ten\xeda exclusivamente, como las variables CSS (no necesariamente una estafa, pero vale la pena se\xf1alar)"),(0,t.yg)("li",{parentName:"ul"},"SASS / SCSS a menudo requiere configuraci\xf3n, como instalar la biblioteca Node node-sass")),(0,t.yg)("h3",{id:"frameworks-de-interfaz-de-usuario"},"Frameworks de interfaz de usuario"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Una alternativa, la cual puede agilizar mucho el crear las vistas de nuestros componentes, es el usar alguno de los famosos frameworks de UI pensados para trabajar con React, como los siguientes:")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"MaterialUI")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"ElementalUI")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"React Boostrap")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Ant design")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Tailwind CSS")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Cada framework te da componentes predise\xf1ados para solo importarlos y evitar todo el estilado por tu parte"))),(0,t.yg)("h2",{id:"componentes-en-clases"},"Componentes en clases"),(0,t.yg)("h4",{id:"qu\xe9-pasa-si-le-agrego-clases-a-un-componente"},"\xbfQu\xe9 pasa si le agrego clases a un componente?"),(0,t.yg)("p",null,"Componente Hijo "),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"function ComponenteHijo() {\n\n    return (\n        <div> \n            <h2>Componente Hijo</h2>\n        </div>\n    )\n}\n\nexport default ComponenteHijo\n\n")),(0,t.yg)("p",null,"App"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'\nimport "./App.css";\n\nimport ComponenteHijo from "./ComponenteHijo";\nfunction App() {\n\n  return (\n\n    <>\n    <div  >\n      <ComponenteHijo className="red" style={{background:"red"}}></ComponenteHijo>\n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n\n')),(0,t.yg)("h4",{id:"no-pasa-nada--no-se-puede"},"NO PASA NADA , NO SE PUEDE"))}m.isMDXComponent=!0}}]);