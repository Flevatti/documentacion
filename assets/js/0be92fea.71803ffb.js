"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[3455],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>p});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),d=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},c=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(t),p=o,v=u["".concat(s,".").concat(p)]||u[p]||m[p]||l;return t?n.createElement(v,r(r({ref:a},c),{},{components:t})):n.createElement(v,r({ref:a},c))}));function p(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=u;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var d=2;d<l;d++)r[d]=t[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5883:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=t(7462),o=(t(7294),t(3905));const l={sidebar_position:11},r="Tipos de datos / Objetos /  API",i={unversionedId:"Javascript/basico3",id:"Javascript/basico3",title:"Tipos de datos / Objetos /  API",description:"Typeof",source:"@site/docs/Javascript/basico3.md",sourceDirName:"Javascript",slug:"/Javascript/basico3",permalink:"/documentacion/docs/Javascript/basico3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Javascript/basico3.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"Javascript",previous:{title:"Export/Import/LocalStorage",permalink:"/documentacion/docs/Javascript/modulos"},next:{title:"API y mas",permalink:"/documentacion/docs/Javascript/basico4"}},s={},d=[{value:"Typeof",id:"typeof",level:2},{value:"symbols",id:"symbols",level:2},{value:"Usos",id:"usos",level:4},{value:"Iterables / Iteradores",id:"iterables--iteradores",level:2},{value:"Iterable",id:"iterable",level:4},{value:"Iterador",id:"iterador",level:4},{value:"Como Acceder al iterador \u201cIntegrado\u201d que contiene un iterable",id:"como-acceder-al-iterador-integrado-que-contiene-un-iterable",level:4},{value:"metodo next() del iterador",id:"metodo-next-del-iterador",level:4},{value:"Recorremos al iterable de forma din\xe1mica:",id:"recorremos-al-iterable-de-forma-din\xe1mica",level:4},{value:"Set",id:"set",level:2},{value:"Como crear un set",id:"como-crear-un-set",level:4},{value:"propiedad size",id:"propiedad-size",level:3},{value:"Metodos",id:"metodos",level:3},{value:"add(X)",id:"addx",level:4},{value:"delete(X)",id:"deletex",level:4},{value:"has(X)",id:"hasx",level:4},{value:"clear()",id:"clear",level:4},{value:"Como recorrerlo",id:"como-recorrerlo",level:3},{value:"Map",id:"map",level:2},{value:"Sintaxis para crear un map",id:"sintaxis-para-crear-un-map",level:4},{value:"Propiedad size",id:"propiedad-size-1",level:3},{value:"Metodos",id:"metodos-1",level:3},{value:"get(X)",id:"getx",level:4},{value:"set(clave , valor)",id:"setclave--valor",level:4},{value:"has(X)",id:"hasx-1",level:4},{value:"delete(x)",id:"deletex-1",level:4},{value:"clear()",id:"clear-1",level:4},{value:"Iterar",id:"iterar",level:3},{value:"keys()",id:"keys",level:4},{value:"values()",id:"values",level:4},{value:"entries()",id:"entries",level:4},{value:"WEAKMAP Y WEAKSET",id:"weakmap-y-weakset",level:2},{value:"Defectos",id:"defectos",level:4},{value:"weaksets",id:"weaksets",level:4},{value:"Cuando uno de los valores es null o undefined , se elimina  del WeakSet",id:"cuando-uno-de-los-valores-es-null-o-undefined--se-elimina--del-weakset",level:4},{value:"weaksets",id:"weaksets-1",level:4},{value:"Cuando una de las claves es null o undefined , se elimina  del WeakMap (la clave-valor)",id:"cuando-una-de-las-claves-es-null-o-undefined--se-elimina--del-weakmap-la-clave-valor",level:4},{value:"Metodos de Console",id:"metodos-de-console",level:2},{value:"log(A , B , ...)",id:"loga--b--",level:3},{value:"table(X)",id:"tablex",level:3},{value:"time() / timeEnd()",id:"time--timeend",level:3},{value:"count()",id:"count",level:3},{value:"trace()",id:"trace",level:3},{value:"warn() / error()",id:"warn--error",level:3},{value:"group() / groupEnd()",id:"group--groupend",level:3},{value:"Metodos de Object",id:"metodos-de-object",level:2},{value:"keys(X)",id:"keysx",level:4},{value:"values(X)",id:"valuesx",level:4},{value:"entries(X)",id:"entriesx",level:4},{value:"fromEntries(X)",id:"fromentriesx",level:4},{value:"Metodo assign(X , Y )",id:"metodo-assignx--y-",level:4},{value:"defineProperty()",id:"defineproperty",level:3},{value:"Descriptores",id:"descriptores",level:4},{value:"Ambos tipos de descriptores son objetos y comparten lo siguiente",id:"ambos-tipos-de-descriptores-son-objetos-y-comparten-lo-siguiente",level:4},{value:"Un descriptor de datos tiene adem\xe1s lo siguiente",id:"un-descriptor-de-datos-tiene-adem\xe1s-lo-siguiente",level:4},{value:"Un descriptor de acceso adem\xe1s tiene lo siguiente",id:"un-descriptor-de-acceso-adem\xe1s-tiene-lo-siguiente",level:4},{value:"Media queries con Window",id:"media-queries-con-window",level:2},{value:"M\xe9todo matchMedia",id:"m\xe9todo-matchmedia",level:3},{value:"Manejador de evento",id:"manejador-de-evento",level:3},{value:"m\xe9todo removeListener()",id:"m\xe9todo-removelistener",level:4},{value:"MutationObserver",id:"mutationobserver",level:2},{value:"Metodos de la instancia MutationObserver",id:"metodos-de-la-instancia-mutationobserver",level:4},{value:"Metodo observe",id:"metodo-observe",level:4},{value:"Metodo disconnect()",id:"metodo-disconnect",level:4},{value:"Metodo takeRecords()",id:"metodo-takerecords",level:4},{value:"objeto MutationObserverInit",id:"objeto-mutationobserverinit",level:3},{value:"Propiedades",id:"propiedades",level:4},{value:"objeto MutationRecord",id:"objeto-mutationrecord",level:3},{value:"Propiedades",id:"propiedades-1",level:4},{value:"type",id:"type",level:4},{value:"target",id:"target",level:4},{value:"addedNodes/removedNodes",id:"addednodesremovednodes",level:4},{value:"previousSibling/nextSibling",id:"previoussiblingnextsibling",level:4},{value:"attributeName/attributeNamespace",id:"attributenameattributenamespace",level:4},{value:"oldValue",id:"oldvalue",level:4},{value:"Intersection Observer",id:"intersection-observer",level:2},{value:"\xbfC\xf3mo usarlo?",id:"c\xf3mo-usarlo",level:4},{value:"Parametros del Callback (Primer argumento)",id:"parametros-del-callback-primer-argumento",level:4},{value:"entries",id:"entries-1",level:4},{value:"observer",id:"observer",level:4},{value:"Propiedades del objeto de configuraci\xf3n (Segundo argumento)",id:"propiedades-del-objeto-de-configuraci\xf3n-segundo-argumento",level:4},{value:"rootMargin",id:"rootmargin",level:4},{value:"root",id:"root",level:4},{value:"threshold",id:"threshold",level:4},{value:"Metodos de la instancia  IntersectionObserver",id:"metodos-de-la-instancia--intersectionobserver",level:4},{value:"observe()",id:"observe",level:4},{value:"unobserve()",id:"unobserve",level:4},{value:"disconnect()",id:"disconnect",level:4},{value:"Ejemplo Lazy loading para im\xe1genes",id:"ejemplo-lazy-loading-para-im\xe1genes",level:4}],c={toc:d};function m(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tipos-de-datos--objetos---api"},"Tipos de datos / Objetos /  API"),(0,o.kt)("h2",{id:"typeof"},"Typeof"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    typeof X\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El operador typeof devuelve un String con el tipo de dato que es X"),(0,o.kt)("li",{parentName:"ul"},"Devuelve el tipo de dato de X.")),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'    // Devuelve string\n   console.log(typeof "String")\n   // Devuelve number\n   console.log(typeof 5050)\n   // Devuelve object\n   console.log(typeof {})\n\n')),(0,o.kt)("h2",{id:"symbols"},"symbols"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es un tipo de dato que sirve para crear identificadores \xfanicos"),(0,o.kt)("li",{parentName:"ul"},"Se define con el constructor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," const id = Symbol();\n           console.log(id);\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El constructor tiene un argumento que es un String"),(0,o.kt)("li",{parentName:"ul"},"Este String sirve para identificar el s\xedmbolo en la consola cuando lo conviertas en un String.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'          const id = Symbol("etiqueta 1");\n           console.log(id);\n\n')),(0,o.kt)("h4",{id:"usos"},"Usos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Como propiedad de un objeto")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'           const id = Symbol("etiqueta 1");\n           const objeto = {\n             [id] : 3686\n           }\n           // No accedemos al dato\n           console.log(objeto.id);\n          //  Accedemos al dato\n           console.log(objeto[id]);\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Podemos crear una funcion y hacer que viva la id en un scope")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function crearObjeto() {\n      // La id solo existe en este scope\n      const obj = {};\n      const id = Symbol('identificador');\n      obj[id] = 0;\n\n      return {\n        setId(valor) {\n          obj[id] = valor;\n        },\n        getId() {\n          return obj[id];\n        },\n        get() {\n          return obj\n        }\n\n\n      }\n    }\n         const objeto = crearObjeto();\n         objeto.setId(64);\n         console.log(objeto.get());\n\n")),(0,o.kt)("h2",{id:"iterables--iteradores"},"Iterables / Iteradores"),(0,o.kt)("h4",{id:"iterable"},"Iterable"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es una estructura de dato lineal, que hace que sus datos sean p\xfablicos y se pueda recorrer"),(0,o.kt)("li",{parentName:"ul"},"Ej. Arrays , String , Map , Set , algunos elementos del DOM."),(0,o.kt)("li",{parentName:"ul"},"Un objeto/elemento/tipo de dato que es iterable tiene la propiedad ","[Symbol.iterator]")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  const iterable = [1,2,3,4,5];\n  // Comprobamos que es iterable\n  console.log(iterable[Symbol.iterator]);\n\n")),(0,o.kt)("h4",{id:"iterador"},"Iterador"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es el apuntador, que va recorriendo los elementos de la estructura de dato lineal."),(0,o.kt)("li",{parentName:"ul"},"Es el mecanismo por el cual se recorre los elementos."),(0,o.kt)("li",{parentName:"ul"},"Hay varios mecanismos:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Desestructuraci\xf3n "),(0,o.kt)("li",{parentName:"ul"},"M\xe9todos for  y for of "),(0,o.kt)("li",{parentName:"ul"},"metodo array.from "),(0,o.kt)("li",{parentName:"ul"},"spread operator (\u2026)  "),(0,o.kt)("li",{parentName:"ul"},"promesas"),(0,o.kt)("li",{parentName:"ul"},"forEach"))),(0,o.kt)("li",{parentName:"ul"},"Tambien existe un  \u201cmecanismo integrado\u201d el cual veremos a continuaci\xf3n")),(0,o.kt)("h4",{id:"como-acceder-al-iterador-integrado-que-contiene-un-iterable"},"Como Acceder al iterador \u201cIntegrado\u201d que contiene un iterable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  const iterable = [1,2,3,4,5];\n  // Accedemos al iterador del iterable\n//  Con  X[Symbol.iterator]() accedemos al iterador de X\n  const iterador = iterable[Symbol.iterator]()\n   console.log(iterador);\n\n")),(0,o.kt)("h4",{id:"metodo-next-del-iterador"},"metodo next() del iterador"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nos devuelve un objeto con dos propiedades:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Value : Es el valor del elemento iterable . La primera vez que se ejecuta es el valor del \xedndice/posici\xf3n 0 del iterable. La segunda vez es el valor del \xedndice/posici\xf3n 1 del iterable y as\xed consecutivamente."),(0,o.kt)("li",{parentName:"ul"},"Done : Indica si ya se recorri\xf3 todos los elementos.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  // Devuelve el valor de  iterable[0]\n   console.log(iterador.next());\n     // Devuelve el valor de  iterable[1]\n   console.log(iterador.next());\n     // Devuelve el valor de  iterable[2]\n   console.log(iterador.next());\n      // Devuelve el valor de  iterable[3]\n   console.log(iterador.next());\n      // Devuelve el valor de  iterable[4]\n   console.log(iterador.next());\n      // Devuelve el valor de  iterable[5]\n   console.log(iterador.next());\n\n")),(0,o.kt)("h4",{id:"recorremos-al-iterable-de-forma-din\xe1mica"},"Recorremos al iterable de forma din\xe1mica:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Usamos la propiedad booleana done que indica cuando se termin\xf3 de recorrer."),(0,o.kt)("li",{parentName:"ul"},"Next()  es un apuntador que guarda  en que elemento del objeto iterable se qued\xf3.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  const iterable = [1,2,3,4,5];\n  const iterador = iterable[Symbol.iterator]()\n  // Tiene el valor 1\n   let next = iterador.next();\n   while(!next.done) {\n       console.log(next.value);\n       next = iterador.next();\n   }\n\n")),(0,o.kt)("h2",{id:"set"},"Set"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es similar a una array pero contiene datos \xfanicos."),(0,o.kt)("li",{parentName:"ul"},"Es un arreglo que solo acepta valores \xfanicos.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Recorda que cuando se crea un objeto:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"A cada objeto se le asigna un espacio de memoria."),(0,o.kt)("li",{parentName:"ul"},"Cada objeto tiene una referencia a ese espacio de memoria"),(0,o.kt)("li",{parentName:"ul"},"Cuando comparas dos objetos , estas comparando las referencias de cada uno. Por lo tanto cada objeto es \xfanico y NO PUEDE SER IGUAL AL OTRO.")))),(0,o.kt)("h4",{id:"como-crear-un-set"},"Como crear un set"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Se hace con el constructor que tiene como argumento un array"),(0,o.kt)("li",{parentName:"ul"},"El array que se pasa es el valor que contiene el set que se crea.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const set = new Set([1,2,3,4,5,1 , true,false,true,{} , {} , "String"])\n    console.log(set);\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Es como un array, pero se eliminan los datos repetidos."),(0,o.kt)("li",{parentName:"ul"},"Si el set detecta un valor repetido en el constructor o cuando se agrega un nuevo valor, lo elimina.")))),(0,o.kt)("h3",{id:"propiedad-size"},"propiedad size"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve el tama\xf1o del set.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," console.log(set.size);\n")),(0,o.kt)("h3",{id:"metodos"},"Metodos"),(0,o.kt)("h4",{id:"addx"},"add(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A\xf1ade el valor X al set")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  //  un set vacio\n   const set = new Set()\n   set.add(1)\n   set.add(2)\n   set.add(3)\n   set.add(4)\n   set.add(5)\n    console.log(set);\n")),(0,o.kt)("h4",{id:"deletex"},"delete(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Elimina el valor X del set.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   set.delete(3);\n  console.log(set);\n\n")),(0,o.kt)("h4",{id:"hasx"},"has(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve true si el valor X existe en el set")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  \n  console.log(set.has(2));\n\n")),(0,o.kt)("h4",{id:"clear"},"clear()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Elimina todos los valores del set")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   set.clear()\n  console.log(set);\n\n")),(0,o.kt)("h3",{id:"como-recorrerlo"},"Como recorrerlo"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Con el for of")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   for(item of set) {\n    console.log(item);\n   }\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Con el forEach"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  set.forEach(item => {\n  console.log(item);\n})\n\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Con el Array.from()"))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Array.from()")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"El m\xe9todo Array.from() crea una nueva instancia de Array a partir de un objeto iterable."),(0,o.kt)("li",{parentName:"ul"},"Convierte un objeto iterable en un array"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/from"},"info"))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  //  Al set lo convierto en un array y accedo al indice 0\nconsole.log(Array.from(set)[0]);\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  const arrayDelSet = Array.from(set);\nconsole.log(arrayDelSet[0]);\n\n")),(0,o.kt)("h2",{id:"map"},"Map"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es un objeto que almacena pares  de clave-valor."),(0,o.kt)("li",{parentName:"ul"},"Es parecido a un objeto (Ambas almacenan pares-valores)")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Objeto"),(0,o.kt)("th",{parentName:"tr",align:null},"Map"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Almacenan   clave-valor"),(0,o.kt)("td",{parentName:"tr",align:null},"Almacenan   clave-valor")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Las claves  son String O Symbols"),(0,o.kt)("td",{parentName:"tr",align:null},"Las claves  puede ser de cualquier tipo de dato.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Se necesita  recorrerlo para saber el tama\xf1o."),(0,o.kt)("td",{parentName:"tr",align:null},"Tiene una funcion llamada size() para saber el tama\xf1o")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Para iterarlo  se necesita primero las claves y luego iterarlo"),(0,o.kt)("td",{parentName:"tr",align:null},"Es iterable")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Tiene un prototipo"),(0,o.kt)("td",{parentName:"tr",align:null},"No tiene un prototipo")))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Las claves de un map  que se definen por defecto pueden tener conflicto con la clave de un objeto")))),(0,o.kt)("h4",{id:"sintaxis-para-crear-un-map"},"Sintaxis para crear un map"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"New map(X)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"X debe ser algo iterable, puede ser un array o cualquier otro objeto iterable con elementos clave-valor.")),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'   // Creamos maps con arrays\n      // Es un array donde cada elemento es un array que contiene clave-valor\n      const mapCodigoPostales = new Map([\n        // Cada array tiene dos elementos\n        //    [Clave , Valor]\n        [49, "Zamora"],\n        [37, "Salamanca"],\n        [47, "Vallado"],\n      ]);\n      const mapCodigoPostalesLetra = new Map([\n        // Cada array tiene dos elementos\n        //    [Clave , Valor]\n        ["ZA", "Zamora"],\n        ["SA", "Salamanca"],\n        ["VO", "Vallado"],\n      ]);\n      console.log(mapCodigoPostales);\n      console.log(mapCodigoPostalesLetra);\n\n')),(0,o.kt)("h3",{id:"propiedad-size-1"},"Propiedad size"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Te devuelve el tama\xf1o del map")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'   //  La propiedad size te devuelve el tama\xf1o del map\n     console.log("Tama\xf1o" , mapCodigoPostales.size)\n')),(0,o.kt)("h3",{id:"metodos-1"},"Metodos"),(0,o.kt)("h4",{id:"getx"},"get(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve el valor que contiene la clave X "),(0,o.kt)("li",{parentName:"ul"},"Te devuelve undefined si no existe la clave")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},' // El metodo get(X) devuelve el valor que contiene la clave X \n    // Te devuelve undefined si no existe la clave\n\n     console.log("Obtenemos un valor" , mapCodigoPostales.get(49))\n\n')),(0,o.kt)("h4",{id:"setclave--valor"},"set(clave , valor)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Establece un valor a una clave."),(0,o.kt)("li",{parentName:"ul"},"Si la clave ya existe , se remplaza el valor"),(0,o.kt)("li",{parentName:"ul"},"Si la clave no existe , se crea junto con su valor correspondiente")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'   // El metodo set establece un valor a una clave.\n    // Si la clave ya existe , se remplaza el valor\n    // Si la clave no existe , se crea junto con su valor correspondiente\n    // set(clave , valor)\n    // Creamos un clave-valor\n    mapCodigoPostales.set(20 , "Palermo");\n    // Modificamos el valor de la clave 20\n    mapCodigoPostales.set(20 , "Cuidad del Este");\n    console.log(mapCodigoPostales);\n\n')),(0,o.kt)("h4",{id:"hasx-1"},"has(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve true si encuentra el valor de la clave X")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"     // has(X) = Devuelve true si encuentra el valor de la clave X\n      console.log(mapCodigoPostales.has(49))\n      console.log(mapCodigoPostales.has(50))\n\n")),(0,o.kt)("h4",{id:"deletex-1"},"delete(x)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Elimina la clave-valor que pertenece a la clave x"),(0,o.kt)("li",{parentName:"ul"},"Devuelve true si fue eliminado correctamente")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," //delete(x) = elimina la clave-valor que pertenece a la clave x\n    // Devuelve true si fue eliminado correctamente\n     console.log(mapCodigoPostales.delete(49));\n     console.log(mapCodigoPostales);\n\n")),(0,o.kt)("h4",{id:"clear-1"},"clear()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Elimina todas las clave-valor del map")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  //clear() = Elimina todas las clave-valor del map\n     console.log(mapCodigoPostales.clear());\n     console.log(mapCodigoPostales);\n\n")),(0,o.kt)("h3",{id:"iterar"},"Iterar"),(0,o.kt)("h4",{id:"keys"},"keys()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve un iterador con las claves del mapa ordenadas")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"\n  //  keys: - Devuelve un iterador con las claves del mapa ordenadas\n        const itClaves = mapCodigoPostales.keys();\n        console.log(itClaves.next().value)\n        console.log(itClaves.next().value)\n        console.log(itClaves.next().value)\n        console.log(itClaves.next().value)\n\n")),(0,o.kt)("h4",{id:"values"},"values()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve un iterador con los valores del mapa ordenados")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"        //  values: devuelve un iterador con los valores del mapa ordenados\n        const itValores = mapCodigoPostales.values();\n\n")),(0,o.kt)("h4",{id:"entries"},"entries()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Devuelve un iterador con los pares clave-valor del mapa ordenados")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"        // entries : devuelve un iterador con los pares clave-valor del mapa ordenados\n         const itPares = mapCodigoPostales.entries();\n\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Las tres formas devuelven un iterador y tienen los mismos m\xe9todos (next, etc)."))),(0,o.kt)("h2",{id:"weakmap-y-weakset"},"WEAKMAP Y WEAKSET"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Solo pueden almacenar referencias d\xe9biles."),(0,o.kt)("li",{parentName:"ul"},"Las claves deben ser de tipo objeto. (En caso del weakSet, el valor tambi\xe9n)"),(0,o.kt)("li",{parentName:"ul"},"Si la clave (En caso del weakSet, el valor tambi\xe9n) es null/undefined, se elimina el clave/valor del weakmap/weakset"),(0,o.kt)("li",{parentName:"ul"},"Tienen los mismos m\xe9todos que sus correspondientes versiones."),(0,o.kt)("li",{parentName:"ul"},"Weakmap tiene los m\xe9todos de map."),(0,o.kt)("li",{parentName:"ul"},"WeakSet tiene los m\xe9todos de set.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Las claves deben ser de tipo objeto")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"El objeto lo debe contener alguna variable.")))),(0,o.kt)("h4",{id:"defectos"},"Defectos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"No son objetos iterables."),(0,o.kt)("li",{parentName:"ul"},"No podemos eliminar todos los elementos . No tenemos acceso a un m\xe9todo clear()"),(0,o.kt)("li",{parentName:"ul"},"Solo podemos eliminar de uno en uno."),(0,o.kt)("li",{parentName:"ul"},"No podemos verificar su tama\xf1o.")),(0,o.kt)("h4",{id:"weaksets"},"weaksets"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El constructor no tiene el argumento de set."),(0,o.kt)("li",{parentName:"ul"},"Se deben a\xf1adir los valores de uno en uno con el m\xe9todo add.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"metodo add(X)")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"X debe ser una referencia d\xe9bil, un objeto."),(0,o.kt)("li",{parentName:"ul"},"El objeto debe estar en alguna variable (debe existir una referencia)")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'   const ws = new WeakSet()\n   const valor1 = {"valor1" : 1};\n   const valor2 = {"valor2" : 2};\n   const valor3 = {"valor2" : 3};\n   ws.add(valor1)  \n   ws.add(valor2)  \n   ws.add(valor3)  \n   console.log(ws);\n   // Tiene los metodos de set\n   console.log(ws.has(valor1));\n   ws.delete(valor2);\n   console.log(ws);\n\n')),(0,o.kt)("h4",{id:"cuando-uno-de-los-valores-es-null-o-undefined--se-elimina--del-weakset"},"Cuando uno de los valores es null o undefined , se elimina  del WeakSet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'   const ws = new WeakSet()\n   let valor1 = {"valor1" : 1};\n   const valor2 = {"valor2" : 2};\n   const valor3 = {"valor2" : 3};\n   ws.add(valor1)  \n   ws.add(valor2)  \n   ws.add(valor3)  \n   console.log(ws);\n\n   setInterval(()=> console.log(ws) , 1000)\n\n   setTimeout(() => {\n     valor1 = null;\n   } , 5000)\n\n')),(0,o.kt)("h4",{id:"weaksets-1"},"weaksets"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El constructor no tiene el argumento de map."),(0,o.kt)("li",{parentName:"ul"},"Se deben a\xf1adir los valores de uno en uno con el m\xe9todo set.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"metodo set(X,Y)")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"X : Es la clave ,  debe ser una referencia d\xe9bil, un objeto."),(0,o.kt)("li",{parentName:"ul"},"El objeto debe estar en alguna variable (debe existir una  referencia)"),(0,o.kt)("li",{parentName:"ul"},"Y : es el valor de la clave.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   const wm = new WeakMap()\n   let llave1 = {};\n   const llave2 = {};\n   const llave3 = {};\n   wm.set(llave1 , 1)\n   wm.set(llave2 , 2)\n   wm.set(llave3 , 3)\n   console.log(wm);\n\n")),(0,o.kt)("p",null,"Tiene los mismos m\xe9todos que el map:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   console.log(wm.has(llave1));\n   console.log(wm.get(llave1));\n   console.log(wm.delete(llave1));\n   console.log(wm)\n\n")),(0,o.kt)("h4",{id:"cuando-una-de-las-claves-es-null-o-undefined--se-elimina--del-weakmap-la-clave-valor"},"Cuando una de las claves es null o undefined , se elimina  del WeakMap (la clave-valor)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   const wm = new WeakMap()\n   let llave1 = {};\n   const llave2 = {};\n   const llave3 = {};\n   wm.set(llave1 , 1)\n   wm.set(llave2 , 2)\n   wm.set(llave3 , 3)\n\n   setInterval(()=> console.log(wm) , 1000)\n\n   setTimeout(() => {\n     llave1 = null;\n   } , 5000)\n\n")),(0,o.kt)("h2",{id:"metodos-de-console"},"Metodos de Console"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Console es un objeto que nos permite manipular la consola del navegador.")),(0,o.kt)("h3",{id:"loga--b--"},"log(A , B , ...)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Sirve para escribir un mensaje  en la consola . Tambien se suele utilizar para mostrar la informacion  que contiene  algun tipo de dato (objeto , array , string , etc )"),(0,o.kt)("li",{parentName:"ul"},"Podes  mostrar un mensaje(informacion) diferente en cada parametro (Reciben cualquier tipo de dato)."),(0,o.kt)("li",{parentName:"ul"},"Como minimo , se ejecuta con un parametro.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," console.log(\u201cmensaje\u201d); \n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'console.log("hola esta es la consola \ud83d\udc4c");\n')),(0,o.kt)("h3",{id:"tablex"},"table(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Te permite mostrar un objeto/array en una tabla"),(0,o.kt)("li",{parentName:"ul"},"X debe ser un array o un objeto")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'      const array = ["apples", "bananas"]\n      console.table(array);\n')),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"A veces Chrome no genera la tabla , para solucionar este problema debe refrescar la pagina."),(0,o.kt)("li",{parentName:"ul"},"Puede pasar que no se genere una tabla para colecciones de tipos primitivos (matriz de cadenas, objeto \xfanico), solo colecciones de tipos compuestos (matriz de matrices/objetos, objeto cuyas propiedades son objetos).")))),(0,o.kt)("h3",{id:"time--timeend"},"time() / timeEnd()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"time() Inicia un temporizador "),(0,o.kt)("li",{parentName:"ul"},"timeEnd() finaliza el temporizador , mostrando por consola el tiempo , en milisegundos , transcurrido desde que se inicio el temporizador."),(0,o.kt)("li",{parentName:"ul"},"Entonces los dos metodos sirven para rastrear cu\xe1nto tiempo lleva una operaci\xf3n."),(0,o.kt)("li",{parentName:"ul"},'Ambos reciben como argumento un string que seria la "ID" del temporizador que va a iniciar o eliminar. Esto es util cuando usamos varios temporizadores al mismo tiempo.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},' console.time("temporizador")\n    alert(\'Mensaje\');\n    console.timeEnd("temporizador");\n')),(0,o.kt)("h3",{id:"count"},"count()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Registra el numero de veces que count() se ha llamado."),(0,o.kt)("li",{parentName:"ul"},'Tambien como argumento recibe un string que seria la "ID". Entonces contaria las veces que se llama con X id.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},' console.count("ID");\n   console.count("ID 2");\n   console.count("ID");\n')),(0,o.kt)("h3",{id:"trace"},"trace()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Muestra un seguimiento que muestra c\xf3mo termin\xf3 el c\xf3digo en un punto determinado."),(0,o.kt)("li",{parentName:"ul"},"Muestra el camino de ejecuci\xf3n del codigo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function foo() {\n  function bar() {\n    console.trace();\n  }\n  bar();\n}\n\nfoo();\n")),(0,o.kt)("h3",{id:"warn--error"},"warn() / error()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es como log()"),(0,o.kt)("li",{parentName:"ul"},"warn() es para escribir mensajes de advertencias"),(0,o.kt)("li",{parentName:"ul"},"error() es para escribir mensajes de errores")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   console.warn('Advertencia');\n   console.error('Error');\n")),(0,o.kt)("h3",{id:"group--groupend"},"group() / groupEnd()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"group() Crea un grupo en la consola. Los mensajes que se escriban se asignaran a este grupo."),(0,o.kt)("li",{parentName:"ul"},"groupEnd(): Cierra el grupo . Los mensajes que se escriban se asignaran al grupo de nivel superior o a ningun grupo."),(0,o.kt)("li",{parentName:"ul"},"Se puede crear varios niveles de grupos."),(0,o.kt)("li",{parentName:"ul"},'Ambos reciben como argumento un string que seria la "ID" del grupo que va a crear o cerrar.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  console.group('Grupo Mensajes')\n    console.log('Mensajes')\n    console.groupEnd('Grupo Mensajes')\n    console.log('Fuera del grupo')\n")),(0,o.kt)("h2",{id:"metodos-de-object"},"Metodos de Object"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"La clase Object tiene un conjunto de m\xe9todos est\xe1ticos que puede sernos utils.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"M\xe9todos est\xe1ticos")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Es un m\xe9todo que se puede ejecutar directamente desde la clase"),(0,o.kt)("li",{parentName:"ul"},"El m\xe9todo lo obtiene la Clase")))),(0,o.kt)("h4",{id:"keysx"},"keys(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nos devuelve un listado/array de Strings con cada una de las claves del objeto X")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'      const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30\n        }\n   \n     console.log(Object.keys(persona1));\n\n')),(0,o.kt)("h4",{id:"valuesx"},"values(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nos devuelve un listado/array de los valores del objeto X")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'        const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30\n        }\n   \n     console.log(Object.values(persona1));\n\n')),(0,o.kt)("h4",{id:"entriesx"},"entries(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nos devuelve un array  con arrays a partir del objeto X"),(0,o.kt)("li",{parentName:"ul"},"Nos devuelve un array donde cada elemento es un array con dos \xedndices:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\xcdndice 0: Clave"),(0,o.kt)("li",{parentName:"ul"},"indice  1 : valor")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'        const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30\n        }\n   \n     console.log(Object.entries(persona1));\n\n')),(0,o.kt)("h4",{id:"fromentriesx"},"fromEntries(X)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Hace lo inverso del m\xe9todo entries()"),(0,o.kt)("li",{parentName:"ul"},"Convierte el array con Arrays (seria la X -- lo que devuelve el m\xe9todo entries)en un objeto.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'        const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30\n        }\n      const entriesPersona = Object.entries(persona1);\n     console.log(Object.fromEntries(entriesPersona));\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries"},"Object.fromEntries()"))))),(0,o.kt)("h4",{id:"metodo-assignx--y-"},"Metodo assign(X , Y )"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Sirve para copiar/clonar un objeto"),(0,o.kt)("li",{parentName:"ul"},"X = En qu\xe9 lugar \u201cpegamos\u201d el objeto que copiamos. En donde insertamos el objeto del argumento Y."),(0,o.kt)("li",{parentName:"ul"},"Y = Que copiamos/clonamos. El objeto a copiar/clonar.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'      const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30\n        }\n\n        const personaClonada = {}\n    \n     Object.assign(personaClonada , persona1);\n\n     console.log("Persona 1 " , persona1);\n     console.log("Persona Clonada" , personaClonada);\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Ambos objetos son iguales."))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Nos permite clonar objetos simples donde los valores son primitivo (o derivado de ello)"),(0,o.kt)("li",{parentName:"ul"},"Los objetos anidados no se copian"),(0,o.kt)("li",{parentName:"ul"},"SOLO SE COPIAN las propiedades de primer nivel (solo se requiere de un punto para acceder a estas propiedades Ej. Objeto.propiedad)"),(0,o.kt)("li",{parentName:"ul"},"Pero las propiedades de SEGUNDO NIVEL o mas (se requiere de mas de un punto) se  copian por referencia.")))),(0,o.kt)("p",null,"A tener en cuenta:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'      const persona1 = {\n          nombre : "Luis",\n          apellido: "Garcia",\n          edad : 30 ,\n          direccion : {\n            calle: "Calle 5320"\n          }\n        }\n\n        const personaClonada = {}\n    \n     Object.assign(personaClonada , persona1);\n        persona1.direccion.calle = "Calle 2020"\n     \n     console.log("Persona Clonada" , personaClonada);\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Estamos modificando la propiedad calle de ambos objetos ya que es de \u201csegundo nivel\u201d ( Se utilizan dos puntos Ej.  Objeto.propiedad.propiedad)"),(0,o.kt)("li",{parentName:"ul"},"La propiedad calle de personaClonada tiene una referencia de la misma propiedad en persona1.")))),(0,o.kt)("h3",{id:"defineproperty"},"defineProperty()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El m\xe9todo est\xe1tico Object.defineProperty() define una nueva propiedad sobre un objeto, o modifica una ya existente, y devuelve el objeto modificado.")),(0,o.kt)("p",null,"Sintaxis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"Object.defineProperty(obj, prop, descriptor)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Obj : El objeto sobre el cual se define la propiedad"),(0,o.kt)("li",{parentName:"ul"},"Prop : El nombre de la propiedad a ser definida o modificada"),(0,o.kt)("li",{parentName:"ul"},"Descriptor: El descriptor de la propiedad que est\xe1 siendo definida o modificada.")),(0,o.kt)("h4",{id:"descriptores"},"Descriptores"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"En la forma tradicional de crear una propiedad, el descriptor toma valores espec\xedficos."),(0,o.kt)("li",{parentName:"ul"},"Existen dos tipos de descriptores: De datos y de acceso. "),(0,o.kt)("li",{parentName:"ul"},"Un descriptor de datos define una propiedad que tiene un valor, el cual puede ser o no modificado. "),(0,o.kt)("li",{parentName:"ul"},"Un descriptor de acceso define una propiedad mediante un par de funciones getter-setter que describe como se obtiene o se modifica el contenido de dicha propiedad. "),(0,o.kt)("li",{parentName:"ul"},"Un descriptor debe de ser de uno de estos dos tipos; no puede ser ambos.")),(0,o.kt)("h4",{id:"ambos-tipos-de-descriptores-son-objetos-y-comparten-lo-siguiente"},"Ambos tipos de descriptores son objetos y comparten lo siguiente"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Propiedad"),(0,o.kt)("th",{parentName:"tr",align:null},"Valor"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Configurable"),(0,o.kt)("td",{parentName:"tr",align:null},"Es    true si el tipo de descriptor de la propiedad puede modificarse y si la propiedad puede ser eliminada del correspondiente objeto. Por defecto es false.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Enumerable"),(0,o.kt)("td",{parentName:"tr",align:null},"Es    true si dicha propiedad se muestra durante la enumeraci\xf3n de las propiedades del objeto correspondiente. Por defecto es false.")))),(0,o.kt)("h4",{id:"un-descriptor-de-datos-tiene-adem\xe1s-lo-siguiente"},"Un descriptor de datos tiene adem\xe1s lo siguiente"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Propiedad"),(0,o.kt)("th",{parentName:"tr",align:null},"Valor"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Value"),(0,o.kt)("td",{parentName:"tr",align:null},"El valor asociado a la propiedad. Puede ser cualquier tipo valido de JavaScript (number, object, function, etc). Por defecto es undefined.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Writable"),(0,o.kt)("td",{parentName:"tr",align:null},"Es   true Indica si el valor de la propiedad puede modificarse con el operador de asignaci\xf3n . Por defecto es false.")))),(0,o.kt)("h4",{id:"un-descriptor-de-acceso-adem\xe1s-tiene-lo-siguiente"},"Un descriptor de acceso adem\xe1s tiene lo siguiente"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Propiedad"),(0,o.kt)("th",{parentName:"tr",align:null},"Valor"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"get"),(0,o.kt)("td",{parentName:"tr",align:null},"Una funci\xf3n cuyo valor retornado ser\xe1 el que se use como valor de la propiedad. Su valor por Default es undefined")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"set"),(0,o.kt)("td",{parentName:"tr",align:null},"Una funci\xf3n que recibe como \xfanico argumento el nuevo valor que se desea asignar a la propiedad y que devuelve el valor que se almacenar\xe1 finalmente en el objeto. Su valor por Default es undefined.")))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Hay que tener en cuenta que estas opciones tambi\xe9n pueden heredarse; es decir, las opciones de la propiedad se han podido establecer en el prototipo de una clase de la que hereda el objeto. "),(0,o.kt)("li",{parentName:"ul"},"De modo que si queremos asegurarnos unos valores por defecto tenemos tres opciones:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze"},"Congelar el Object.prototype con Object.freeze")),(0,o.kt)("li",{parentName:"ul"},"Definir todas las opciones expl\xedcitamente."),(0,o.kt)("li",{parentName:"ul"},"Establecer null la propiedad ","_","_proto__")))))),(0,o.kt)("p",null,"Ejemplo usando ","_","_proto__ "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," const obj = {};\n      Object.defineProperty(obj , 'key' , {\n        __proto__: null  , \n        value:'static'\n      });\n      console.log(obj);\n\n")),(0,o.kt)("p",null,"Ejemplo definiendo todo expl\xedcitamente"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    const obj = {};\n      Object.defineProperty(obj , 'key' , {\n        enumerable: false,\n  configurable: false,\n  writable: false,\n  value: 'static'\n      });\n      console.log(obj);\n\n")),(0,o.kt)("p",null,"Ejemplo con freeze()"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'    const obj = {};\n      function crearPropiedad(value) {\n        var d =  {\n          enumerable: false,\n          writable: false,\n          configurable: false,\n          value: null,\n        };\n\n        d.value = value;\n        return d;\n      }\n      // ... y ...\n      Object.defineProperty(obj, "key", crearPropiedad("static"));\n\n      // Si est\xe1 disponible freeze, previene a\xf1adir o eliminar\n      //del prototipo del objeto las propiedades\n      // (value, get, set, enumerable, writable, configurable)\n      (Object.freeze || Object)(Object.prototype);\n      console.log(obj);\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"},"developer mozilla"))))),(0,o.kt)("h2",{id:"media-queries-con-window"},"Media queries con Window"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../CSS#media-queries-para-dispositivos-m%C3%B3viles"},"Son de sobra conocidas las CSS Media queries, que nos permiten detectar distintas caracter\xedsticas de los dispositivos para aplicar unos estilos u otros en funci\xf3n de ellas.")," "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Es menos habitual que desde Javascript necesitemos detectar si ciertas medias queries se est\xe1n evaluando positivamente"),", pero tambi\xe9n nos podemos ver en necesidad de ello"),(0,o.kt)("p",null,"Pongamos por ejemplo que tenemos un c\xf3digo de un banner que solamente queremos que se vea en ordenadores de escritorio. Este c\xf3digo hace llamadas as\xedncronas para solicitar la creatividad al servidor de banners, pero si el banner no se va a visualizar, \xbfQu\xe9 sentido tiene hacer esas llamadas al servidor de banners?"),(0,o.kt)("p",null,"Si el banner siempre aparece en la p\xe1gina y simplemente lo ocultamos y mostramos con CSS, entonces, por mucho que no se vea en las pantallas de los m\xf3viles, se estar\xeda haciendo la solicitud del banner y gastando un ancho de banda innecesario. En lugar de eso, ",(0,o.kt)("strong",{parentName:"p"},"podemos simplemente detectar con Javascript cu\xe1ndo estamos en un ordenador de escritorio, para colocar din\xe1micamente el c\xf3digo del banner solamente en ese caso"),"."),(0,o.kt)("h3",{id:"m\xe9todo-matchmedia"},"M\xe9todo matchMedia"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El m\xe9todo que vamos a usar para poder comprobar si una media query se cumple se llama matchMedia(). "),(0,o.kt)("li",{parentName:"ul"},'Est\xe1 dentro del objeto "window".'),(0,o.kt)("li",{parentName:"ul"},"El metodo matchMedia recibe un media query (como String / entre comillas)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'      var mediaqueryList = window.matchMedia("(min-width: 500px)");\n    console.log(mediaqueryList);\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'El m\xe9todo matchMedia() te devuelve un objeto "mediaquery list". B\xe1sicamente te informa sobre la mediaquery que se ha comprobado y su valor (si se cumple o no)'),(0,o.kt)("li",{parentName:"ul"},'Si queremos ver si esta media query se cumple en un momento dado, simplemente tenemos que evaluar la propiedad "matches" de este objeto.'),(0,o.kt)("li",{parentName:"ul"},"La propiedad matches tiene un valor booleano, es true cuando el mediaquery se cumple.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    var mediaqueryList = window.matchMedia(\"(min-width: 500px)\");\n    if(mediaqueryList.matches) {\n  alert('La media query se cumple');\n}\n\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'Ese objeto "mediaqueryList" es din\xe1mico, en el sentido que, si las condiciones del navegador cambian a lo largo del tiempo, tambi\xe9n cambiar\xe1 la propiedad "matches". Por tanto, podr\xeda ocurrir que esa evaluaci\xf3n tenga resultados distintos en momentos distintos, si por ejemplo el usuario redimensiona la ventana del navegador.'))),(0,o.kt)("h3",{id:"manejador-de-evento"},"Manejador de evento"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Lo m\xe1s seguro es que en tu aplicaci\xf3n quieras estar pendiente de los cambios en la medias queries que est\xe9s evaluando con Javascript, para realizar acciones cuando esto ocurra"),"."),(0,o.kt)("p",null,'Claro que podr\xedas preguntar constantemente por el valor de la propiedad "matches", pero ',(0,o.kt)("strong",{parentName:"p"},"lo m\xe1s eficiente es asociar un manejador de eventos para realizar acciones justamente cuando esa media query cambie de valor"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},'Esto lo conseguimos con el m\xe9todo "addListener" del objeto mediaqueryList, tal como se puede ver a continuaci\xf3n'),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    var mediaqueryList = window.matchMedia(\"(max-width: 920px)\");\n   mediaqueryList.addListener( function(EventoMediaQueryList) {\n   console.log('Ejecutado el listener', EventoMediaQueryList);\n});\n\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"El metodo addListener solo recibe un manejador de evento(funcion)."),(0,o.kt)("li",{parentName:"ul"},'En este caso hemos asociado una funci\xf3n an\xf3nima como manejador de eventos. En esa funci\xf3n recibimos un objeto de tipo "MediaQueryListEvent", que nos ofrece informaci\xf3n detallada sobre el evento que se ha producido.')))),(0,o.kt)("h4",{id:"m\xe9todo-removelistener"},"m\xe9todo removeListener()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Puedes eliminar el manejador de eventos en cualquier momento, con el m\xe9todo removeListener(). Solo que para usarlo no puedes haber asociado el manejador de eventos con una funci\xf3n an\xf3nima como hemos hecho antes.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var mediaqueryList = window.matchMedia(\"(orientation: portrait)\");\n\nfunction manejador(EventoMediaQueryList) {\n  if(EventoMediaQueryList.matches) {\n    alert('La media query ahora se cumple');\n  } else {\n    alert('La media query ya no se cumple');\n  }\n}\n\n// asociamos el manejador de evento\nmediaqueryList.addListener(manejador);\n\n// quitamos el manejador de evento para dejar de recibir notificaci\xf3n de cambios\nmediaqueryList.removeListener(manejador);\n\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"En desuso: esta funci\xf3n ya no se recomienda. Aunque es posible que algunos navegadores a\xfan lo admitan, es posible que ya se haya eliminado de los est\xe1ndares web relevantes, que est\xe9 en proceso de eliminaci\xf3n o que solo se conserve por motivos de compatibilidad.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Se recomienda:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    var mediaqueryList = window.matchMedia(\"(max-width: 920px)\");\n  mediaqueryList.addEventListener( 'change' , function(EventoMediaQueryList) {\n  alert('Ejecutado el listener');\n});\n\n")))))),(0,o.kt)("h2",{id:"mutationobserver"},"MutationObserver"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MutationObserver establece un mecanismo para reaccionar ante cambios en el DOM"),(0,o.kt)("li",{parentName:"ul"},"Constructor para crear una instancia de mutation observer:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"new MutationObserver( callback)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"callback : La funci\xf3n que ser\xe1 llamada en cada mutaci\xf3n del DOM. Tiene dos parametros , el primero es un array de objetos, cada uno del tipo MutationRecord. El segundo es la propia instancia del MutationObserver.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'     const observer = new MutationObserver((mutations , instancia) => {\n          console.log("Mutations" , mutations);\n          console.log("Instancia" , instancia)\n         })\n         console.log(observer);\n\n')),(0,o.kt)("h4",{id:"metodos-de-la-instancia-mutationobserver"},"Metodos de la instancia MutationObserver"),(0,o.kt)("h4",{id:"metodo-observe"},"Metodo observe"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nos permite observar los cambios (mutacion del DOM) de un nodo especifico."),(0,o.kt)("li",{parentName:"ul"},"Si no usamos este m\xe9todo, la instancia nunca ejecutara el callback ya que no esta pendiente de ning\xfan nodo del DOM."),(0,o.kt)("li",{parentName:"ul"},"En pocas palabras, con el observe registramos un nodo en la instancia mutationObserve y este solo esta pendiente de los cambios en los nodos registrados."),(0,o.kt)("li",{parentName:"ul"},"Si alg\xfan nodo registrado sufre una mutacion , se ejecutara el callback que especificamos en el constructor."),(0,o.kt)("li",{parentName:"ul"},"Sintaxis:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"Observe(target , options)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Target  : El nodo a registrar , el Node sobre el que observar las mutaciones del DOM."),(0,o.kt)("li",{parentName:"ul"},"Options : Un objeto MutationObserverInit , que especificamos que mutaciones del nodo (target) deben ser informadas.")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"A\xf1adir un observador a un elemento es igual que addEventListener, si usted observa el elemento m\xfaltiples veces no hace ninguna diferencia. Si se observa dos veces un elemento, el observe callback no se ejecutar\xe1 dos veces, ni tampoco tendr\xe1 que ejecutar disconnect() dos veces. En otras palabras, una vez el elemento es observado, observarlo de nuevo con la misma instancia del observador no har\xe1 nada. Sin embargo, si el callback es diferente por supuesto se le a\xf1adir\xe1 otro observador."))),(0,o.kt)("h4",{id:"metodo-disconnect"},"Metodo disconnect()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Evita que la instancia de MutationObserver continue recibiendo notificaciones de modificaciones del DOM. Hasta que el m\xe9todo observe() sea usado de nuevo, la funci\xf3n callback no ser\xe1 invocada.")),(0,o.kt)("h4",{id:"metodo-takerecords"},"Metodo takeRecords()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Elimina todos los registros que se crearon con el m\xe9todo observe() de la instancia MutationObserve"),(0,o.kt)("li",{parentName:"ul"},"Devuelve su contenido (Un array de MutationRecords)")),(0,o.kt)("h3",{id:"objeto-mutationobserverinit"},"objeto MutationObserverInit"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es el objeto que se pasa como segundo argumento en el observe()."),(0,o.kt)("li",{parentName:"ul"},"Todas sus propiedades tienen valores booleanas."),(0,o.kt)("li",{parentName:"ul"},"Especifica a que clase de cambios reaccionar.")),(0,o.kt)("h4",{id:"propiedades"},"Propiedades"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Recordatorio")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Node es el primer argumento de observe()"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"childList : Cambios en los hijos directos del node "),(0,o.kt)("li",{parentName:"ul"},"subtree :  Cambios en todos los descendientes de Node"),(0,o.kt)("li",{parentName:"ul"},"attributes : Cambios en los atributos de node"),(0,o.kt)("li",{parentName:"ul"},"attributeFilter : Un array de nombres de atributos , para observar solamente a los seleccionados."),(0,o.kt)("li",{parentName:"ul"},"characterData : Establece si debe observar cambios de texto en node.data o no."),(0,o.kt)("li",{parentName:"ul"},"attributeOldValue : Si es true ,  tanto el valor viejo como el nuevo del atributo  son pasado al objeto MutationRecord , si es false pasa solamente el nuevo (necesita la opcion attributes)."),(0,o.kt)("li",{parentName:"ul"},"characterDataOldValue: Si es true , tanto el valor viejo como el nuevo de node.data son pasado al objeto MutationRecord , si es false pasa solamente el nuevo (necesita la opcion characterData).")),(0,o.kt)("h3",{id:"objeto-mutationrecord"},"objeto MutationRecord"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cuando se detecta alg\xfan cambio especificado en el observe() , se ejecuta el callback de la instancia MutationObserver (se especifico en el constructor)."),(0,o.kt)("li",{parentName:"ul"},"El callback como primer par\xe1metro tiene un array de objetos de tipo MutationRecord."),(0,o.kt)("li",{parentName:"ul"},"Cada objeto representa una mutacion.")),(0,o.kt)("h4",{id:"propiedades-1"},"Propiedades"),(0,o.kt)("h4",{id:"type"},"type"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Tipo de mutacion"),(0,o.kt)("li",{parentName:"ul"},"Posibles valores: attributes (atributos) , characterData (dato) , childList ( elementos hijos agregados o quitos)")),(0,o.kt)("h4",{id:"target"},"target"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Donde ocurri\xf3 el cambio"),(0,o.kt)("li",{parentName:"ul"},'Un elemento(nodo) para \u201cattributes\u201d  , un nodo de texto para \u201ccharacterData" o un elemento(Node) para una mutacion de childList.')),(0,o.kt)("h4",{id:"addednodesremovednodes"},"addedNodes/removedNodes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nodos que fueron agregados o quitados")),(0,o.kt)("h4",{id:"previoussiblingnextsibling"},"previousSibling/nextSibling"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Los nodos \u201chermanos\u201d, previos y siguientes a los nodos agregados y quitados,")),(0,o.kt)("h4",{id:"attributenameattributenamespace"},"attributeName/attributeNamespace"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"el nombre o namespace (para XML) del atributo cambiado.")),(0,o.kt)("h4",{id:"oldvalue"},"oldValue"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El valor previo . Es afectado  por las propiedades  attributeOldValue/characterDataOldValue.")),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},' <body>\n  \n    <div contentEditable id="elem">Click and <b>edit</b>, please</div>\n\n    <script>\n    let observer = new MutationObserver(mutationRecords => {\n      console.log(mutationRecords); // console.log(los cambios)\n    });\n    \n    // observa todo exceptuando atributos\n    observer.observe(elem, {\n      childList: true, // observa hijos directos\n      subtree: true, // y descendientes inferiores tambi\xe9n\n      characterDataOldValue: true // pasa el dato viejo al callback\n    });\n    <\/script>\n  </body>\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Mas info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://es.javascript.info/mutation-observer"},"mutation observe")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/API/MutationObserver"},"Developer mozilla"))))),(0,o.kt)("h2",{id:"intersection-observer"},"Intersection Observer"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"La API Intersection Observer nos permite observar de forma as\xedncrona los cambios producidos en la intersecci\xf3n entre el elemento observado y un elemento superior (o el propio viewport)."),(0,o.kt)("li",{parentName:"ul"},"Es una API que permite detectar cuando un elemento entra en una zona visible.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hist\xf3ricamente, detectar cuando un elemento pasaba a ser visible en el viewport era una tarea bastante complicada y costosa de implementar cuando recurr\xedamos a librer\xedas de terceros"),". Por ejemplo, este tipo de informaci\xf3n era necesaria si quer\xedamos cargar im\xe1genes de forma lazy, implementar el t\xedpico scroll infinito o mostrar anuncios al llegar a determinadas partes de la web."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://desarrolloweb.com/faq/como-saber-si-un-elemento-esta-en-el-viewport"},"Todas estas tareas que antiguamente implicaban bucles ejecut\xe1ndose constantemente y llamadas a m\xe9todos como getBoundingClientRect")," ",(0,o.kt)("strong",{parentName:"p"},"pueden ser implementadas de forma mucho m\xe1s sencilla gracias a esta API"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"El API Intersection Observer registra una funci\xf3n callback que se ejecuta si un elemento que se desea monitorizar entra o sale de otro elemento (o del viewport), o cuando la cantidad por la que ambos elementos se intersecan cambia en una cantidad requerida"),"."),(0,o.kt)("h4",{id:"c\xf3mo-usarlo"},"\xbfC\xf3mo usarlo?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Para usar el intersection observer, primero debemos crear una instacia del mismo y pasarle como primer parametro un callback que se ejecutar\xe1 cuando el elemento objetivo entre en la pantalla y se le puede pasar un segundo parametro opcional que es la configuraci\xf3n.")),(0,o.kt)("h4",{id:"parametros-del-callback-primer-argumento"},"Parametros del Callback (Primer argumento)"),(0,o.kt)("h4",{id:"entries-1"},"entries"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Array de objetos IntersectionObserverEntry que contienen informaci\xf3n sobre la intersecci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"Cada objeto IntersectionObserverEntry tiene las propiedades: intersectionRect , intersectionRatio , boundingClientRect , rootBounds , target , time , isIntersecting.")),(0,o.kt)("h4",{id:"observer"},"observer"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Referencia al observer que ha lanzado la intersecci\xf3n.")),(0,o.kt)("h4",{id:"propiedades-del-objeto-de-configuraci\xf3n-segundo-argumento"},"Propiedades del objeto de configuraci\xf3n (Segundo argumento)"),(0,o.kt)("h4",{id:"rootmargin"},"rootMargin"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El margen que se usar\xe1 para la intersecci\xf3n."),(0,o.kt)("li",{parentName:"ul"},'Especifica el margen alrededor del elemento root. Puede tener valores similares a los de CSS , e.g. "10px 20px 30px 40px" (top, right, bottom, left). Los valores pueden ser porcentajes. Este conjunto de valores sirve para aumentar o encoger cada lado del  del elemento root antes de calcular las intersecciones. Por defecto son todos cero.')),(0,o.kt)("h4",{id:"root"},"root"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El elemento que queremos observar"),(0,o.kt)("li",{parentName:"ul"},"El elemento que es usado como viewport para comprobar la visibilidad de  algun elemento target. Debe ser ancestro de target. Por defecto es el viewport del navegador si no se especifica o si es null.",(0,o.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"}," Mas adelante veremos los elementos target"))))),(0,o.kt)("h4",{id:"threshold"},"threshold"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Este se usa para especificar el porcentaje de intersecci\xf3n que debe haber para que se detecte una intersecci\xf3n y llam\xe9 el callback. Puede ser un n\xfamero, un array de n\xfameros o null."),(0,o.kt)("li",{parentName:"ul"},"Es un n\xfamero o un array de n\xfameros que indican a que porcentaje de visibilidad del elemento target, la funci\xf3n callback del observer deber\xeda ser ejecutada. Si usted quiere que se detecte cuando la visibilidad pasa la marca del 50%, deber\xeda usar un valor de 0.5. Si quiere ejecutar la funci\xf3n callback cada vez que la visibilidad pase otro 25%, usted deber\xeda especificar el array ","[0, 0.25, 0.5, 0.75, 1]",". El valor por defecto es 0 (lo que significa que tan pronto como un p\xedxel sea visible, la funci\xf3n callback ser\xe1 ejecutada). Un valor de 1.0 significa que el umbral no se considera pasado hasta que todos los pixels son visibles.")),(0,o.kt)("p",null,"Ejemplo: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"   let options = {\n  root: document.querySelector('body'),\n  rootMargin: '0px',\n  threshold: 1.0\n}\nconst callback = () => {\n\n}\nlet observer = new IntersectionObserver(callback, options);\nconsole.log(observer);\n\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Un umbral(threshold) de 1.0 significa que cuando el 100% del elemento target est\xe1 visible dentro del elemento especificado por la opci\xf3n root, la funci\xf3n callback es invocada."),(0,o.kt)("li",{parentName:"ul"},"Pero por ahora no registramos ning\xfan elemento target , por lo tanto nunca se invocar\xeda.")))),(0,o.kt)("h4",{id:"metodos-de-la-instancia--intersectionobserver"},"Metodos de la instancia  IntersectionObserver"),(0,o.kt)("h4",{id:"observe"},"observe()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Recibe la referencia del elemento que queremos observar"),(0,o.kt)("li",{parentName:"ul"},"Sirve para registrar un elemento target en la instancia."),(0,o.kt)("li",{parentName:"ul"},"Te permite observar un elemento.")),(0,o.kt)("h4",{id:"unobserve"},"unobserve()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Recibe la referencia del elemento que queremos dejar de observar"),(0,o.kt)("li",{parentName:"ul"},"Te permite detener la observaci\xf3n del elemento."),(0,o.kt)("li",{parentName:"ul"},"Sirve para eliminar un elemento target de la instancia.")),(0,o.kt)("h4",{id:"disconnect"},"disconnect()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Sirve para dejar de observar todos los elementos."),(0,o.kt)("li",{parentName:"ul"},"Te permite eliminar todos los elementos target de la instancia.")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Scroll Listener vs intersection Observe")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"La gran diferencia entre usar scroll listener y intersection observer es que el scroll listener se ejecuta cada vez que se hace scroll, se dispara a una velocidad alta, mientras que el intersection observer solo se ejecuta cuando un elemento entra en la pantalla, por lo que la diferencia es el costo de computaci\xf3n, creando un problema de rendimiento."))),(0,o.kt)("h4",{id:"ejemplo-lazy-loading-para-im\xe1genes"},"Ejemplo Lazy loading para im\xe1genes"),(0,o.kt)("p",null,"Tal y como vimos anteriormente, el callback de Intersection Observer recibe dos argumentos, entries (con los objetos(que contienen al elemento target) que dispararon el evento) y observer . Lo que haremos ser\xe1 iterar sobre el array entries de cara a realizar la operaci\xf3n de carga de la imagen."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Document</title>\n  </head>\n  <body>\n  \n    <html>\n      <body>\n        <div>\n          <img \n               src="http://placekitten.com/200/300" \n               data-src="https://images.unsplash.com/photo-1572294723031-2aaf17070dbd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80"\n          >\n        </div>\n        <div>\n            <img \n                 src="http://placekitten.com/200/300" \n                 data-src="https://images.unsplash.com/photo-1572391015781-f29d249b6658?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80"\n            >\n        </div>\n        <div>\n          <img \n               src="http://placekitten.com/200/300" \n               data-src="https://images.unsplash.com/photo-1572391015781-f29d249b6658?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80"\n          >\n      </div>\n      <div>\n        <img \n             src="http://placekitten.com/200/300" \n             data-src="https://images.unsplash.com/photo-1572391015781-f29d249b6658?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80"\n        >\n    </div>\n        <script>\n          const callback = (entries, observer) =>\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.src = entry.target.dataset.src;\n      observer.unobserve(entry.target);\n    }\n  });\n\nconst observer = new IntersectionObserver(callback, {\n  rootMargin: "0px 0px 200px 0px"\n});\n\ndocument.querySelectorAll(\'img\').forEach(img => observer.observe(img));\n        <\/script>\n      </body>\n    </html>\n  </body>\n</html>\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Logica del callback:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"En primer lugar estamos comprobando si se ha detectado la intersecci\xf3n del objeto con el elemento padre (en este caso el viewport) para lo cual empleamos la propiedad isIntersecting ."),(0,o.kt)("li",{parentName:"ul"},"En caso afirmativo, modificamos la propiedad src del elemento y empleamos el objeto observer para dejar de observarlo, pues la operaci\xf3n s\xf3lo queremos que se ejecute una vez para cada imagen."))),(0,o.kt)("li",{parentName:"ul"},"En el objeto de opciones establecemos la propiedad rootMargin con un valor de 200px para el margen inferior, de modo que el evento se dispare cuando todav\xeda queden 200 p\xedxeles para que aparezca la imagen de modo que el usuario no se \u201centere\u201d de esa carga en diferido. Estamos incrementando la caja que contiene el root."),(0,o.kt)("li",{parentName:"ul"},"\xbfC\xf3mo seleccionamos las im\xe1genes a observar?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Seleccionamos todas nuestras im\xe1genes  con el querySelectorAll() y  le decimos al objeto observer que las observe mediante su m\xe9todo observe ")))))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"mas info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://marcomadera.com/blog/intersection-observer"},"intersection observe")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/API/Intersection_Observer_API"},"developer mozilla")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://latteandcode.medium.com/javascript-intersection-observer-1410b743c991"},"javascript insection observe"))))))}m.isMDXComponent=!0}}]);