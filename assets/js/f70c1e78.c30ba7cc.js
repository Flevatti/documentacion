"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[6335],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>u});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var r=t.createContext({}),c=function(e){var a=t.useContext(r),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},d=function(e){var a=c(e.components);return t.createElement(r.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,v=m["".concat(r,".").concat(u)]||m[u]||p[u]||l;return n?t.createElement(v,s(s({ref:a},d),{},{components:n})):t.createElement(v,s({ref:a},d))}));function u(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=n.length,s=new Array(l);s[0]=m;var o={};for(var r in a)hasOwnProperty.call(a,r)&&(o[r]=a[r]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<l;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4664:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=n(7462),i=(n(7294),n(3905));const l={sidebar_position:4},s="Conceptos de POO - Parte 2",o={unversionedId:"C--/POO2",id:"C--/POO2",title:"Conceptos de POO - Parte 2",description:"Abstracci\xf3n",source:"@site/docs/C--/POO2.md",sourceDirName:"C--",slug:"/C--/POO2",permalink:"/documentacion/docs/C--/POO2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/C--/POO2.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"C",previous:{title:"Poo",permalink:"/documentacion/docs/C--/POO"},next:{title:"Base de datos",permalink:"/documentacion/docs/C--/BD"}},r={},c=[{value:"Abstracci\xf3n",id:"abstracci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Herencia",id:"herencia",level:2},{value:"Ejemplo",id:"ejemplo-1",level:4},{value:"Palara clave &quot;sealed&quot;",id:"palara-clave-sealed",level:4},{value:"Palara clave &quot;base&quot;",id:"palara-clave-base",level:4},{value:"Encapsulamiento",id:"encapsulamiento",level:2},{value:"Polimorfismo",id:"polimorfismo",level:2},{value:"Ejemplo de Herencia",id:"ejemplo-de-herencia",level:4},{value:"Otro ejemplo",id:"otro-ejemplo",level:4},{value:"Propiedades",id:"propiedades",level:2},{value:"Encapsulaci\xf3n",id:"encapsulaci\xf3n",level:4},{value:"\xbfPor qu\xe9 encapsulaci\xf3n?",id:"por-qu\xe9-encapsulaci\xf3n",level:4},{value:"Propiedad",id:"propiedad",level:4},{value:"Propiedades autom\xe1ticas",id:"propiedades-autom\xe1ticas",level:4},{value:"Enumeraci\xf3n",id:"enumeraci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo-2",level:4},{value:"Tambi\xe9n puedes tener un enum dentro de una clase:",id:"tambi\xe9n-puedes-tener-un-enum-dentro-de-una-clase",level:4},{value:"Valor de una enumeraci\xf3n",id:"valor-de-una-enumeraci\xf3n",level:4},{value:"Enumeraci\xf3n en una instrucci\xf3n Switch",id:"enumeraci\xf3n-en-una-instrucci\xf3n-switch",level:4},{value:"This",id:"this",level:2},{value:"Ejemplo:",id:"ejemplo-3",level:4},{value:"Constructor principal",id:"constructor-principal",level:2},{value:"Ejemplo",id:"ejemplo-4",level:4},{value:"Clases gen\xe9ricas",id:"clases-gen\xe9ricas",level:2},{value:"\xbfQu\xe9 son las clases gen\xe9ricas en C#?",id:"qu\xe9-son-las-clases-gen\xe9ricas-en-c",level:4},{value:"Estructura de una clase gen\xe9rica.",id:"estructura-de-una-clase-gen\xe9rica",level:4},{value:"Ejemplo",id:"ejemplo-5",level:4},{value:"Otro ejemplo",id:"otro-ejemplo-1",level:4},{value:"M\xfaltiples tipos de datos",id:"m\xfaltiples-tipos-de-datos",level:4},{value:"Restricciones",id:"restricciones",level:4},{value:"Init",id:"init",level:2}],d={toc:c};function p(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"conceptos-de-poo---parte-2"},"Conceptos de POO - Parte 2"),(0,i.kt)("h2",{id:"abstracci\xf3n"},"Abstracci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si nuevamente nos vamos al diccionario tenemos que abstraer significa dejar de lado lo poco relevante y enfocarnos en lo m\xe1s importante o relevante para un fin buscado."),(0,i.kt)("li",{parentName:"ul"},"Trasponiendo este concepto hacia la programaci\xf3n orientada a objetos tenemos que este concepto establece que nos enfoquemos s\xf3lo en los campos que son relevantes para una clase."),(0,i.kt)("li",{parentName:"ul"},"La abstracci\xf3n de datos es el proceso de ocultar ciertos detalles y mostrar solo la informaci\xf3n esencial al usuario."),(0,i.kt)("li",{parentName:"ul"},"La abstracci\xf3n se puede lograr con clases abstractas o interfaces.")),(0,i.kt)("h4",{id:"ejemplo"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Cliente\n{\n    public int Id { get; set; }\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n    public DateTime FechaRegistro { get; set; }\n    public double Credito { get; set; }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Un cliente puede tener miles de caracter\xedsticas, que traducidos a un lenguaje de programaci\xf3n orientada a objetos ser\xedan campos y propiedades, pero \xbfPor qu\xe9 s\xf3lo consideramos estos seis?"),(0,i.kt)("li",{parentName:"ul"},"La respuesta es f\xe1cil, porque la programaci\xf3n orientada a objetos nos indica mediante la Abstracci\xf3n que s\xf3lo nos enfoquemos en aquello que es relevante para nuestro software, dejando de lado todo lo dem\xe1s.")))),(0,i.kt)("h2",{id:"herencia"},"Herencia"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Es el mecanismo de la programaci\xf3n orientada orientada a objetos mediante el cual constru\xedmos una clase a partir de otra, compartiendo c\xf3digo de una hacia otra clase."),(0,i.kt)("li",{parentName:"ul"},"A la clase que recibe los miembros de otra clase, es decir que hereda desde otra clase, se le llama clase hija."),(0,i.kt)("li",{parentName:"ul"},"A la clase que da la herencia a su clase hija se le llama clase padre."),(0,i.kt)("li",{parentName:"ul"},'En C#, es posible heredar campos y m\xe9todos de una clase a otra. Agrupamos el "concepto de herencia" en dos categor\xedas:',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Clase derivada (hijo): la clase que hereda de otra clase"),(0,i.kt)("li",{parentName:"ul"},"Clase base (padre): la clase de la que se hereda"))),(0,i.kt)("li",{parentName:"ul"},"Para heredar de una clase, use el  s\xedmbolo \u201c",(0,i.kt)("strong",{parentName:"li"},":"),"\u201d.")),(0,i.kt)("h4",{id:"ejemplo-1"},"Ejemplo"),(0,i.kt)("p",null,"Clase padre:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class DocumentoVenta\n{\n    public int Id { get; set; }\n    public string Serie { get; set; }\n    public string Correlativo { get; set; }\n    public DateTime FechaEmision { get; set; }\n    public double MontoTotal { get; set; }\n}\n\n")),(0,i.kt)("p",null,"Tiene dos clases hijas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Boleta : DocumentoVenta\n{\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n}\n    public class Factura : DocumentoVenta\n{\n    public string RazonSocial { get; set; }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Decimos que boleta y factura son hijas que heredan de su padre Documento venta ya que heredan todas las caracter\xedsticas de \xe9l, y le a\xf1aden sus propiedades particulares, con esto reducimos c\xf3digo redundante."))),(0,i.kt)("h4",{id:"palara-clave-sealed"},'Palara clave "sealed"'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si no desea que otras clases hereden de una clase, use la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"sealed"),"."),(0,i.kt)("li",{parentName:"ul"},"Si intenta acceder a una clase sealed, C# generar\xe1 un error:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"sealed class Vehicle \n{\n  ...\n}\n\nclass Car : Vehicle \n{\n  ...\n}\n\n")),(0,i.kt)("h4",{id:"palara-clave-base"},'Palara clave "base"'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La palabra clave \u201c",(0,i.kt)("strong",{parentName:"li"},"base"),"\u201d se usa para acceder a los constructores y m\xe9todos de la clase \u201cpadre\u201d. "),(0,i.kt)("li",{parentName:"ul"},"\xdaselo dentro del m\xe9todo , constructor, etc.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\npublic class Animal {\n   public string repColor = "brown";\n}\npublic class Reptile: Animal {\n   string repColor = "green";\n   public void display() {\n      Console.WriteLine("Color: "+base.repColor);\n      Console.WriteLine("Color: "+repColor);\n   }\n}\npublic class Demo {\n   public static void Main() {\n      Reptile rep = new Reptile();\n      rep.display();\n   }\n}\n\n')),(0,i.kt)("h2",{id:"encapsulamiento"},"Encapsulamiento"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Especifica quien puede interactuar con los miembros de una clase."),(0,i.kt)("li",{parentName:"ul"},"Este concepto puede ocultar los miembros de una clase hacia el exterior seg\xfan sea conveniente."),(0,i.kt)("li",{parentName:"ul"},"Este concepto est\xe1 fuertemente relacionado con los ",(0,i.kt)("a",{parentName:"li",href:"/documentacion/docs/C--/POO#modificadores-de-acceso"},"modificadores de acceso")),(0,i.kt)("li",{parentName:"ul"},"Para ver un ejemplo podemos utilizar la siguiente clase:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Cliente\n{         \n    public int Id { get; set; }\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n    public DateTime FechaRegistro { get; set; }\n    private double Credito { get; set; }\n \n    public void AumentarCredito(double monto)\n    {\n        this.Credito += monto;\n    }        \n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como notamos, podemos controlar el encapsulamiento con los modificadores de acceso, siendo que la clase Cliente es accesible desde cualquier parte de la aplicaci\xf3n, al igual que las propiedades Id, Nombres, Apellidos y FechaRegistro ya que todos estos son p\xfablicos."),(0,i.kt)("li",{parentName:"ul"},"Sin embargo, el campo Credito s\xf3lo es accesible desde dentro de la clase (al ser privado) y si se quiere aumentar el cr\xe9dito tenemos a nuestra disposici\xf3n el m\xe9todo AumentarCredito ya que este s\xed que es p\xfablico.")))),(0,i.kt)("h2",{id:"polimorfismo"},"Polimorfismo"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Polimorfismo significa "muchas formas", y ocurre cuando tenemos muchas clases que est\xe1n relacionadas entre s\xed.'),(0,i.kt)("li",{parentName:"ul"},"El polimorfismo es cuando se usa un m\xe9todo para realizar una tarea. Pero la misma acci\xf3n(tarea) se puede hacer de diferentes maneras."),(0,i.kt)("li",{parentName:"ul"},"Existen dos formas de  aplicar polimorfismo:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Por interfaz"),(0,i.kt)("li",{parentName:"ul"},"Por herencia")))),(0,i.kt)("h4",{id:"ejemplo-de-herencia"},"Ejemplo de Herencia"),(0,i.kt)("p",null,"Tenemos la clase padre Animal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public abstract class Animal\n{\n    public abstract void EmitirSonido();\n}\n\n")),(0,i.kt)("p",null,"Y las clases hijas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'    public class Perro : Animal\n{\n    public override void EmitirSonido()\n    {\n        Console.WriteLine("Guau guau!");\n    }\n}\n\n    public class Gato : Animal\n{\n    public override void EmitirSonido()\n    {\n        Console.WriteLine("Miau miau!");\n    }\n}\n\n')),(0,i.kt)("h4",{id:"otro-ejemplo"},"Otro ejemplo"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Piense en una clase base llamada Animal que tiene un m\xe9todo llamado animalSound(). "),(0,i.kt)("li",{parentName:"ul"},"Las clases derivadas de animales podr\xedan ser cerdos, gatos, perros, p\xe1jaros, y tambi\xe9n tienen su propia implementaci\xf3n de animalSound(el cerdo gru\xf1e y el gato ma\xfalla, etc.)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Animal  \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The animal makes a sound");\n  }\n}\n\nclass Pig : Animal \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The pig says: wee wee");\n  }\n}\n\nclass Dog : Animal \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The dog says: bow wow");\n  }\n}\n\nclass Program \n{\n  static void Main(string[] args) \n  {\n    Animal myAnimal = new Animal();  \n    Animal myPig = new Pig();  \n    Animal myDog = new Dog();  \n\n    myAnimal.animalSound();\n    myPig.animalSound();\n    myDog.animalSound();\n  }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"El resultado del ejemplo anterior probablemente no fue lo que esperaba. Esto se debe a que el m\xe9todo de la clase base anula el m\xe9todo de la clase derivada cuando comparten el mismo nombre."),(0,i.kt)("li",{parentName:"ul"},"Sin embargo, C# proporciona una opci\xf3n para anular el m\xe9todo de la clase base, agregando la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"virtual")," al m\xe9todo dentro de la clase base y usando la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"override")," para cada m\xe9todo de la clase derivada:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Animal  \n{\n  public virtual void animalSound() \n  {\n    Console.WriteLine("The animal makes a sound");\n  }\n}\n\nclass Pig : Animal  \n{\n  public override void animalSound() \n  {\n    Console.WriteLine("The pig says: wee wee");\n  }\n}\n\nclass Dog : Animal  \n{\n  public override void animalSound() \n  {\n    Console.WriteLine("The dog says: bow wow");\n  }\n}\n\nclass Program \n{\n  static void Main(string[] args) \n  {\n    Animal myAnimal = new Animal(); \n    Animal myPig = new Pig();  \n    Animal myDog = new Dog();  \n\n    myAnimal.animalSound();\n    myPig.animalSound();\n    myDog.animalSound();\n  }\n}\n\n')),(0,i.kt)("h2",{id:"propiedades"},"Propiedades"),(0,i.kt)("h4",{id:"encapsulaci\xf3n"},"Encapsulaci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'El significado de Encapsulaci\xf3n es asegurarse de que los datos "sensibles" est\xe9n ocultos para los usuarios. Para lograr esto, debes:',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Declarar campos/variables como private."),(0,i.kt)("li",{parentName:"ul"},"Proporcionar m\xe9todos public get y set, para acceder y actualizar el valor de un campo private .")))),(0,i.kt)("h4",{id:"por-qu\xe9-encapsulaci\xf3n"},"\xbfPor qu\xe9 encapsulaci\xf3n?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mejor control de los miembros de la clase (reduzca la posibilidad de que usted (u otros) estropeen el c\xf3digo)."),(0,i.kt)("li",{parentName:"ul"},"Los campos se pueden hacer de solo lectura (si solo usa el m\xe9todo get) o de solo escritura (si solo usa el m\xe9todo set)."),(0,i.kt)("li",{parentName:"ul"},"Flexible: el programador puede cambiar una parte del c\xf3digo sin afectar otras partes."),(0,i.kt)("li",{parentName:"ul"},"Mayor seguridad de los datos.")),(0,i.kt)("h4",{id:"propiedad"},"Propiedad"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Una propiedad es como una combinaci\xf3n de una variable y un m\xe9todo."),(0,i.kt)("li",{parentName:"ul"},"Tiene dos m\xe9todos: un get y un  set."),(0,i.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"class Person\n{\n  private string name; \n\n  public string Name   \n  {\n    get { return name; }   \n    set { name = value; }  \n  }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"La propiedad Name est\xe1 asociada con el campo name. Es una buena pr\xe1ctica usar el mismo nombre tanto para la propiedad como para el campo privado, pero con la primera letra en may\xfascula."),(0,i.kt)("li",{parentName:"ul"},"El m\xe9todo get devuelve el valor de la variable name."),(0,i.kt)("li",{parentName:"ul"},"El m\xe9todo set asigna value a la variable name. La palabra clave ",(0,i.kt)("strong",{parentName:"li"},"value")," representa el valor que asignamos a la propiedad.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Usamos la propiedad Name que creamos")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Program\n{\n  static void Main(string[] args)\n  {\n    Person myObj = new Person();\n    myObj.Name = "Liam";\n    Console.WriteLine(myObj.Name);\n  }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'A la propiedad se accede con un punto (".").')))),(0,i.kt)("h4",{id:"propiedades-autom\xe1ticas"},"Propiedades autom\xe1ticas"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# tambi\xe9n proporciona una forma de usar propiedades abreviadas/autom\xe1ticas, donde no tiene que definir el campo para la propiedad, y solo tiene que escribir get; y set; dentro de la propiedad."),(0,i.kt)("li",{parentName:"ul"},"El siguiente ejemplo producir\xe1 el mismo resultado que el ejemplo anterior. La \xfanica diferencia es que hay menos c\xf3digo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Person\n{\n  public string Name  \n  { get; set; }\n}\n\nclass Program\n{\n  static void Main(string[] args)\n  {\n    Person myObj = new Person();\n    myObj.Name = "Liam";\n    Console.WriteLine(myObj.Name);\n  }\n}\n\n')),(0,i.kt)("h2",{id:"enumeraci\xf3n"},"Enumeraci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Enum es una "clase" especial que representa un grupo de constantes (variables inalterables/de solo lectura).'),(0,i.kt)("li",{parentName:"ul"},"Para crear un enum, use la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"enum")," (en lugar de class o interface) y entre llaves \u201c{}\u201d ponga las constantes separadas con comas."),(0,i.kt)("li",{parentName:"ul"},"Sintaxis: enum nombre { valor1 , valor2 , ..}."),(0,i.kt)("li",{parentName:"ul"},"El nombre de un enum se utiliza como tipo de dato de una variable , que almacena algun valor que se especifico."),(0,i.kt)("li",{parentName:"ul"},'Y cada valor es una \u201cpropiedad/campo\u201d de la "clase especial", que se accede con el punto (\u201c.\u201d).')),(0,i.kt)("h4",{id:"ejemplo-2"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Level \n{\n  Low,\n  Medium,\n  High\n}\n\n")),(0,i.kt)("p",null,"Puede acceder a elementos de un enum utilice la sintaxis de punto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Level myVar = Level.Medium;\nConsole.WriteLine(myVar);\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},'Enum es la abreviatura de "enumeraciones", que significa "listado espec\xedficamente".'))),(0,i.kt)("h4",{id:"tambi\xe9n-puedes-tener-un-enum-dentro-de-una-clase"},"Tambi\xe9n puedes tener un enum dentro de una clase:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"class Program\n{\n  enum Level\n  {\n    Low,\n    Medium,\n    High\n  }\n  static void Main(string[] args)\n  {\n    Level myVar = Level.Medium;\n    Console.WriteLine(myVar);\n  }\n}\n\n")),(0,i.kt)("h4",{id:"valor-de-una-enumeraci\xf3n"},"Valor de una enumeraci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"De forma predeterminada, el primer elemento de una enumeraci\xf3n tiene el valor 0. El segundo tiene el valor 1, y as\xed sucesivamente."),(0,i.kt)("li",{parentName:"ul"},"Para obtener el valor entero de un elemento, debe convertir expl\xedcitamente el elemento en un int:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Months\n{\n  January,    // 0\n  February,   // 1\n  March,      // 2\n  April,      // 3\n  May,        // 4\n  June,       // 5\n  July        // 6\n}\n\nstatic void Main(string[] args)\n{\n  int myNum = (int) Months.April;\n  Console.WriteLine(myNum);\n}\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tambi\xe9n puede asignar sus propios valores de enumeraci\xf3n y los siguientes elementos actualizar\xe1n sus n\xfameros en consecuencia:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Months\n{\n  January,    // 0\n  February,   // 1\n  March=6,    // 6\n  April,      // 7\n  May,        // 8\n  June,       // 9\n  July        // 10\n}\n\nstatic void Main(string[] args)\n{\n  int myNum = (int) Months.April;\n  Console.WriteLine(myNum);\n}\n\n")),(0,i.kt)("h4",{id:"enumeraci\xf3n-en-una-instrucci\xf3n-switch"},"Enumeraci\xf3n en una instrucci\xf3n Switch"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las enumeraciones se usan a menudo en declaraciones switch para verificar los valores correspondientes:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'enum Level \n{\n  Low,\n  Medium,\n  High\n}\n\nstatic void Main(string[] args) \n{\n  Level myVar = Level.Medium;\n  switch(myVar) \n  {\n    case Level.Low:\n      Console.WriteLine("Low level");\n      break;\n    case Level.Medium:\n       Console.WriteLine("Medium level");\n      break;\n    case Level.High:\n      Console.WriteLine("High level");\n      break;\n  }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\xbfPor qu\xe9 y cu\xe1ndo usar enumeraciones?")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Use enumeraciones cuando tenga valores que sepa que no van a cambiar, como meses, d\xedas, colores, baraja de cartas, etc."))),(0,i.kt)("h2",{id:"this"},"This"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La palabra clave this hace referencia a la instancia(objeto) actual de la clase y tambi\xe9n se usa como modificador del primer par\xe1metro de un m\xe9todo de extensi\xf3n."),(0,i.kt)("li",{parentName:"ul"},'Podemos hacer referencia al objeto que estamos usando, con "this".')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/Javascript/objeto#this"},"Explicaci\xf3n en otro lenguaje"))))),(0,i.kt)("h4",{id:"ejemplo-3"},"Ejemplo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Employee\n{\n    private string alias;\n    private string name;\n\n    public Employee(string name, string alias)\n    {\n        this.name = name;\n        this.alias = alias;\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://oregoom.com/c-sharp/poo/"},"POO en C#")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.discoduroderoer.es/poo-en-c-sharp/"},"POO En C# -- 2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/06/27/fundamentos-de-la-poo-con-c-3-10-objetos-y-clases/"},"Fundamentos de la POO con C# [3/10]: Objetos y Clases")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/06/28/fundamentos-de-la-poo-con-c-5-10-los-constructores/"},"Fundamentos de la POO con C# [5/10]: Los Constructores")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/08/02/fundamentos-de-la-poo-con-c-6-10-signaturas-e-interfaces/"},"Fundamentos de la POO con C# [6/10]: Signaturas e Interfaces")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/09/13/fundamentos-de-la-poo-con-c-9-10-los-4-pilares/"},"Fundamentos de la POO con C# [9/10]: Los 4 pilares")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/cs/cs_constructors.php"},"C# Constructors")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/cs/cs_oop.php"},"C# - What is OOP?"))))),(0,i.kt)("h2",{id:"constructor-principal"},"Constructor principal"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A partir de C# 12, puede definir un constructor principal como parte de la declaraci\xf3n de clase."),(0,i.kt)("li",{parentName:"ul"},"Cuando usa un constructor principal, para instanciar un objeto se debe utilizar un inicializador de objeto.")),(0,i.kt)("h4",{id:"ejemplo-4"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Container(int capacity)\n{\n    private int _capacity = capacity;\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Estamos definiendo la clase y el constructor en la misma declaraci\xf3n."),(0,i.kt)("li",{parentName:"ul"},"Agregar par\xe1metros al nombre de clase define el constructor principal. Esos par\xe1metros est\xe1n disponibles en el cuerpo de la clase, que incluye sus miembros. Puede usarlos para inicializar campos o en cualquier otro lugar donde los necesite.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tambi\xe9n puede usar el modificador required en una propiedad para obligar al programador que usen un inicializador de objeto para establecer el valor inicial de la propiedad:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Person\n{\n    public required string LastName { get; set; }\n    public required string FirstName { get; set; }\n}\n\nvar p1 = new Person(); // Error! \nvar p2 = new Person() { FirstName = "Grace", LastName = "Hopper" };\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Los inicializadores de objetos son las llaves \u201c{}\u201d que se encuentran despues del constructor y especifican que valor debe tener cada Propiedad."),(0,i.kt)("li",{parentName:"ul"},"Puedes usar los inicializadores de objetos para instanciar cualquier objeto, siempre y cuando las propiedades de la clase tengan un set o init.")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/fundamentals/types/classes"},"Introducci\xf3n a las clases"))))),(0,i.kt)("h2",{id:"clases-gen\xe9ricas"},"Clases gen\xe9ricas"),(0,i.kt)("h4",{id:"qu\xe9-son-las-clases-gen\xe9ricas-en-c"},"\xbfQu\xe9 son las clases gen\xe9ricas en C#?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Imagina que est\xe1s en una tienda de zapatos que s\xf3lo vende una talla. Este enfoque de talla \xfanica no ser\xeda muy popular, \xbfverdad? Afortunadamente, los zapatos vienen en tallas variadas para adaptarse a todos."),(0,i.kt)("li",{parentName:"ul"},"Del mismo modo, en el mundo de la programaci\xf3n, necesitamos herramientas que puedan adaptarse a diferentes tipos de datos, y ah\xed es donde entran las clases gen\xe9ricas."),(0,i.kt)("li",{parentName:"ul"},"En el sentido m\xe1s b\xe1sico, una clase gen\xe9rica en C# es una clase que puede trabajar con varios tipos de datos, sin tener que ser reescrita para cada uno."),(0,i.kt)("li",{parentName:"ul"},'Las clases gen\xe9ricas nos permiten definir clases, interfaces y m\xe9todos con los llamados "par\xe1metros de tipo\u201d, que indican los tipos de datos reales que se usar\xe1n.'),(0,i.kt)("li",{parentName:"ul"},'Una clase gen\xe9rica en C# establece una estructura b\xe1sica que puede usarse con diferentes tipos de datos. Por ejemplo, podr\xedas tener una clase gen\xe9rica "Lista" que puede manejar listas de enteros, listas de cadenas, listas de objetos de una clase personalizada, y as\xed sucesivamente.')),(0,i.kt)("h4",{id:"estructura-de-una-clase-gen\xe9rica"},"Estructura de una clase gen\xe9rica."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class NombreClase<T>\n{\n    // Cuerpo de la clase\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, NombreClase es el nombre de la clase y ","<","T> es el par\xe1metro de tipo."),(0,i.kt)("li",{parentName:"ul"},"Puedes pensar en T como una especie de variable que indica que tipo de dato se va a usar. "),(0,i.kt)("li",{parentName:"ul"},"En lugar de especificar un tipo de dato espec\xedfico como int, string o double, usamos T para mantener nuestro c\xf3digo flexible. "),(0,i.kt)("li",{parentName:"ul"},"Cuando creamos una instancia de la clase gen\xe9rica, sustituimos T con el tipo de datos que queremos utilizar.")))),(0,i.kt)("h4",{id:"ejemplo-5"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Caja<T>\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, hemos creado una clase gen\xe9rica llamada Caja que puede contener cualquier tipo de datos. El tipo de datos es representado por T, que se utiliza en todo el cuerpo de la clase."),(0,i.kt)("li",{parentName:"ul"},"Luego, cuando creamos una instancia de Caja, podemos especificar el tipo de datos que queremos que contenga.")))),(0,i.kt)("h4",{id:"otro-ejemplo-1"},"Otro ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Caja<T>\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n\n    public void MostrarContenido()\n    {\n        Console.WriteLine($"El contenido de la caja es: {contenido}");\n    }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'La clase tiene una propiedad "Contenido" que puede contener cualquier tipo de datos y un m\xe9todo "MostrarContenido" que imprime el contenido de la caja en la consola.')))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Cuando creamos una instancia de "Caja", especificamos el tipo de datos que queremos que contenga. Por ejemplo, podr\xedamos crear una "Caja" para almacenar un string de esta manera:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Caja<string> cajaDePalabras = new Caja<string>();\ncajaDePalabras.Contenido = "Hola, Mundo!";\ncajaDePalabras.MostrarContenido();  // Salida: El contenido de la caja es: Hola, Mundo!\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Dentro del s\xedmbolo \u201c","<",">\u201d especificamos los tipos de datos  que van a ser los par\xe1metros de tipos."),(0,i.kt)("li",{parentName:"ul"},"Luego del s\xedmbolo \u201c","<",">\u201d vienen los par\xe9ntesis para invocar al constructor.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'O podr\xedamos crear una "Caja" para almacenar un n\xfamero entero:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Caja<int> cajaDeNumeros = new Caja<int>();\ncajaDeNumeros.Contenido = 42;\ncajaDeNumeros.MostrarContenido();  // Salida: El contenido de la caja es: 42\n\n")),(0,i.kt)("h4",{id:"m\xfaltiples-tipos-de-datos"},"M\xfaltiples tipos de datos"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las clases gen\xe9ricas no se limitan a un solo tipo de datos. Pueden ser tan diversas como un equipo de superh\xe9roes, cada uno con su propia habilidad especial."),(0,i.kt)("li",{parentName:"ul"},"Puedes definir clases gen\xe9ricas que trabajen con m\xfaltiples tipos de datos al mismo tiempo."),(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes un ejemplo de c\xf3mo podr\xedas hacer esto:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Partido<Team1, Team2>\n{\n    public Team1 Local { get; set; }\n    public Team2 Visitante { get; set; }\n\n    public Partido(Team1 local, Team2 visitante)\n    {\n        Local = local;\n        Visitante = visitante;\n    }\n\n    public void MostrarPartido()\n    {\n        Console.WriteLine($"Partido: {Local} VS {Visitante}");\n    }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Esta clase gen\xe9rica "Partido" tiene dos par\xe1metros de tipo: Team1 y Team2. Cada uno representa el equipo local y el equipo visitante del partido. Cuando creamos una nueva instancia de "Partido", especificamos los tipos de datos que queremos para cada equipo:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Partido<string, string> partidoFutbol = new Partido<string, string>("Barcelona FC", "Real Madrid");\npartidoFutbol.MostrarPartido();  // Salida: Partido: Barcelona FC VS Real Madrid\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Dentro del s\xedmbolo \u201c","<",">\u201d especificamos que tipos de datos ser\xe1n Team1 y Team2 (En el mismo orden que se especific\xf3 en la clase)."),(0,i.kt)("li",{parentName:"ul"},"Luego del s\xedmbolo \u201c","<",">\u201d, se ubican los par\xe9ntesis con los par\xe1metros del constructor.")))),(0,i.kt)("h4",{id:"restricciones"},"Restricciones"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las restricciones en las clases gen\xe9ricas son como reglas que estableces para tus amigos antes de prestarles tu preciada colecci\xf3n de c\xf3mics. Estas reglas definen lo que tus amigos pueden y no pueden hacer con tus c\xf3mics."),(0,i.kt)("li",{parentName:"ul"},"Puedes aplicar restricciones a los par\xe1metros de tipo en una definici\xf3n de clase gen\xe9rica utilizando la palabra clave where."),(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes un ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Contenedor<T> where T : class\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'En este ejemplo, la clase gen\xe9rica "Contenedor" tiene una restricci\xf3n que indica que T debe ser una clase. Esto significa que s\xf3lo puedes utilizar tipos de referencia, no tipos de valor, cuando creas una instancia de "Contenedor".')))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes otro ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Comparador<T> where T : IComparable<T>\n{\n    public T Valor1 { get; set; }\n    public T Valor2 { get; set; }\n\n    public int Comparar()\n    {\n        return Valor1.CompareTo(Valor2);\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'En este ejemplo, la clase gen\xe9rica "Comparador" tiene una restricci\xf3n que indica que T debe implementar la interfaz IComparable',"<","T>. Esto nos permite usar el m\xe9todo CompareTo en Valor1 y Valor2, algo que no podr\xedamos hacer sin la restricci\xf3n.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# permite varios tipos de restricciones, incluyendo restricciones de clase, de interfaz, de constructor sin par\xe1metros y m\xe1s. El uso de restricciones te permite obtener a\xfan m\xe1s poder y flexibilidad de las clases gen\xe9ricas, y puede ser una herramienta \xfatil en tus proyectos de programaci\xf3n.")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters"},"Constraints on type parameters (C# Programming Guide)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://estradawebgroup.com/Post/Como-utilizar-las-Clases-Genericas-en-C-para-Mayor-Flexibilidad-y-Reutilizacion-del-Codigo/20705"},"C\xf3mo utilizar las Clases Gen\xe9ricas en C# para Mayor Flexibilidad y Reutilizaci\xf3n del C\xf3digo"))))),(0,i.kt)("h2",{id:"init"},"Init"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A veces, desea instanciar un objeto y no desea cambiarlo despu\xe9s de eso. En otras palabras, desea que el objeto sea inmutable."),(0,i.kt)("li",{parentName:"ul"},"Para hacer eso, puede usar la palabra clave init en una propiedad o en un  indexer de un objeto."),(0,i.kt)("li",{parentName:"ul"},"La palabra clave init har\xe1 que el setter sea el setter que asigne un valor a la propiedad o al indexador solo durante la inicializaci\xf3n del objeto."),(0,i.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"{\n    public string Name { get; init; } = string.Empty;\n    public sbyte Age { get; init; } = 1;\n   \n}\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, definimos la clase  Person con dos propiedades Namey Age. Ambas propiedades utilizan la palabra clave init en lugar de set. Significa que solo puede establecer su valor durante la inicializaci\xf3n del objeto de esta manera:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var person = new Person()\n{\n    Name = "John",\n    Age = 22\n};\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Al usar el init , estas obligado a usar  los inicializadores de objetos para instanciar un objeto."))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si intenta asignar un valor a la propiedad de solo inicio, obtendr\xe1 un error de tiempo de compilaci\xf3n. Por ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'person.Name = "Jane"; // error\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.csharptutorial.net/csharp-tutorial/csharp-init/"},"C# init")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://geeks.ms/jorge/2020/09/28/c-9-0-specification-init-only-setters/"},"C# 9.0 \u2013 Specification \u2013 Init-only Setters"))))))}p.isMDXComponent=!0}}]);