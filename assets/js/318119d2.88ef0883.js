"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[9778],{5680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>g});var o=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function t(e,a){if(null==e)return{};var n,o,r=function(e,a){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var a=o.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},u=function(e){var a=s(e.components);return o.createElement(l.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=t(e,["components","mdxType","originalType","parentName"]),d=s(n),p=r,g=d["".concat(l,".").concat(p)]||d[p]||m[p]||i;return n?o.createElement(g,c(c({ref:a},u),{},{components:n})):o.createElement(g,c({ref:a},u))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=p;var t={};for(var l in a)hasOwnProperty.call(a,l)&&(t[l]=a[l]);t.originalType=e,t[d]="string"==typeof e?e:r,c[1]=t;for(var s=2;s<i;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1713:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>s});var o=n(8168),r=(n(6540),n(5680));const i={sidebar_position:2},c="DockerFile",t={unversionedId:"Docker/archivoDockerFile",id:"Docker/archivoDockerFile",title:"DockerFile",description:"- DockerFile es un archivo que contiene las instrucciones  de como generar una imagen.",source:"@site/docs/Docker/archivoDockerFile.md",sourceDirName:"Docker",slug:"/Docker/archivoDockerFile",permalink:"/documentacion/docs/Docker/archivoDockerFile",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Docker/archivoDockerFile.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"Docker",previous:{title:"Docker",permalink:"/documentacion/docs/Docker/"},next:{title:"Docker compose",permalink:"/documentacion/docs/Docker/archivoDockerCompose"}},l={},s=[{value:"Comando FROM",id:"comando-from",level:2},{value:"Comando WORKDIR",id:"comando-workdir",level:2},{value:"Comando COPY",id:"comando-copy",level:2},{value:"Comando RUN",id:"comando-run",level:2},{value:"\xbfPor qu\xe9 pasa esto?",id:"por-qu\xe9-pasa-esto",level:4},{value:"Comando MAINTAINER",id:"comando-maintainer",level:2},{value:"Comando LABEL author",id:"comando-label-author",level:2},{value:"Comando ENTRYPOINT",id:"comando-entrypoint",level:2},{value:"Comando CMD",id:"comando-cmd",level:2},{value:"Ejecutar DockerFile",id:"ejecutar-dockerfile",level:2}],u={toc:s},d="wrapper";function m(e){let{components:a,...n}=e;return(0,r.yg)(d,(0,o.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"dockerfile"},"DockerFile"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"DockerFile es un archivo que contiene las instrucciones  de como generar una imagen."),(0,r.yg)("li",{parentName:"ul"},"B\xe1sicamente sirve para crear una imagen de tu aplicaci\xf3n."),(0,r.yg)("li",{parentName:"ul"},'Es un archivo con "comandos" que especifican como crear una imagen.')),(0,r.yg)("h2",{id:"comando-from"},"Comando FROM"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Especifica la imagen base. "),(0,r.yg)("li",{parentName:"ul"},"Esta imagen base es el punto de partida."),(0,r.yg)("li",{parentName:"ul"},"Cumple con la funci\xf3n de establecer la imagen sobre la que los pasos e im\xe1genes siguientes se ejecutan. Proporciona el sistema operativo y otras herramientas como el entorno de ejecuci\xf3n que va a necesitar la aplicaci\xf3n para ejecutarse."),(0,r.yg)("li",{parentName:"ul"},"La elecci\xf3n de la imagen base es crucial porque define el entorno de ejecuci\xf3n y las herramientas disponibles para tu aplicaci\xf3n.")),(0,r.yg)("h2",{id:"comando-workdir"},"Comando WORKDIR"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Se utiliza para establecer el directorio de trabajo dentro del contenedor en el que se ejecutar\xe1n los comandos posteriores. "),(0,r.yg)("li",{parentName:"ul"},"Es similar a ejecutar el comando cd en la terminal para cambiar de directorio."),(0,r.yg)("li",{parentName:"ul"},"Este comando acepta una ruta como argumento y define el directorio de trabajo para cualquier instrucci\xf3n que se ejecute despu\xe9s en el Dockerfile. "),(0,r.yg)("li",{parentName:"ul"},"Si el directorio especificado en el comando WORKDIR no existe en la imagen base o en cualquier punto anterior del Dockerfile, Docker lo crear\xe1 autom\xe1ticamente al ejecutar un comando que necesite acceder a ese directorio. "),(0,r.yg)("li",{parentName:"ul"},'Si no especificas un comando WORKDIR en tu Dockerfile, Docker utilizar\xe1 un directorio por defecto como directorio de trabajo. Por lo general, este directorio por defecto suele ser el directorio ra\xedz del contenedor, es decir, "/".')),(0,r.yg)("h2",{id:"comando-copy"},"Comando COPY"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Sirve para copiar archivos a la carpeta que especificamos con WORKDIR, este directorio lo maneja docker. Tambi\xe9n te permite renombrar archivos."),(0,r.yg)("li",{parentName:"ul"},"La sintaxis para mover un archivo: ")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-powershell"},"COPY nombreDelArchivoACopiar UbicacionAPegar\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Si UbicacionAPegar es un punto \u201c.\u201d significa que es en la carpeta que se especifico en WORKDIR o en el directorio raiz del contenedor.")))),(0,r.yg)("h2",{id:"comando-run"},"Comando RUN"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Especifica los comandos que se van ejecutar durante el proceso de construcci\xf3n de la imagen. "),(0,r.yg)("li",{parentName:"ul"},"Cada instrucci\xf3n RUN en el Dockerfile ejecuta comandos dentro de un contenedor temporal, y los cambios resultantes se registran en una nueva capa que se agrega a la imagen. Estas capas son inmutables, lo que significa que no pueden modificarse despu\xe9s de ser creadas. "),(0,r.yg)("li",{parentName:"ul"},"Cuando se crea una nueva capa en una instrucci\xf3n RUN, Docker solo incluye en la imagen final los cambios realizados en esa capa espec\xedfica. Esto significa que si, por ejemplo, instalas un paquete en una capa con RUN apt-get install, solo los archivos relacionados con la instalaci\xf3n de ese paquete se incluir\xe1n en esa capa de la imagen. Los archivos y directorios que no se ven afectados por esa instrucci\xf3n RUN no se incluir\xe1n en esa capa y permanecer\xe1n inalterados."),(0,r.yg)("li",{parentName:"ul"},"Supongamos que tienes el siguiente Dockerfile:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'FROM ubuntu:20.04\nRUN mkdir /app\nRUN echo "Hello, World!" > /app/hello.txt\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},'En este ejemplo, estamos creando un directorio llamado /app y luego escribiendo "Hello, World!" en un archivo llamado hello.txt dentro de ese directorio.'),(0,r.yg)("li",{parentName:"ul"},"Cuando construyes la imagen Docker utilizando este Dockerfile, se crear\xe1n dos capas: una para la creaci\xf3n del directorio /app y otra para la creaci\xf3n del archivo hello.txt. ")),(0,r.yg)("h4",{id:"por-qu\xe9-pasa-esto"},"\xbfPor qu\xe9 pasa esto?"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Cuando construyes una imagen Docker, cada instrucci\xf3n en el Dockerfile crea una capa de esa imagen. Cada capa representa un estado del sistema de archivos del contenedor en un momento particular durante el proceso de construcci\xf3n de la imagen. Cada capa es como una instant\xe1nea del sistema de archivos en un punto dado."),(0,r.yg)("li",{parentName:"ul"},"Estas capas son como capas de una torta, apiladas unas sobre otras."),(0,r.yg)("li",{parentName:"ul"},'Sin embargo, cuando ejecutas un contenedor a partir de esa imagen, Docker agrega una capa adicional que permite que el contenedor realice cambios en el sistema de archivos. Esta capa adicional, llamada "capa de escritura" o "capa de contenedor", es donde se realizan los cambios mientras el contenedor est\xe1 en ejecuci\xf3n.')),(0,r.yg)("h2",{id:"comando-maintainer"},"Comando MAINTAINER"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Especifica quien le da mantenimiento a la imagen.")),(0,r.yg)("h2",{id:"comando-label-author"},"Comando LABEL author"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Es la versi\xf3n actualizada de MAINTAINER.")),(0,r.yg)("h2",{id:"comando-entrypoint"},"Comando ENTRYPOINT"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Entre corchetes, especificamos los comandos a ejecutarse cuando se genera un contenedor a partir de esta imagen.")),(0,r.yg)("h2",{id:"comando-cmd"},"Comando CMD"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Se utiliza para especificar el comando predeterminado que se ejecutar\xe1 cuando se inicie un contenedor basado en esa imagen. A diferencia de RUN, que se ejecuta durante la construcci\xf3n de la imagen, CMD se ejecuta cuando se lanza el contenedor.")),(0,r.yg)("h2",{id:"ejecutar-dockerfile"},"Ejecutar DockerFile"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"En la ubicaci\xf3n del proyecto, se abre una consola y se ejecuta el comando build con la siguiente sintaxis:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-powershell"},"docker build  -t nombreImagen:nombreEtiqueta ruta-del-dockerfile\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Este comando crea una imagen con el nombre nombreImagen leyendo el archivo dockerfile que se encuentra en ruta-del-dockerfile"),(0,r.yg)("li",{parentName:"ul"},"Esta imagen est\xe1 asociada a la etiqueta nombreEtiqueta especificada")))))}m.isMDXComponent=!0}}]);