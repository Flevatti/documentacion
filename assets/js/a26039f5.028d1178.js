"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[2595],{5680:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>g});var o=a(6540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,o,t=function(e,n){if(null==e)return{};var a,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=o.createContext({}),c=function(e){var n=o.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},d=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var a=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(a),m=t,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return a?o.createElement(g,l(l({ref:n},d),{},{components:a})):o.createElement(g,l({ref:n},d))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=a.length,l=new Array(r);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:t,l[1]=i;for(var c=2;c<r;c++)l[c]=a[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9889:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=a(8168),t=(a(6540),a(5680));const r={sidebar_position:7},l="Context API",i={unversionedId:"React/context",id:"React/context",title:"Context API",description:"- Context en React es una herramienta que permite que los datos est\xe9n disponibles en todos los componentes (\xe1rbol de componente) sin la necesidad de pasar props de manera expl\xedcita en cada nivel. Esto resulta \xfatil para gestionar datos que deben ser accesibles globalmente, como el usuario autenticado, el tema de la aplicaci\xf3n o el idioma seleccionado. Context se utiliza especialmente cuando diferentes vistas o componentes necesitan acceder a estos datos, incluso si no est\xe1n anidados directamente.",source:"@site/docs/React/context.md",sourceDirName:"React",slug:"/React/context",permalink:"/documentacion/docs/React/context",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/context.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"React",previous:{title:"React Router v6",permalink:"/documentacion/docs/React/router"},next:{title:"Reducer",permalink:"/documentacion/docs/React/reducer"}},s={},c=[{value:"Redux vs Context",id:"redux-vs-context",level:2},{value:"Redux",id:"redux",level:4},{value:"Context",id:"context",level:4},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:4},{value:"Problematica",id:"problematica",level:2},{value:"Contexto: una alternativa a pasar props",id:"contexto-una-alternativa-a-pasar-props",level:4},{value:"Problema",id:"problema",level:4},{value:"Soluci\xf3n Con Context",id:"soluci\xf3n-con-context",level:4},{value:"En resumen",id:"en-resumen",level:4},{value:"createContext()",id:"createcontext",level:2},{value:"Paso 1: crear el contexto",id:"paso-1-crear-el-contexto",level:4},{value:"useContext()",id:"usecontext",level:2},{value:"Paso 2: Usar el contexto",id:"paso-2-usar-el-contexto",level:4},{value:"Provider",id:"provider",level:2},{value:"Paso 3: Proveer el contexto",id:"paso-3-proveer-el-contexto",level:4},{value:"Resumen",id:"resumen",level:4},{value:"Usar y proveer el contexto desde el mismo componente",id:"usar-y-proveer-el-contexto-desde-el-mismo-componente",level:2},{value:"El contexto pasa a trav\xe9s de componentes intermedios",id:"el-contexto-pasa-a-trav\xe9s-de-componentes-intermedios",level:2},{value:"Funcionamiento de los contextos",id:"funcionamiento-de-los-contextos",level:2},{value:"Antes de usar contexto",id:"antes-de-usar-contexto",level:2},{value:"Casos de uso para el contexto",id:"casos-de-uso-para-el-contexto",level:2},{value:"Actividad ruta protegida",id:"actividad-ruta-protegida",level:2}],d={toc:c},u="wrapper";function p(e){let{components:n,...a}=e;return(0,t.yg)(u,(0,o.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"context-api"},"Context API"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Context en React es una herramienta que permite que los datos est\xe9n disponibles en todos los componentes (\xe1rbol de componente) sin la necesidad de pasar props de manera expl\xedcita en cada nivel. Esto resulta \xfatil para gestionar datos que deben ser accesibles globalmente, como el usuario autenticado, el tema de la aplicaci\xf3n o el idioma seleccionado. Context se utiliza especialmente cuando diferentes vistas o componentes necesitan acceder a estos datos, incluso si no est\xe1n anidados directamente."),(0,t.yg)("li",{parentName:"ul"},"Context permite que los datos importantes de tu aplicaci\xf3n est\xe9n disponibles para cualquier componente, sin importar en qu\xe9 parte se encuentren. Esto significa que no tienes que pasar informaci\xf3n de un componente a otro; simplemente defines el dato en un lugar, y cualquier componente que lo necesite puede obtenerlo directamente. Es ideal para datos como el usuario actual, el idioma o el tema visual.")),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"No hacer todo GLOBAL ."),(0,t.yg)("li",{parentName:"ul"},"Solo los que se nos escapan de la mano.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Documentaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.legacy.reactjs.org/docs/context.html"},"Context (antiguo)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/passing-data-deeply-with-context"},"Pasar datos en profundidad con contexto")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.react.dev/learn/passing-data-deeply-with-context"},"useContext")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://es.reactjs.org/docs/hooks-reference.html#usecontext"},"useContext (antiguo)"))))),(0,t.yg)("h2",{id:"redux-vs-context"},"Redux vs Context"),(0,t.yg)("h4",{id:"redux"},"Redux"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es una libreria para la gesti\xf3n de estado global."),(0,t.yg)("li",{parentName:"ul"},"Ofrece herramientas avanzadas como:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Depurador con viaje en el tiempo, que permite inspeccionar cambios en el estado a lo largo del tiempo."),(0,t.yg)("li",{parentName:"ul"},"Middleware configurable como redux-saga o redux-thunk, para manejar l\xf3gica as\xedncrona y efectos secundarios."))),(0,t.yg)("li",{parentName:"ul"},"Est\xe1n optimizados para evitar renderizados innecesarios, mejorando el rendimiento."),(0,t.yg)("li",{parentName:"ul"},"Es independiente de React, por lo que puede usarse con otros frameworks o librer\xedas.")),(0,t.yg)("h4",{id:"context"},"Context"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es una API nativa de React que facilita compartir datos entre componentes sin pasar props manualmente a trav\xe9s de cada nivel."),(0,t.yg)("li",{parentName:"ul"},'Es ideal para datos "globales" como temas, idiomas o la autenticaci\xf3n del usuario.'),(0,t.yg)("li",{parentName:"ul"},"No incluye herramientas avanzadas como un depurador, middleware o una estructura estricta para manejar el estado."),(0,t.yg)("li",{parentName:"ul"},"Context no est\xe1 dise\xf1ado espec\xedficamente para la gesti\xf3n del estado, sino para transferir datos entre componentes.")),(0,t.yg)("h4",{id:"conclusi\xf3n"},"Conclusi\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ambos cumplen roles diferentes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Usa Redux si necesitas una herramienta robusta para manejar estados complejos, l\xf3gica as\xedncrona o depuraci\xf3n avanzada."),(0,t.yg)("li",{parentName:"ul"},"Usa Context si solo necesitas compartir datos simples entre componentes en una aplicaci\xf3n React.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Informaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://www.itdo.com/blog/react-context-api-puede-ser-alternativa-a-redux/"},"React. \xbfContext API puede ser alternativa a Redux?")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://daveceddia.com/context-api-vs-redux/"},"Redux vs. The React Context API")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://frontarm.com/james-k-nelson/when-context-replaces-redux/"},"When Context Replaces Redux"))))),(0,t.yg)("h2",{id:"problematica"},"Problematica"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En React, pasar props es una manera com\xfan de enviar datos entre componentes. Sin embargo, cuando los datos deben llegar a un componente que est\xe1 en un nivel inferior dentro del \xe1rbol de componentes, o cuando varios componentes necesitan acceder a esos mismos datos, se complica el proceso."),(0,t.yg)("li",{parentName:"ul"},"Esto se debe a que:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Los props deben pasarse manualmente desde el componente padre hacia los hijos, incluso si algunos de esos hijos no los necesitan."),(0,t.yg)("li",{parentName:"ul"},"Esto genera mucho c\xf3digo innecesario y hace que el mantenimiento sea m\xe1s dif\xedcil."))),(0,t.yg)("li",{parentName:"ul"},'Esta situaci\xf3n se conoce como "perforaci\xf3n de props" (prop drilling), porque los datos parecen "perforar" varios niveles de componentes intermedios para llegar a donde realmente son necesarios.'),(0,t.yg)("li",{parentName:"ul"},'Imag\xednate que tienes un dato importante en un componente "padre" que necesitas usar en un "nieto" o incluso m\xe1s abajo. Sin una herramienta como Context o Redux, tienes que pasar el dato manualmente desde el padre hasta el hijo, del hijo al nieto, y as\xed sucesivamente, incluso si esos componentes intermedios no lo necesitan.'),(0,t.yg)("li",{parentName:"ul"},"Este proceso puede ser tedioso y dif\xedcil de manejar cuando los datos son necesarios en varias partes de la aplicaci\xf3n. Adem\xe1s, hace que el c\xf3digo sea m\xe1s largo y complicado.")),(0,t.yg)("h4",{id:"contexto-una-alternativa-a-pasar-props"},"Contexto: una alternativa a pasar props"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El contexto en React es una herramienta que permite que un componente padre comparta datos con todos los componentes que envuelve (\xe1rbol), sin necesidad de pasar props manualmente en cada nivel. Esto es especialmente \xfatil cuando los datos son necesarios en m\xfaltiples niveles o por varios componentes."),(0,t.yg)("li",{parentName:"ul"},"Este es un solo ejemplo. Considera el componente Heading que acepta level como su tama\xf1o:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"import Heading from './Heading.js';\nimport Section from './Section.js';\n\nexport default function Page() {\n  return (\n    <Section>\n      <Heading level={1}>T\xedtulo</Heading>\n      <Heading level={2}>Encabezado</Heading>\n      <Heading level={3}>Sub-encabezado</Heading>\n      <Heading level={4}>Sub-sub-encabezado</Heading>\n      <Heading level={5}>Sub-sub-sub-encabezado</Heading>\n      <Heading level={6}>Sub-sub-sub-sub-encabezado</Heading>\n    </Section>\n  );\n}\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Section.js"',title:'"Section.js"'},'export default function Section({ children }) {\n  return (\n    <section className="section">\n      {children}\n    </section>\n  );\n}\n\n')),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Heading.js"',title:'"Heading.js"'},"export default function Heading({ level, children }) {\n  switch (level) {\n    case 1:\n      return <h1>{children}</h1>;\n    case 2:\n      return <h2>{children}</h2>;\n    case 3:\n      return <h3>{children}</h3>;\n    case 4:\n      return <h4>{children}</h4>;\n    case 5:\n      return <h5>{children}</h5>;\n    case 6:\n      return <h6>{children}</h6>;\n    default:\n      throw Error('Unknown level: ' + level);\n  }\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Supongamos que quieres m\xfaltiples encabezados (headings) dentro del mismo componente Section para siempre tener el mismo tama\xf1o:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"import Heading from './Heading.js';\nimport Section from './Section.js';\n\nexport default function Page() {\n  return (\n    <Section>\n      <Heading level={1}>T\xedtulo</Heading>\n      <Section>\n        <Heading level={2}>Encabezado</Heading>\n        <Heading level={2}>Encabezado</Heading>\n        <Heading level={2}>Encabezado</Heading>\n        <Section>\n          <Heading level={3}>Sub-encabezado</Heading>\n          <Heading level={3}>Sub-encabezado</Heading>\n          <Heading level={3}>Sub-encabezado</Heading>\n          <Section>\n            <Heading level={4}>Sub-sub-encabezado</Heading>\n            <Heading level={4}>Sub-sub-encabezado</Heading>\n            <Heading level={4}>Sub-sub-encabezado</Heading>\n          </Section>\n        </Section>\n      </Section>\n    </Section>\n  );\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Actualmente, est\xe1s pasando la prop level a cada ","<","Heading> separadamente:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"<Section>\n  <Heading level={3}>Acerca de</Heading>\n  <Heading level={3}>Fotos</Heading>\n  <Heading level={3}>Videos</Heading>\n</Section>\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ser\xeda genial si pudieras pasar la prop level al componente ","<","Section> y removerlo del ","<","Heading>. De esta forma podr\xedas reforzar que todos los encabezados tengan el mismo tama\xf1o en una misma secci\xf3n (section):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"<Section level={3}>\n  <Heading>Acerca de</Heading>\n  <Heading>Fotos</Heading>\n  <Heading>Videos</Heading>\n</Section>\n\n")),(0,t.yg)("h4",{id:"problema"},"Problema"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El componente ","<","Heading> necesita conocer el level de su ","<","Section> m\xe1s cercano. Como Section puede estar en un nivel superior dentro del \xe1rbol de componente, no es pr\xe1ctico usar props para pasar este dato a trav\xe9s de todos los componentes intermedios.")),(0,t.yg)("h4",{id:"soluci\xf3n-con-context"},"Soluci\xf3n Con Context"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Crear un Contexto:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Crea un contexto para almacenar y compartir el level. Por ejemplo, LevelContext. "))),(0,t.yg)("li",{parentName:"ul"},"Consumir el Contexto:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El componente ","<","Heading> usar\xe1 este contexto para acceder al level m\xe1s cercano en el \xe1rbol. Esto se hace con el hook useContext."))),(0,t.yg)("li",{parentName:"ul"},"Proveer el Contexto:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"El componente ","<","Section> usar\xe1 el Provider del contexto para especificar el valor del level, que ser\xe1 accesible para los ","<","Heading> dentro de \xe9l.")))),(0,t.yg)("h4",{id:"en-resumen"},"En resumen"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El contexto en React permite que un componente padre pueda proveer datos a todos los componentes que envuelve (dentro de su \xe1rbol), sin necesidad de pasar props manualmente de uno a otro."),(0,t.yg)("li",{parentName:"ul"},'Esto significa que, aunque los componentes hijos o nietos est\xe9n muy alejados en la jerarqu\xeda, pueden acceder a los datos proporcionados por el componente que est\xe1 m\xe1s arriba en el \xe1rbol (el que provee el contexto). Esto resuelve problemas como la "perforaci\xf3n de props", en la que tienes que pasar los datos a trav\xe9s de varios niveles de componentes intermedios, aunque esos componentes no los necesiten directamente.'),(0,t.yg)("li",{parentName:"ul"},"Si un componente A tiene varios niveles de componentes hijos (B, C, D), y A provee un contexto, entonces B, C y D pueden acceder a esos datos sin que el componente A tenga que pasar expl\xedcitamente props a trav\xe9s de cada nivel.")),(0,t.yg)("h2",{id:"createcontext"},"createContext()"),(0,t.yg)("h4",{id:"paso-1-crear-el-contexto"},"Paso 1: crear el contexto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Primeramente, necesitas crear el contexto. Necesitar\xe1s exportarlo desde un archivo para que tus componentes lo puedan usar."),(0,t.yg)("li",{parentName:"ul"},"El contexto se crea con createContext():",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Cuando un componente usa(consume) un contexto con useContext(), busca el valor (prop value) del Provider m\xe1s cercano en el \xe1rbol de componentes. Si no encuentra un Provider, usar\xe1 el valor predeterminado del Context."),(0,t.yg)("li",{parentName:"ul"},'Cada objeto Context en React incluye un componente Provider, cuya prop value contiene los datos "globales" o los valores a los que tendr\xe1n acceso los componentes consumidores.'),(0,t.yg)("li",{parentName:"ul"},"El componente Provider acepta una prop value que contiene  los valores a los que tendr\xe1n acceso los componentes consumidores."),(0,t.yg)("li",{parentName:"ul"},"Los componentes consumidores son los descendientes del Provider."))),(0,t.yg)("li",{parentName:"ul"},"Entonces quedar\xeda as\xed:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="LevelContext.js"',title:'"LevelContext.js"'},"import { createContext } from 'react';\nexport const LevelContext = createContext(1);\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El \xfanico par\xe1metro que se le pasa a createContext es el valor predeterminado. En este caso, 1 se refiere al nivel de encabezado m\xe1s grande, pero puedes pasar cualquier valor (incluso un objeto). Ya ver\xe1s la importancia del valor predeterminado en el siguiente paso."),(0,t.yg)("li",{parentName:"ul"},"El contexto que se crea hay que exportarlo."),(0,t.yg)("li",{parentName:"ul"},"Este contexto lo va a utilizar los componentes que van a necesitar  el valor level en este caso.")))),(0,t.yg)("h2",{id:"usecontext"},"useContext()"),(0,t.yg)("h4",{id:"paso-2-usar-el-contexto"},"Paso 2: Usar el contexto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Importa el Hook useContext desde React y tu contexto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Actualmente, el componente Heading lee level en la prop:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"export default function Heading({ level, children }) {\n  // ...\n}\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En su lugar, remueve la prop level y lee el valor desde el contexto que acabas de importar, LevelContext:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"export default function Heading({ children }) {\n  const level = useContext(LevelContext);\n  // ...\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"useContext le dice a React que el componente Heading quiere leer el contexto LevelContext."),(0,t.yg)("li",{parentName:"ul"},"El hook useContext() recibe como par\xe1metro un contexto (creado con React.createContext) y devuelve el valor actual del contexto pasado, que corresponde a la prop value del Provider m\xe1s cercano. Si no hay un Provider en el \xe1rbol, useContext() devolver\xe1 el valor predeterminado definido al crear el contexto.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ahora que el componente Heading no tiene una prop level, ya no tienes que pasarla a Heading en tu JSX de esta forma:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"<Section>\n  <Heading level={4}>Sub-sub-encabezado</Heading>\n  <Heading level={4}>Sub-sub-encabezado</Heading>\n  <Heading level={4}>Sub-sub-encabezado</Heading>\n</Section>\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Actualiza el JSX para que sea Section el que recibe la prop:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"<Section level={4}>\n  <Heading>Sub-sub-encabezado</Heading>\n  <Heading>Sub-sub-encabezado</Heading>\n  <Heading>Sub-sub-encabezado</Heading>\n</Section>\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Este ejemplo no funciona correctamente todav\xeda. Aunque estamos usando el contexto, React no sabe autom\xe1ticamente d\xf3nde obtener y almacenar los datos. Si no proporcionamos un valor para el contexto en cada componente Section, React usar\xe1 el valor predeterminado que definimos al crear el contexto. En nuestro caso, especificamos 1 como valor predeterminado, lo que significa que todos los componentes Heading obtendr\xe1n ese valor."),(0,t.yg)("li",{parentName:"ul"},"El problema es que, al no especificar un valor para el contexto en cada secci\xf3n, useContext(LevelContext) siempre devuelve 1, lo que hace que todos los encabezados se rendericen como ","<","h1>."),(0,t.yg)("li",{parentName:"ul"},"Para solucionar esto, necesitamos que cada componente Section proporcione su propio valor para el contexto. Esto permitir\xe1 que cada Heading obtenga el valor correcto, dependiendo de qu\xe9 tan profundo est\xe9 en el \xe1rbol de componentes.")),(0,t.yg)("h2",{id:"provider"},"Provider"),(0,t.yg)("h4",{id:"paso-3-proveer-el-contexto"},"Paso 3: Proveer el contexto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El componente Section actualmente renderiza sus hijos:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'\nexport default function Section({ children }) {\n  return (\n    <section className="section">\n      {children}\n    </section>\n  );\n}\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Envuelve los componentes con el Provider de LevelContext para proporcionarles el valor del contexto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import { LevelContext } from './LevelContext.js';\n\nexport default function Section({ level, children }) {\n  return (\n    <section className=\"section\">\n      <LevelContext.Provider value={level}>\n        {children}\n      </LevelContext.Provider>\n    </section>\n  );\n}\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Todo lo que el componente Provider envuelve tendr\xe1 acceso a los datos que contiene la prop value. Este mecanismo permite que los componentes dentro del \xe1rbol puedan consumir dichos datos sin necesidad de pasar props expl\xedcitamente en cada nivel."),(0,t.yg)("li",{parentName:"ul"},"Esto le dice a React: \xabsi cualquier componente adentro de este ","<","Section> pregunta por LevelContext a trav\xe9s de useContext(), env\xedales este level (el de la prop value)\xbb. El componente usar\xe1 el valor del ","<","LevelContext.Provider>  (prop value) m\xe1s cercano en el \xe1rbol de la UI encima de \xe9l."),(0,t.yg)("li",{parentName:"ul"},"Es el mismo resultado del c\xf3digo original, \xa1pero no tuviste que pasar la prop level a cada componente Heading! En su lugar, el componente obtiene su nivel de encabezado al preguntarle al Section m\xe1s cercano de arriba")))),(0,t.yg)("h4",{id:"resumen"},"Resumen"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Provider: Se utiliza para definir el valor del contexto (prop value) y especificar qu\xe9 componentes tienen acceso a este valor."),(0,t.yg)("li",{parentName:"ul"},"Contexto (usado con useContext): Nos permite acceder al valor proporcionado por el Provider (prop value) m\xe1s cercano que est\xe9 asociado a ese contexto.")),(0,t.yg)("h2",{id:"usar-y-proveer-el-contexto-desde-el-mismo-componente"},"Usar y proveer el contexto desde el mismo componente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Actualmente, a\xfan puedes especificar el level de cada secci\xf3n manualmente:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nexport default function Page() {\n  return (\n    <Section level={1}>\n      ...\n      <Section level={2}>\n        ...\n        <Section level={3}>\n          ...\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Debido a que el contexto te permite leer informaci\xf3n desde un componente de arriba, cada Section podr\xeda leer el level del Section de arriba, y pasar level + 1 hacia abajo autom\xe1ticamente. As\xed es como lo podr\xedas conseguir:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\nexport default function Section({ children }) {\n  const level = useContext(LevelContext);\n  return (\n    <section className=\"section\">\n      <LevelContext.Provider value={level + 1}>\n        {children}\n      </LevelContext.Provider>\n    </section>\n  );\n}\n\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Con este cambio, no es necesario pasar la prop level al ","<","Section> o al ","<","Heading>:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"\nimport Heading from './Heading.js';\nimport Section from './Section.js';\n\nexport default function Page() {\n  return (\n    <Section>\n      <Heading>T\xedtulo</Heading>\n      <Section>\n        <Heading>Encabezado</Heading>\n        <Heading>Encabezado</Heading>\n        <Heading>Encabezado</Heading>\n        <Section>\n          <Heading>Sub-encabezado</Heading>\n          <Heading>Sub-encabezado</Heading>\n          <Heading>Sub-encabezado</Heading>\n          <Section>\n            <Heading>Sub-sub-encabezado</Heading>\n            <Heading>Sub-sub-encabezado</Heading>\n            <Heading>Sub-sub-encabezado</Heading>\n          </Section>\n        </Section>\n      </Section>\n    </Section>\n  );\n}\n\n")),(0,t.yg)("h2",{id:"el-contexto-pasa-a-trav\xe9s-de-componentes-intermedios"},"El contexto pasa a trav\xe9s de componentes intermedios"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Puedes insertar tantos componentes como desees entre el componente que provee el contexto y el componente que lo usa. Esto incluye tanto componentes integrados como ","<","div> como componentes construidos por ti."),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo, el mismo componente Post (con un borde discontinuo) es renderizado en dos distintos niveles anidados. Nota que el ","<","Heading> que est\xe1 adentro tiene el nivel autom\xe1ticamente desde el ","<","Section> m\xe1s cercano:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},'import Heading from \'./Heading.js\';\nimport Section from \'./Section.js\';\n\nexport default function ProfilePage() {\n  return (\n    <Section>\n      <Heading>Mi perfil</Heading>\n      <Post\n        title="\xa1Hola viajero!"\n        body="Lee sobre mis aventuras."\n      />\n      <AllPosts />\n    </Section>\n  );\n}\n\nfunction AllPosts() {\n  return (\n    <Section>\n      <Heading>Publicaciones</Heading>\n      <RecentPosts />\n    </Section>\n  );\n}\n\nfunction RecentPosts() {\n  return (\n    <Section>\n      <Heading>Publicaciones recientes</Heading>\n      <Post\n        title="Sabores de Lisboa"\n        body="\xa1...esos past\xe9is de nata!"\n      />\n      <Post\n        title="Buenos Aires a ritmo de tango"\n        body="\xa1Me encant\xf3!"\n      />\n    </Section>\n  );\n}\n\nfunction Post({ title, body }) {\n  return (\n    <Section isFancy={true}>\n      <Heading>\n        {title}\n      </Heading>\n      <p><i>{body}</i></p>\n    </Section>\n  );\n}\n\n')),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Section.js"',title:'"Section.js"'},"import { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\nexport default function Section({ children, isFancy }) {\n  const level = useContext(LevelContext);\n  return (\n    <section className={\n      'section ' +\n      (isFancy ? 'fancy' : '')\n    }>\n      <LevelContext.Provider value={level + 1}>\n        {children}\n      </LevelContext.Provider>\n    </section>\n  );\n}\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Heading.js"',title:'"Heading.js"'},"import { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\nexport default function Heading({ children }) {\n  const level = useContext(LevelContext);\n  switch (level) {\n    case 0:\n      throw Error('Heading must be inside a Section!');\n    case 1:\n      return <h1>{children}</h1>;\n    case 2:\n      return <h2>{children}</h2>;\n    case 3:\n      return <h3>{children}</h3>;\n    case 4:\n      return <h4>{children}</h4>;\n    case 5:\n      return <h5>{children}</h5>;\n    case 6:\n      return <h6>{children}</h6>;\n    default:\n      throw Error('Unknown level: ' + level);\n  }\n}\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="LevelContext.js"',title:'"LevelContext.js"'},"import { createContext } from 'react';\n\nexport const LevelContext = createContext(0);\n\n")),(0,t.yg)("h2",{id:"funcionamiento-de-los-contextos"},"Funcionamiento de los contextos"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El funcionamiento de los contextos te podr\xeda recordar a la herencia de CSS. En CSS, puedes especificar color: blue para un ","<","div>, y cualquier nodo DOM adentro de \xe9l, no importa qu\xe9 tan profundo est\xe9, heredar\xe1 ese color a no ser de que otro nodo DOM en el medio lo sobrescriba con color: green. Asimismo, en React funciona igual."),(0,t.yg)("li",{parentName:"ul"},"En CSS, diversas propiedades como color y background-color no se sobrescriben entre ellas. Puedes definir la propiedad color de todos los ","<","div> a red sin impactar background-color. Similarmente, diversos contextos de React no se sobrescriben entre ellos mismos. Cada contexto que creas con createContext() est\xe1 completamente separado de los otros.Un componente podr\xeda usar o proveer muchos contextos diferentes sin ning\xfan problema.")),(0,t.yg)("h2",{id:"antes-de-usar-contexto"},"Antes de usar contexto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"\xa1El uso contexto resulta muy atractivo! Sin embargo, esto tambi\xe9n significa que f\xe1cilmente puedes terminar abusando de \xe9l. Solo porque necesitas pasar algunas props a varios niveles en profundidad no significa que debas poner esa informaci\xf3n en un contexto."),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed hay algunas alternativas que podr\xedas considerar antes de usar el contexto:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Empieza pasando props. Si tus componentes no son triviales, no es inusual pasar muchas props hacia abajo a trav\xe9s de muchos componentes. Podr\xeda considerarse tedioso, \xa1pero deja bien claro cu\xe1les componentes usan cu\xe1les datos! La persona d\xe1ndole mantenimiento a tu c\xf3digo estar\xe1 agradecida de que hiciste el flujo de datos expl\xedcito con props."),(0,t.yg)("li",{parentName:"ol"},"Extraer componentes y pasarlo como  children. Si pasas algunos datos a trav\xe9s de muchas capas de componentes intermedios que no usan esos datos (y lo \xfanico que hacen es pasarlos hacia abajo), esto muchas veces significa que olvidaste extraer algunos componentes sobre la marcha. Por ejemplo, quiz\xe1 pasaste algunas props como posts a componentes visuales que no las usan directamente, como lo puede ser ","<","Layout posts={posts} />. En su lugar, haz que Layout tome children como prop, y renderiza ","<","Layout>","<","Posts posts={posts} />","<","/Layout>. Esto reduce la cantidad de capas que hay entre el componente que especifica los datos y el componente que los necesita."))),(0,t.yg)("li",{parentName:"ul"},"Si ninguna de estas alternativas funciona bien para ti, considera el contexto.")),(0,t.yg)("h2",{id:"casos-de-uso-para-el-contexto"},"Casos de uso para el contexto"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Temas: Si tus aplicaciones permiten que los usuarios cambien la apariencia (por ejemplo, modo oscuro), puedes poner un proveedor de contexto en el primer nivel de tu aplicaci\xf3n, y usar ese contexto en componentes que necesiten ajustar su comportamiento visual."),(0,t.yg)("li",{parentName:"ul"},"Cuenta actual: Muchos componentes podr\xedan necesitar saber el usuario actual que inici\xf3 sesi\xf3n. Ponerlo en un contexto lo hace conveniente para leerlo desde cualquier lado del \xe1rbol. Algunas aplicaciones tambi\xe9n te permiten manejar m\xfaltiples cuentas al mismo tiempo (por ejemplo, dejar un comentario con un usuario distinto). En esos casos, puede ser conveniente envolver parte de la UI con un proveedor anidado que tenga una cuenta actual diferente."),(0,t.yg)("li",{parentName:"ul"},"Enrutamiento: La mayor\xeda de las soluciones de enrutamiento usan contexto internamente para mantener la ruta actual. As\xed es como cada enlace \xabsabe\xbb si est\xe1 activo o no. Si construyes tu propio enrutador, podr\xedas necesitar hacerlo tambi\xe9n."),(0,t.yg)("li",{parentName:"ul"},"Gestionar estados: A medida que tu aplicaci\xf3n crece, podr\xedas terminar con muchos estados cerca de la parte superior de tu aplicaci\xf3n. Muchos componentes distantes de abajo podr\xedan querer cambiarlos. Es com\xfan usar un reducer con un contexto para gestionar estados complejos y pasarlos a componentes lejanos sin mucha molestia.")),(0,t.yg)("h2",{id:"actividad-ruta-protegida"},"Actividad ruta protegida"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Crea un contexto para simular la informaci\xf3n del usuario y utiliza React Router para validar si tiene acceso a una p\xe1gina espec\xedfica. \xa1An\xedmate a implementarlo!"),(0,t.yg)("li",{parentName:"ul"},"Consejos:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Define un contexto con m\xe9todos para iniciar y cerrar sesi\xf3n, y guarda la informaci\xf3n del usuario en el mismo contexto."),(0,t.yg)("li",{parentName:"ol"},"Crea un componente que act\xfae como una ruta padre, y que verifique si el usuario est\xe1 autenticado antes de permitirle acceder a las rutas hijas. Por ejemplo, que solo renderice el \u201cchildren\u201d si esta autenticado y en caso contrario realizar una redirecci\xf3n."),(0,t.yg)("li",{parentName:"ol"},"Siempre redirige a una p\xe1gina de inicio de sesi\xf3n o de error en caso de que el usuario no tenga permisos para acceder a ciertas rutas.")))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El contexto (prop value del Provider) puede contener funciones, objetos, etc.")))),(0,t.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Las validaciones se hacen en el backend."),(0,t.yg)("li",{parentName:"ul"},"En el frontend solo las validaciones b\xe1sica.")))))}p.isMDXComponent=!0}}]);