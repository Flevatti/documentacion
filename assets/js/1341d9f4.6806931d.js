"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[4229],{5680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>g});var t=n(6540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),c=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return n?t.createElement(g,r(r({ref:a},p),{},{components:n})):t.createElement(g,r({ref:a},p))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1224:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=n(8168),i=(n(6540),n(5680));const o={sidebar_position:1},r="Typescript",s={unversionedId:"Typescript/README",id:"Typescript/README",title:"Typescript",description:"- Typescript es un superconjunto de javascript.",source:"@site/docs/Typescript/README.md",sourceDirName:"Typescript",slug:"/Typescript/",permalink:"/documentacion/docs/Typescript/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Typescript/README.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"Typescript",next:{title:"Typescript  - Parte 2",permalink:"/documentacion/docs/Typescript/typescript2"}},l={},c=[{value:"Configuraci\xf3n Typescript",id:"configuraci\xf3n-typescript",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Sintaxis",id:"sintaxis",level:2},{value:"Comentarios",id:"comentarios",level:3},{value:"Variables",id:"variables",level:3},{value:"Especificar tipo de dato",id:"especificar-tipo-de-dato",level:4},{value:"Funciones",id:"funciones",level:3},{value:"Funciones flechas",id:"funciones-flechas",level:4},{value:"Array",id:"array",level:3},{value:"Matrices y Tupla",id:"matrices-y-tupla",level:3},{value:"Set",id:"set",level:3},{value:"Map",id:"map",level:3},{value:"Clase",id:"clase",level:3},{value:"Propiedades privadas",id:"propiedades-privadas",level:4},{value:"Propiedades publicas",id:"propiedades-publicas",level:4},{value:"Propiedades protected",id:"propiedades-protected",level:4},{value:"Interfaces con clase",id:"interfaces-con-clase",level:4},{value:"Enum",id:"enum",level:3},{value:"Especificar tipo de dato",id:"especificar-tipo-de-dato-1",level:2},{value:"Aserciones de tipo",id:"aserciones-de-tipo",level:2},{value:"As",id:"as",level:4},{value:"Instanceof",id:"instanceof",level:4},{value:"Aserciones de Fetching",id:"aserciones-de-fetching",level:4},{value:"Modulo",id:"modulo",level:5},{value:"Truco para tipar la respuesta de una API:",id:"truco-para-tipar-la-respuesta-de-una-api",level:5},{value:"Corregir errores",id:"corregir-errores",level:2},{value:"Inferencia",id:"inferencia",level:2},{value:"Type",id:"type",level:2},{value:"Ejemplos",id:"ejemplos",level:4},{value:"Propiedad opcional",id:"propiedad-opcional",level:4},{value:"Solo lectura",id:"solo-lectura",level:4},{value:"Template union types",id:"template-union-types",level:4},{value:"Union types",id:"union-types",level:2},{value:"Intersection Type",id:"intersection-type",level:2},{value:"Type indexing",id:"type-indexing",level:2}],p={toc:c},d="wrapper";function m(e){let{components:a,...n}=e;return(0,i.yg)(d,(0,t.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"typescript"},"Typescript"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Typescript es un superconjunto de javascript."),(0,i.yg)("li",{parentName:"ul"},"Typescript hace que javascript sea fuertemente tipado y que tenga algunas funcionalidades POO (Orientado a Objetos)."),(0,i.yg)("li",{parentName:"ul"},"Typescript es un lenguaje compilado, ",(0,i.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Learn/JavaScript/First_steps/What_is_JavaScript#c%C3%B3digo_interpretado_versus_compilado"},"javascript es un lenguaje interpretado"),"."),(0,i.yg)("li",{parentName:"ul"},"Tiene la misma sintaxis que javascript solo que a\xf1ade funciones extra."),(0,i.yg)("li",{parentName:"ul"},"Es importante saber que Typescript funciona SOLO en TIEMPO DE COMPILACI\xd3N, en ejecuci\xf3n no hace las validaciones de tipo de datos."),(0,i.yg)("li",{parentName:"ul"},"Como typescript fue creado por Microsoft, al especificar los tipos de datos mejoras el autocompletado de VISUAL STUDIO CODE ya que tambi\xe9n es de Microsoft.")),(0,i.yg)("h2",{id:"configuraci\xf3n-typescript"},"Configuraci\xf3n Typescript"),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Se necesita Node (en realidad se requiere NPM que viene incluido con este)."),(0,i.yg)("li",{parentName:"ul"},"Al compilar se genera c\xf3digo Javascript que luego se ejecuta \xf3sea el rendimiento es el mismo."),(0,i.yg)("li",{parentName:"ul"},"Compilar significa transformar un c\xf3digo de un lenguaje a otro (generalmente es binario).")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/"},"Sitio web oficial")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/download/"},"Instalaci\xf3n"))),(0,i.yg)("h4",{id:"ejemplo"},"Ejemplo"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Creamos un archivo llamado script.ts")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"console.log('Hola Typescript');\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Ts es la extensi\xf3n de typescript.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Lo podemos ejecutar con:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-powershell"},"node script.ts\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"O primero lo podemos compilar con:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-powershell"},"npx tsc script.ts\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Especificamos el nombre del archivo a compilar y nos generara c\xf3digo javascript para ejecutar con el comando node.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Documentaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/"},"Sitio web"),":",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Get Started: Nos muestra como migrar de un lenguaje a typescript."),(0,i.yg)("li",{parentName:"ul"},"Hanbook: Nos muestra los fundamentos/teor\xeda de typescript."),(0,i.yg)("li",{parentName:"ul"},"Reference: Tiene contenido interesante de typescript.")))))),(0,i.yg)("h2",{id:"sintaxis"},"Sintaxis"),(0,i.yg)("h3",{id:"comentarios"},"Comentarios"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"// comentario\n\n/* Comentario\n de \n varias lineas */\n\n\n")),(0,i.yg)("h3",{id:"variables"},"Variables"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'var myString = "Esto es una cadena de texto"\nconsole.log(myString)\nconsole.log(typeof myString)\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Por ahora no cambia la sintaxis."),(0,i.yg)("li",{parentName:"ul"},"La sintaxis de Javascript funciona correctamente en typescript."),(0,i.yg)("li",{parentName:"ul"},"Si no asignamos el tipo de dato, ",(0,i.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/C--/guiaC2#palabra-clave-var"},"usa la palabra clave  var de un lenguaje tipado como C#")," al crear la variable y el tipo de dato se asigna solo. Esto sucede con const , let y var.")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'let myString = "Esto es una cadena de texto"\nmyString = "Aqui cambio el valor de la cadena de texto"\nconsole.log(myString)\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Funciona, pero tira error en el nombre de la variable. ",(0,i.yg)("a",{parentName:"li",href:"#corregir-errores"},"Esto se puede arreglar creando un archivo de configuraci\xf3n"),".")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'var myString = "Esto es una cadena de texto"\nmyString = 5;\nconsole.log(myString)\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Si lo ejecutas con el comando \u201cnode nombrearchivo\u201d funciona."),(0,i.yg)("li",{parentName:"ul"},"Si lo compilas con el comando \u201cnpx tsc nombrearchivo\u201d te va a tirar un error ya que la variable myString es de tipo String debido a su primer valor asignado y no se le puede asignar un valor num\xe9rico. \xd3sea se aplica el tipado fuerte. "),(0,i.yg)("li",{parentName:"ul"},"Esto funciona as\xed en todas las variables (var, const y let).")))),(0,i.yg)("h4",{id:"especificar-tipo-de-dato"},"Especificar tipo de dato"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con los dos puntos (\u201c:\u201d) podemos especificar el tipo de dato de una variable."),(0,i.yg)("li",{parentName:"ul"},"Sintaxis: nombrevariable : tipoDeDato"),(0,i.yg)("li",{parentName:"ul"},"Esto sirve para validar que una variable solo contenga como valor ese tipo de dato.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'let myString : String = "Esto es una cadena de texto"\nconsole.log(myString)\n\n\nlet myString : string = "Esto es una cadena de texto"\nconsole.log(myString)\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos en min\xfasculas son primitivos."),(0,i.yg)("li",{parentName:"ul"},"Se le puede especificar tipo de dato a variables,parametros,etc.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"RECORDATORIO")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Cuando una variable/par\xe1metro/etc tiene un tipo de dato asignado, no se le puede asignar un valor con un tipo diferente.")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"let myNumber:number = 7;\nmyNumber =  myNumber + 4\nconsole.log(myNumber)\nconsole.log(typeof myNumber)\nconsole.log(myNumber - 1);\nconsole.log(myNumber)\nlet myBool : boolean = false\nmyBool = true;\nconsole.log(myBool);\nconsole.log(typeof myBool)\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Existe el tipo de dato \u201cany\u201d para asignarle cualquier tipo de dato a la variable."),(0,i.yg)("li",{parentName:"ul"},"Existe el tipo de dato \u201cnever\u201d que es una especie de undefined para especificar un valor que nunca se va a producir/generar ya que por lo general se reproduce un error o algo que interrumpe el m\xe9todo y impide que llegue a la \xfaltima l\xednea de c\xf3digo de este.")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'let myUndefined : undefined;\n// Error porque la variable solo es de tipo undefined\nmyUndefined = "MyUndefined";\nconsole.log(myUndefined);\n\n')),(0,i.yg)("h3",{id:"funciones"},"Funciones"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Luego de los par\xe9ntesis que contiene los par\xe1metros de una funci\xf3n, con los dos puntos (\u201c:\u201d) podemos especificar qu\xe9 tipo de dato retorna.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'function myFunction() : void {\n    console.log("Mi funcion");\n}\n\nmyFunction();\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},'Estamos especificando  que no se retorna nada con la palabra "void".'),(0,i.yg)("li",{parentName:"ul"},"Si no espec\xedficas que tipo de dato retorna, Typescript analiza la funci\xf3n y agrega el tipo de dato de retorno de forma autom\xe1tica.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Error:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'function myFunction() : string {\n    console.log("Mi funcion");\n}\n\nmyFunction();\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Te tira un error porque la funci\xf3n no devuelve un string (lo que se especific\xf3).")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Tambi\xe9n podemos especificar el tipo de dato de los parametros:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nfunction sumTwoNumbers (firstNumber : number ,  secondNumber : number) : number {\n    return firstNumber + secondNumber;\n}\n\nconsole.log(sumTwoNumbers(5,5))\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Por defecto cada par\xe1metro es de tipo any (cualquier tipo de dato, no le gusta a typescript) y esto hace que no funcione el autocompletado de las funciones/propiedades que contenga el valor de este.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con desestructuraci\xf3n de objeto:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'\nfunction saludar({name , age} : {name: string , age:string})  {\n   console.log(`Hola ${name}, tienes ${age} a\xf1os`)\n}\n\nsaludar({name: "Pepe" , age: "32"})\n\n\n\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con objeto:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'\nfunction saludar(persona :  {name: string , age:number})  {\n\n   const {name , age}  = persona\n   console.log(`Hola ${name}, tienes ${age} a\xf1os`)\n}\n\nsaludar({name: "Pepe" , age: 32})\n\n\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con callback:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nconst sayHiFromFunction = (fn : Function)  => {\n   fn('Fede');\n}\n\nsayHiFromFunction((name : string) => {\n   console.log(`Hola ${name}`)\n})\n\nsayHiFromFunction(() => {\n   return Math.random()\n})\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"El tipo de dato Function es el equivalente a Any en las funciones y se debe evitar."),(0,i.yg)("li",{parentName:"ul"},"El m\xe9todo sayHiFromFunction est\xe1 pidiendo cualquier tipo de funci\xf3n.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Validar callback:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"const sayHiFromFunction = (fn : (name: string) => string)  => {\n   fn('Fede');\n}\n\nsayHiFromFunction((name : string) => {\n   console.log(`Hola ${name}`);\n   return name;\n})\n\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Estamos especificando que el callback tiene un par\xe1metro String y devuelve un valor String."),(0,i.yg)("li",{parentName:"ul"},"Sintaxis: (parametro : tipodeDato , ....) => tipo_de_dato_de_retorno")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"const sayHiFromFunction = (fn : (name: string) => void)  => {\n   fn('Fede');\n}\n\nsayHiFromFunction((name : string) => {\n   console.log(`Hola ${name}`);\n\n})\n\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Estamos especificando que el callback tiene un par\xe1metro String y no devuelve nada (void).")))),(0,i.yg)("h4",{id:"funciones-flechas"},"Funciones flechas"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"// Opcion 1\nconst sumar = (a:number , b:number) : number => {\n   return a + b\n}\n\n// Opcion 2\nconst restar: (a:number , b:number) => number = (a,b) => {\n   return a-b\n}\n\n\n")),(0,i.yg)("h3",{id:"array"},"Array"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Por defecto un array vacio es de tipo never y por lo tanto no puede tener ning\xfan valor adentro."),(0,i.yg)("li",{parentName:"ul"},"Como especificar un Array:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"const languages: string[] = []\nlanguages.push('Javascript');\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Para definir un tipo array: TipoDeDato[]"),(0,i.yg)("li",{parentName:"ul"},"Todos los elementos del array van a corresponder a TipoDeDato, en caso contrario va Typescript va a generar un error.\nEn este caso es un array de String.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Otra forma de hacer lo mismo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nlet myList : Array<string> = ['Pedro' , 'Juan']\nconsole.log(myList)\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},'Dentro de los "',"<",'>" se especifica el tipo de dato de los elementos del array.'),(0,i.yg)("li",{parentName:"ul"},"Se utilizan ",(0,i.yg)("a",{parentName:"li",href:"/documentacion/docs/Typescript/typescript2#generico"},"par\xe1metros gen\xe9ricos"),".")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Para especificar un array que pueda contener string o number:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nconst languages: (string| number)[] = []\nlanguages.push('Javascript');\nlanguages.push(2);\n\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Usamos ",(0,i.yg)("a",{parentName:"li",href:"#union-types"},"uni\xf3n types")," entre par\xe9ntesis.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Ejemplo de un array de objetos:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type HeroId = `${string}-${string}-${string}-${string}-${string}`;\n\ntype HeroPowerScale = 'local' | 'planetary' | 'galactic' | 'universal' | 'omnipresent'\n\ntype HeroBasicInfo = {\n   name: string;\n   age: number;\n}\ntype HeroProperties = {\n  readonly id?: HeroId;\n\n  isActive?: boolean;\n  powerScale?: HeroPowerScale\n};\ntype Hero = HeroBasicInfo & HeroProperties\n\nconst  heros: Hero[] = []\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Muchos conceptos que se aplicaron en este c\xf3digo se ver\xe1n m\xe1s adelante.")))),(0,i.yg)("h3",{id:"matrices-y-tupla"},"Matrices y Tupla"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Como especificar un array bidimensional:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type CellValue = 'X' | '0' | ''\ntype GameBoard = [\n   [CellValue , CellValue , CellValue] ,\n   [CellValue , CellValue , CellValue] ,\n   [CellValue , CellValue , CellValue] ,\n]\n\nconst gameBoard: GameBoard = [\n   [\"X\" , \"0\" , \"X\"] , [\"0\" , \"X\" , \"0\"] , ['X' , '' , '0']\n]\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Muchos conceptos que se aplicaron en este c\xf3digo se ver\xe1n m\xe1s adelante.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tuplas")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"El type de GameBoard se llama tupla."),(0,i.yg)("li",{parentName:"ul"},"Una tupla es un array con un l\xedmite fijado de longitud."),(0,i.yg)("li",{parentName:"ul"},"Basicamente en typescript un array que tiene una cantidad de posiciones fijas, es una tupla.")))),(0,i.yg)("h3",{id:"set"},"Set"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"let mySet:Set<string> = new Set(['Pedro' , 'Juan']);\n// mySet.add(36) Error debe ser string\nmySet.add('36') \nconsole.log(mySet)\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},'Adentro de  "',"<",'>" especificamos el tipo de dato de los valores del set.')))),(0,i.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},'Si no funciona ejecuta el siguiente comando para descargar los tipos: "npm install -D @types/node".'),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://stackoverflow.com/questions/53936918/how-can-i-fix-compile-time-errors-even-using-compiler-options-as-target-es6-and"},"Link del problema"))))),(0,i.yg)("h3",{id:"map"},"Map"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'let myMap:Map<string , number> = new Map([["Juan" , 50]]);\nmyMap.set("Pedro" , 35)\nconsole.log(myMap)\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"En el ","<","X,B> especificamos el tipo de dato de la clave (es la X) y el tipo de dato del valor (es la B).")))),(0,i.yg)("h3",{id:"clase"},"Clase"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"class MyClass {\n    name: string \n    age: number\n\n    constructor(name:string , age:number) {\n        this.name = name;\n        this.age = age;\n    }\n}\n\nlet myClass : MyClass = new MyClass('Pedro' , 5);\nconsole.log(myClass)\nconsole.log(myClass.name)\n\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos de las propiedades se especifican al comienzo de la clase, incluso se puede asignar valores por defecto en esta parte del c\xf3digo."),(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos de los m\xe9todos se hacen como cualquier otra funci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Con el nombre de la clase podemos especificar el tipo de dato de un objeto.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Otro ejemplo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nclass Avanger {\n    readonly name: string\n    powerScore: number\n    // Le especificamos el tipo de dato y el valor por defecto\n    wonBattles: number = 0\n\n    constructor(name: string , powerScore:number) {\n        this.name = name;\n        this.powerScore = powerScore\n    }\n\n    get fullName() {\n        return `${this.name}, de poder ${this.powerScore}`\n    }\n\n    set power ( newPower : number) {\n        if (newPower <= 100) {\n            this.powerScore = newPower\n        } else {\n            throw new Error('Power score cann\xb4t be more than 100')\n        }\n    }\n}\n\n")),(0,i.yg)("h4",{id:"propiedades-privadas"},"Propiedades privadas"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con javascript seria de esta manera:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"    #powerScore: number\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Con Typescript para que no funcione en tiempo de ejecuci\xf3n, pero si te detecte los errores en visual studio code, solo cambiamos el signo \u201c#\u201d por la palabra clave private:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"    private powerScore: number\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Como en javascript no existe la palabra clave \u201cprivate\u201d al compilarlo el campo sigue siendo p\xfablico."),(0,i.yg)("li",{parentName:"ul"},"Solo sirve para hacer comprobaciones en visual studio code (que se denomina forma est\xe1tica).")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Lo pod\xe9s combinar con readonly:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"private readonly wonBattles: number = 0\n")),(0,i.yg)("h4",{id:"propiedades-publicas"},"Propiedades publicas"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Se hace con la palabra clave \u201cpublic\u201d, es el valor por defecto si no se especifica nada."),(0,i.yg)("li",{parentName:"ul"},"Las siguientes dos propiedades son publicas:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"    name: string\n    public powerScore: number\n\n")),(0,i.yg)("h4",{id:"propiedades-protected"},"Propiedades protected"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Protected: s\xf3lo puede ser utilizada en la clase en la que est\xe1 definido o en una subclase. "),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/C--/POO/#protected"},"Funciona igual que en C#"),".")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"      protected age: number = 0\n\n")),(0,i.yg)("h4",{id:"interfaces-con-clase"},"Interfaces con clase"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},' \ninterface Avenger {\n    name: string;\n    powerScore: number;\n    wonBattles: number;\n    age: number;\n    battle: () => void\n  }\n  \n  class Avanger implements Avenger {\n    name: string;\n    public powerScore: number;\n    readonly wonBattles: number = 0;\n    age: number = 0;\n    constructor(name: string, powerScore: number) {\n      this.name = name;\n      this.powerScore = powerScore;\n    } \n   battle() : void {\n      console.log(\'Esta peleando\');\n   }\n  \n  \n  \n    get fullName() {\n      return `${this.name}, de poder ${this.powerScore}`;\n    }\n  \n    set power(newPower: number) {\n      if (newPower <= 100) {\n        this.powerScore = newPower;\n      } else {\n        throw new Error("Power score cann\xb4t be more than 100");\n      }\n    }\n  }\n  \n  const avanger = new Avanger("Spidey", 80);\n  avanger.powerScore;\n  avanger.battle();\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/C--/POO#interfaces"},"Ac\xe1 funcionan como las t\xedpicas interfaces de POO y su implementaci\xf3n"),"."),(0,i.yg)("li",{parentName:"ul"},"Con la palabra \u201cimplements\u201d implementas la interface en la clase, \xf3sea toda la estructura que definiste en la interface la debe tener la clase, en caso contrario Typescript te tira un error.")))),(0,i.yg)("h3",{id:"enum"},"Enum"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Es para una colecci\xf3n de datos de solo lectura finita (m\xe1ximo 20 es lo aconsejable)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/C--/POO2#enumeraci%C3%B3n"},"Enum en C#"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},' \n\nenum MyEnum  {\n    JAVASCRIPT = "javascript" ,\n    TYPESCRIPT = "typescript" ,\n    JAVA = "java"\n}\n\nconst myEnum = MyEnum.JAVASCRIPT;\nconsole.log(myEnum)\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"En Typescript se puede crear un ENUM."),(0,i.yg)("li",{parentName:"ul"},"En Javascript es un objeto const .")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Para evitar compilar demasiado c\xf3digo podemos usar const en el enum:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},' \n\nconst enum MyEnum  {\n    JAVASCRIPT = "javascript" ,\n    TYPESCRIPT = "typescript" ,\n    JAVA = "java"\n}\n\nconst myEnum = MyEnum.JAVASCRIPT;\nconsole.log(myEnum)\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Compila el c\xf3digo anterior y este."),(0,i.yg)("li",{parentName:"ul"},"Vas a ver que en el anterior se crea un objeto con los valores y se usa."),(0,i.yg)("li",{parentName:"ul"},"En el nuevo esto se evita y se trabaja como si todo fuera un String evitando compilar c\xf3digo de m\xe1s.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\xbfCual usar?")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Generalmente se usa  const."),(0,i.yg)("li",{parentName:"ul"},"Pero si el ENUM lo va a consumir alguien de afuera que no sabe nada de tu c\xf3digo, pues se recomienda no usar const."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/enums.html"},"M\xe1s informaci\xf3n"))))),(0,i.yg)("h2",{id:"especificar-tipo-de-dato-1"},"Especificar tipo de dato"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos no se compilan en el sentido que no se incluyen en el c\xf3digo Javascript resultante."),(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos en TypeScript se usan para realizar verificaciones y garantizar que el c\xf3digo es correcto en t\xe9rminos de tipos durante la compilaci\xf3n. Ayudan a detectar errores y proporcionar una mejor experiencia de desarrollo con caracter\xedsticas como autocompletado y documentaci\xf3n en el editor."),(0,i.yg)("li",{parentName:"ul"},"Al compilar el c\xf3digo TypeScript usando el compilador (tsc), el compilador transforma el c\xf3digo TypeScript en c\xf3digo JavaScript. Durante este proceso, los tipos se eliminan y solo el c\xf3digo JavaScript resultante se mantiene. Esto se debe a que JavaScript no tiene un sistema de tipos integrado; los tipos en TypeScript son solo para el desarrollo.")),(0,i.yg)("h2",{id:"aserciones-de-tipo"},"Aserciones de tipo"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Hay algunos m\xe9todos de javascript que devuelven un elemento especifico en base al par\xe1metro, \xf3sea no siempre devuelven lo mismo y esto Typescript lo suele manejar con un tipo de dato general que lo implementan todo, pero esto hace que no podamos usar los m\xe9todos espec\xedficos de X tipo de dato."),(0,i.yg)("li",{parentName:"ul"},"Typescript no puede predecir el tipo de dato porque no funciona en tiempo de ejecuci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Ejemplo: document.getElementByID puede devolver un elemento input, un elemento canva, un elemento button , todos tienen m\xe9todos diferentes para poder  manipular la etiqueta HTML pero para Typescript todos devuelven un HtmlElement."),(0,i.yg)("li",{parentName:"ul"},"Con HtmlElement no podemos acceder a los m\xe9todos que solo tiene un input/canva/button.")),(0,i.yg)("h4",{id:"as"},"As"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Podemos usar la palabra clave \u201cas\u201d para decirle a typescript que trate a una variable como X tipo de dato."),(0,i.yg)("li",{parentName:"ul"},"Sintaxis: as TipoDeDato")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"// Estamos obligando a tratar a canvas como un tipo de dato HTMLCanvasElement\nconst canvas = document.getElementById('canva') as HTMLCanvasElement\n\n// Gracias al as tenemos acceso al metodo getContext() que es propio de un elemento canva\ncanvas.getContext('2d');\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"danger")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Con esto le estamos obligando a Typescript a tratar a la variable canvas como X tipo de dato (en este caso HTMLCanvasElement)."),(0,i.yg)("li",{parentName:"ul"},"B\xe1sicamente le estamos diciendo a Typescript que confi\xe9 en nosotros, lo cual no es muy bueno ya que somos humanos y es normal tener errores."),(0,i.yg)("li",{parentName:"ul"},"No valida si es el tipo de dato que especificamos, si seleccionamos un span se ejecuta igual, por ejemplo. Esto sucede porque typescript no se ejecuta en tiempo de ejecuci\xf3n.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Las buenas pr\xe1cticas sugieren que la aserci\xf3n se haga en la comprobaci\xf3n:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"const canvas = document.getElementById('canva')\n\nif (canvas != null) {\n   const xtx = (canvas as HTMLCanvasElement).getContext('2d')\n}\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Le estamos diciendo a Typescript que trate a la variable canvas como HTMLCanvasElement entre par\xe9ntesis."),(0,i.yg)("li",{parentName:"ul"},"En tiempo de ejecuci\xf3n no valida si es HTMLCanvasElement y por lo tanto no hay validaci\xf3n sobre el tipo de dato."),(0,i.yg)("li",{parentName:"ul"},"Si en lugar de canva seleccionamos un elemento span, como no hay validaci\xf3n sobre el tipo de dato se rompe todo.")))),(0,i.yg)("h4",{id:"instanceof"},"Instanceof"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Tambi\xe9n Typescript puede detectar un tipo de dato con una comprobaci\xf3n de Instanceof")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\nconst canvas = document.getElementById('canva')\n\nif (canvas != null && canvas instanceof HTMLCanvasElement) {\n   // Aca ya se trata como tipo HTMLCanvasElement\n   const xtx = canvas.getContext('2d');\n}\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Con este c\xf3digo valida en tiempo de ejecuci\xf3n si es HTMLCanvasElement."),(0,i.yg)("li",{parentName:"ul"},"Se suele llamar inferencia, ya que Typescript se da cuenta dentro del if que canva es un tipo de dato  HTMLCanvasElement gracias a Instanceof."),(0,i.yg)("li",{parentName:"ul"},"De las tres formas que explicamos, la de usar Instanceof es la mejor ya que Javascript valida si es ese tipo de dato y Typescript lo trata como a ese tipo de dato si pasa la validaci\xf3n, usamos lo mejor de los dos.")))),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Typeof vs instanceof")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Typeof es para tipos de datos basicos."),(0,i.yg)("li",{parentName:"ul"},"Instanceof es para instancias.")))),(0,i.yg)("h4",{id:"aserciones-de-fetching"},"Aserciones de Fetching"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Configuraci\xf3n de typescript para permitir usar m\xf3dulos:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    /* Visit https://aka.ms/tsconfig to read more about this file */\n\n    /* Projects */\n    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */\n    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */\n    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */\n    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */\n    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */\n    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */\n\n    /* Language and Environment */\n    "target": "es2017",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n    // "jsx": "preserve",                                /* Specify what JSX code is generated. */\n    // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */\n    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */\n    // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. \'React.createElement\' or \'h\'. */\n    // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. \'React.Fragment\' or \'Fragment\'. */\n    // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using \'jsx: react-jsx*\'. */\n    // "reactNamespace": "",                             /* Specify the object invoked for \'createElement\'. This only applies when targeting \'react\' JSX emit. */\n    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */\n    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */\n    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */\n\n    /* Modules */\n    "module": "esnext",                                /* Specify what module code is generated. */\n    // "rootDir": "./",                                  /* Specify the root folder within your source files. */\n    // "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */\n    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */\n    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */\n    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */\n    // "typeRoots": [],                                  /* Specify multiple folders that act like \'./node_modules/@types\'. */\n    // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */\n    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */\n    // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */\n    // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. Requires \'--moduleResolution bundler\' and either \'--noEmit\' or \'--emitDeclarationOnly\' to be set. */\n    // "resolvePackageJsonExports": true,                /* Use the package.json \'exports\' field when resolving package imports. */\n    // "resolvePackageJsonImports": true,                /* Use the package.json \'imports\' field when resolving imports. */\n    // "customConditions": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */\n    // "resolveJsonModule": true,                        /* Enable importing .json files. */\n    // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension, provided a declaration file is present. */\n    // "noResolve": true,                                /* Disallow \'import\'s, \'require\'s or \'<reference>\'s from expanding the number of files TypeScript should add to a project. */\n\n    /* JavaScript Support */\n    // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the \'checkJS\' option to get errors from these files. */\n    // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */\n    // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from \'node_modules\'. Only applicable with \'allowJs\'. */\n\n    /* Emit */\n    // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\n    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */\n    // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */\n    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */\n    // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */\n    // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If \'declaration\' is true, also designates a file that bundles all .d.ts output. */\n    // "outDir": "./",                                   /* Specify an output folder for all emitted files. */\n    // "removeComments": true,                           /* Disable emitting comments. */\n    // "noEmit": true,                                   /* Disable emitting files from a compilation. */\n    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */\n    // "importsNotUsedAsValues": "remove",               /* Specify emit/checking behavior for imports that are only used for types. */\n    // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */\n    // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */\n    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */\n    // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */\n    // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */\n    // "newLine": "crlf",                                /* Set the newline character for emitting files. */\n    // "stripInternal": true,                            /* Disable emitting declarations that have \'@internal\' in their JSDoc comments. */\n    // "noEmitHelpers": true,                            /* Disable generating custom helper functions like \'__extends\' in compiled output. */\n    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */\n    // "preserveConstEnums": true,                       /* Disable erasing \'const enum\' declarations in generated code. */\n    // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */\n    // "preserveValueImports": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */\n\n    /* Interop Constraints */\n    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */\n    // "verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file\'s format based on the \'module\' setting. */\n    // "allowSyntheticDefaultImports": true,             /* Allow \'import x from y\' when a module doesn\'t have a default export. */\n    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \'allowSyntheticDefaultImports\' for type compatibility. */\n    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */\n    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */\n\n    /* Type Checking */\n    "strict": true,                                      /* Enable all strict type-checking options. */\n    // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied \'any\' type. */\n    // "strictNullChecks": true,                         /* When type checking, take into account \'null\' and \'undefined\'. */\n    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n    // "strictBindCallApply": true,                      /* Check that the arguments for \'bind\', \'call\', and \'apply\' methods match the original function. */\n    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */\n    // "noImplicitThis": true,                           /* Enable error reporting when \'this\' is given the type \'any\'. */\n    // "useUnknownInCatchVariables": true,               /* Default catch clause variables as \'unknown\' instead of \'any\'. */\n    // "alwaysStrict": true,                             /* Ensure \'use strict\' is always emitted. */\n    // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren\'t read. */\n    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn\'t read. */\n    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding \'undefined\'. */\n    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\n    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */\n    // "noUncheckedIndexedAccess": true,                 /* Add \'undefined\' to a type when accessed using an index. */\n    // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\n    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */\n    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */\n    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */\n\n    /* Completeness */\n    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */\n    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */\n  }\n}\n\n')),(0,i.yg)("h5",{id:"modulo"},"Modulo"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Las expresiones \u201cawait\u201d solo se permiten en el nivel superior(global) de un archivo cuando el archivo es un m\xf3dulo."),(0,i.yg)("li",{parentName:"ul"},"Para convertirlo en un m\xf3dulo, se usa la extensi\xf3n mts, con esto de forma \u201cnativa\u201d no podras usar import/export aunque existen un mont\xf3n de empaquetadores que esto lo hacen de forma autom\xe1tica y  ni cuentas te das."),(0,i.yg)("li",{parentName:"ul"},"El archivo pasar\xeda a llamarse script.mts entonces.")),(0,i.yg)("h5",{id:"truco-para-tipar-la-respuesta-de-una-api"},"Truco para tipar la respuesta de una API:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Haces una petici\xf3n y copias la respuesta."),(0,i.yg)("li",{parentName:"ol"},"Abrimos una herramienta como ",(0,i.yg)("a",{parentName:"li",href:"https://quicktype.io/"},"quicktype"),"."),(0,i.yg)("li",{parentName:"ol"},"Pegas la respuesta en quicktype, cambias el nombre y seleccionas el lenguaje (Typescript en este caso), configuras las opciones que quieras y listo, se te genera solo el tipado para la API."),(0,i.yg)("li",{parentName:"ol"},"\xa1El tipado lo pegas en el c\xf3digo que estamos trabajando y ya tenemos todo!")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Hay extensiones de visual studio code que tambi\xe9n te genera el tipado.")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"C\xf3digo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'export type GithubResponse = {\n    total_count:        number;\n    incomplete_results: boolean;\n    items:              Item[];\n}\n\nexport type Item = {\n    id:                          number;\n    node_id:                     string;\n    name:                        string;\n    full_name:                   string;\n    private:                     boolean;\n    owner:                       Owner;\n    html_url:                    string;\n    description:                 null | string;\n    fork:                        boolean;\n    url:                         string;\n    forks_url:                   string;\n    keys_url:                    string;\n    collaborators_url:           string;\n    teams_url:                   string;\n    hooks_url:                   string;\n    issue_events_url:            string;\n    events_url:                  string;\n    assignees_url:               string;\n    branches_url:                string;\n    tags_url:                    string;\n    blobs_url:                   string;\n    git_tags_url:                string;\n    git_refs_url:                string;\n    trees_url:                   string;\n    statuses_url:                string;\n    languages_url:               string;\n    stargazers_url:              string;\n    contributors_url:            string;\n    subscribers_url:             string;\n    subscription_url:            string;\n    commits_url:                 string;\n    git_commits_url:             string;\n    comments_url:                string;\n    issue_comment_url:           string;\n    contents_url:                string;\n    compare_url:                 string;\n    merges_url:                  string;\n    archive_url:                 string;\n    downloads_url:               string;\n    issues_url:                  string;\n    pulls_url:                   string;\n    milestones_url:              string;\n    notifications_url:           string;\n    labels_url:                  string;\n    releases_url:                string;\n    deployments_url:             string;\n    created_at:                  Date;\n    updated_at:                  Date;\n    pushed_at:                   Date;\n    git_url:                     string;\n    ssh_url:                     string;\n    clone_url:                   string;\n    svn_url:                     string;\n    homepage:                    null | string;\n    size:                        number;\n    stargazers_count:            number;\n    watchers_count:              number;\n    language:                    Language | null;\n    has_issues:                  boolean;\n    has_projects:                boolean;\n    has_downloads:               boolean;\n    has_wiki:                    boolean;\n    has_pages:                   boolean;\n    has_discussions:             boolean;\n    forks_count:                 number;\n    mirror_url:                  null;\n    archived:                    boolean;\n    disabled:                    boolean;\n    open_issues_count:           number;\n    license:                     License | null;\n    allow_forking:               boolean;\n    is_template:                 boolean;\n    web_commit_signoff_required: boolean;\n    topics:                      string[];\n    visibility:                  Visibility;\n    forks:                       number;\n    open_issues:                 number;\n    watchers:                    number;\n    default_branch:              DefaultBranch;\n    score:                       number;\n}\n\nexport enum DefaultBranch {\n    Dev = "dev",\n    Main = "main",\n    Master = "master",\n}\n\nexport enum Language {\n    CSS = "CSS",\n    HTML = "HTML",\n    JavaScript = "JavaScript",\n    TypeScript = "TypeScript",\n}\n\nexport type License = {\n    key:     string;\n    name:    string;\n    spdx_id: string;\n    url:     null | string;\n    node_id: string;\n}\n\nexport type Owner = {\n    login:               string;\n    id:                  number;\n    node_id:             string;\n    avatar_url:          string;\n    gravatar_id:         string;\n    url:                 string;\n    html_url:            string;\n    followers_url:       string;\n    following_url:       string;\n    gists_url:           string;\n    starred_url:         string;\n    subscriptions_url:   string;\n    organizations_url:   string;\n    repos_url:           string;\n    events_url:          string;\n    received_events_url: string;\n    type:                Type;\n    site_admin:          boolean;\n}\n\nexport enum Type {\n    Organization = "Organization",\n    User = "User",\n}\n\nexport enum Visibility {\n    Public = "public",\n}\n\n\nconst API_URL = \'https://api.github.com/search/repositories?q=javascript\'\n\nconst response = await fetch(API_URL)\n\nif (!response.ok) {\n    throw new Error(\'Request failed\');\n}\n\ntype APIResponse = {\n    items: object[]\n}\nconst data = await response.json() as  GithubResponse;\n data.items.map(repo => {\n    return {\n        name : repo.name ,\n        id: repo.id ,\n        url: repo.url\n    }\n})\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Aunque Typescript no se queje, no significa que esto sea seguro."),(0,i.yg)("li",{parentName:"ul"},"Capaz que la API se modifique y el autocompletado te sugiera propiedades que ya no se usan m\xe1s o ya no existen."),(0,i.yg)("li",{parentName:"ul"},"En quicktype hay una opcion llamada Typescript zod que te genera un tipado que se ejecuta en tiempo de ejecuci\xf3n y utiliza la biblioteca zod para las validaciones de tipo.")))),(0,i.yg)("h2",{id:"corregir-errores"},"Corregir errores"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Para que no aparezcan errores, se debe crear un archivo de configuraci\xf3n."),(0,i.yg)("li",{parentName:"ul"},"Entonces creamos un archivo llamado tsconfig.json"),(0,i.yg)("li",{parentName:"ul"},"Dentro de este, insertamos el siguiente contenido:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "compilerOptions": {\n      /* Visit https://aka.ms/tsconfig to read more about this file */\n  \n      /* Projects */\n      // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */\n      // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */\n      // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */\n      // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */\n      // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */\n      // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */\n  \n      /* Language and Environment */\n      "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n      // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n      // "jsx": "preserve",                                /* Specify what JSX code is generated. */\n      // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */\n      // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */\n      // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. \'React.createElement\' or \'h\'. */\n      // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. \'React.Fragment\' or \'Fragment\'. */\n      // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using \'jsx: react-jsx*\'. */\n      // "reactNamespace": "",                             /* Specify the object invoked for \'createElement\'. This only applies when targeting \'react\' JSX emit. */\n      // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */\n      // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */\n      // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */\n  \n      /* Modules */\n      "module": "commonjs",                                /* Specify what module code is generated. */\n      // "rootDir": "./",                                  /* Specify the root folder within your source files. */\n      // "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */\n      // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */\n      // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */\n      // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */\n      // "typeRoots": [],                                  /* Specify multiple folders that act like \'./node_modules/@types\'. */\n      // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */\n      // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */\n      // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */\n      // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. Requires \'--moduleResolution bundler\' and either \'--noEmit\' or \'--emitDeclarationOnly\' to be set. */\n      // "resolvePackageJsonExports": true,                /* Use the package.json \'exports\' field when resolving package imports. */\n      // "resolvePackageJsonImports": true,                /* Use the package.json \'imports\' field when resolving imports. */\n      // "customConditions": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */\n      // "resolveJsonModule": true,                        /* Enable importing .json files. */\n      // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension, provided a declaration file is present. */\n      // "noResolve": true,                                /* Disallow \'import\'s, \'require\'s or \'<reference>\'s from expanding the number of files TypeScript should add to a project. */\n  \n      /* JavaScript Support */\n      // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the \'checkJS\' option to get errors from these files. */\n      // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */\n      // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from \'node_modules\'. Only applicable with \'allowJs\'. */\n  \n      /* Emit */\n      // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\n      // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */\n      // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */\n      // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */\n      // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */\n      // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If \'declaration\' is true, also designates a file that bundles all .d.ts output. */\n      // "outDir": "./",                                   /* Specify an output folder for all emitted files. */\n      // "removeComments": true,                           /* Disable emitting comments. */\n      // "noEmit": true,                                   /* Disable emitting files from a compilation. */\n      // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */\n      // "importsNotUsedAsValues": "remove",               /* Specify emit/checking behavior for imports that are only used for types. */\n      // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */\n      // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */\n      // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */\n      // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */\n      // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */\n      // "newLine": "crlf",                                /* Set the newline character for emitting files. */\n      // "stripInternal": true,                            /* Disable emitting declarations that have \'@internal\' in their JSDoc comments. */\n      // "noEmitHelpers": true,                            /* Disable generating custom helper functions like \'__extends\' in compiled output. */\n      // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */\n      // "preserveConstEnums": true,                       /* Disable erasing \'const enum\' declarations in generated code. */\n      // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */\n      // "preserveValueImports": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */\n  \n      /* Interop Constraints */\n      // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */\n      // "verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file\'s format based on the \'module\' setting. */\n      // "allowSyntheticDefaultImports": true,             /* Allow \'import x from y\' when a module doesn\'t have a default export. */\n      "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \'allowSyntheticDefaultImports\' for type compatibility. */\n      // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */\n      "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */\n  \n      /* Type Checking */\n      "strict": true,                                      /* Enable all strict type-checking options. */\n      // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied \'any\' type. */\n      // "strictNullChecks": true,                         /* When type checking, take into account \'null\' and \'undefined\'. */\n      // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n      // "strictBindCallApply": true,                      /* Check that the arguments for \'bind\', \'call\', and \'apply\' methods match the original function. */\n      // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */\n      // "noImplicitThis": true,                           /* Enable error reporting when \'this\' is given the type \'any\'. */\n      // "useUnknownInCatchVariables": true,               /* Default catch clause variables as \'unknown\' instead of \'any\'. */\n      // "alwaysStrict": true,                             /* Ensure \'use strict\' is always emitted. */\n      // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren\'t read. */\n      // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn\'t read. */\n      // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding \'undefined\'. */\n      // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\n      // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */\n      // "noUncheckedIndexedAccess": true,                 /* Add \'undefined\' to a type when accessed using an index. */\n      // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\n      // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */\n      // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */\n      // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */\n  \n      /* Completeness */\n      // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */\n      "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */\n    }\n  }\n\n\n')),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Este archivo tambi\xe9n lo pod\xe9s generar al ejecutar el comando \u201cnpx tsc \u2013-init\u201d")))),(0,i.yg)("h2",{id:"inferencia"},"Inferencia"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"La inferencia de tipos en TypeScript es una caracter\xedstica que permite al lenguaje deducir autom\xe1ticamente los tipos de las variables en funci\xf3n del valor asignado a \xe9stas o del contexto en el que se utilizan. De esta manera, TypeScript puede ofrecer comprobaciones de tipos en tiempo de compilaci\xf3n y ayudar a detectar errores de programaci\xf3n antes de que el c\xf3digo se ejecute."),(0,i.yg)("li",{parentName:"ul"},"La inferencia de tipos puede ser muy \xfatil para escribir c\xf3digo m\xe1s conciso y legible, ya que no es necesario especificar expl\xedcitamente el tipo de cada variable en todas las declaraciones. Sin embargo, tambi\xe9n es importante tener en cuenta que la inferencia de tipos no siempre es perfecta y puede haber casos en los que sea necesario proporcionar tipos expl\xedcitamente para evitar ambig\xfcedades o errores."),(0,i.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"let x = 10;\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"En este ejemplo, TypeScript infiere que el tipo de la variable x es number porque se le asigna el valor 10.")))),(0,i.yg)("h2",{id:"type"},"Type"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"En lugar de estar declarando los tipos de datos todo el rato, Typescript permite crear tipos de datos y asignarles un nombre para poder reutilizarlos, por ejemplo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type UserId = number;\n\nconst id : UserId = 123;\n\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\xbfY esto para qu\xe9 vale? Pues para que el c\xf3digo no sea tan abstracto. No es lo mismo pasar a una funci\xf3n un number que un userId, aunque ambos valores sean de tipo number, a nivel conceptual es distinto, le da un significado y el c\xf3digo se entiende mejor."),(0,i.yg)("li",{parentName:"ul"},"Adem\xe1s, si los creas como tipos y los reutilizas, si en un futuro decides cambiar el tipo userId a string, te va a resultar m\xe1s sencillo de cambiar el c\xf3digo, ya que puedes buscar en el c\xf3digo todas las referencias a ese tipo y cambiar lo que necesites."),(0,i.yg)("li",{parentName:"ul"},"Esto tambi\xe9n se puede aplicar a tipos m\xe1s complejos como los objetos, muy \xfatil tambi\xe9n:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'type Car = { \n  brand: string,\n  model: string,\n  year: number\n};\n\nconst focusCar: Car = { brand: "Ford", model: "Focus", year: 2008 };\n\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Lo bueno de esto es que da igual los tipos que crees, Typescript los borrar\xe1 del bundle generado, por lo que no ocupar\xe1n espacio, te ayudan solo en el proceso de desarrollo (recuerda que es la misi\xf3n de Typescript, no funciona en tiempo de ejecuci\xf3n).")),(0,i.yg)("h4",{id:"ejemplos"},"Ejemplos"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"// El nombre de los tipos deben usar Pascal case (es como camelCase solo que la primera letra tambien es con May\xfascula)\ntype Hero = {\n   name: string ,\n   age: number\n}\n\nlet hero : Hero = {\n   name: \"Thor\" ,\n   age: 1500\n}\n\nfunction createHero(name:string , age:number) : Hero {\n   return {name,age}\n}\n\nconst thor = createHero('Thor' , 1500);\n\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"let hero : Hero = {\n   name: \"Thor\" ,\n   age: 1500\n}\n\nfunction createHero(hero : Hero) : Hero {\n   const {name , age} = hero\n   return {name,age}\n}\n\nconst thor = createHero({name:'Thor' , age:1500});\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Si a\xf1ades una propiedad que no existe en un objeto de tipo Hero te va a tirar un error de tipos de datos ya que el objeto dejar\xeda de ser \u201cHero\u201d.")))),(0,i.yg)("h4",{id:"propiedad-opcional"},"Propiedad opcional"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Si usamos el signo de pregunta \u201c?\u201d al final del nombre de una propiedad, es porque esta es opcional:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'type Hero = {\n   name: string ,\n   age: number ,\n   isActive? : boolean\n}\n\nlet hero : Hero = {\n   name: "Thor" ,\n   age: 1500,\n\n}\n\n\n')),(0,i.yg)("h4",{id:"solo-lectura"},"Solo lectura"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Podemos usar la palabra \u201creadonly\u201d para que la propiedad solo sea de lectura."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/C--/guiaC3#readonly"},"Readonly en C#"),".")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"\ntype Hero = {\n   readonly id?: number\n   name: string ,\n   age: number ,\n   isActive? : boolean\n}\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"danger")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Readonly no funciona en producci\xf3n(ejecuci\xf3n), por lo tanto, no hace que el objeto sea inmutable, solamente sirve para generar errores de tipeo en visual studio code."),(0,i.yg)("li",{parentName:"ul"},"Para hacerlo realmente inmutable se debe utilizar el m\xe9todo ",(0,i.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze"},"freeze()")," de Javascript ")))),(0,i.yg)("h4",{id:"template-union-types"},"Template union types"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Se pueden crear tipos de datos con plantillas literales (interpolaci\xf3n):")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type HeroId = `${string}-${string}-${string}-${string}-${string}`;\n\ntype Hero = {\n  readonly id?: HeroId;\n  name: string;\n  age: number;\n  isActive?: boolean;\n};\n\n\nfunction createHero(hero: Hero): Hero {\n  const { name, age } = hero;\n  return { id: crypto.randomUUID(), name, age };\n}\n\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"En la interpolaci\xf3n como variables podemos usar los tipos de datos para crear otro tipo de dato m\xe1s complejo (este puede contener String, number, boolean, etc)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html"},"M\xe1s informaci\xf3n"))))),(0,i.yg)("h2",{id:"union-types"},"Union types"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Es un tipo formado a partir de dos o m\xe1s tipos de datos diferentes, representa un valor que puede ser cualquiera de esos tipos. "),(0,i.yg)("li",{parentName:"ul"},"Es f\xe1cil proporcionar un valor que coincida con un tipo de uni\xf3n; simplemente proporcione un tipo que coincida con cualquiera de los tipos de datos especificados. "),(0,i.yg)("li",{parentName:"ul"},"TypeScript solo permitir\xe1 una operaci\xf3n si es v\xe1lida para todos los tipos de datos especificado. Por ejemplo, si tiene la uni\xf3n string | number, no puede usar m\xe9todos que solo est\xe9n disponibles en String. Esto igual se podr\xeda solucionar con c\xf3digo javascript (",(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#union-types"},"ver documentaci\xf3n"),")."),(0,i.yg)("li",{parentName:"ul"},"Con el signo \u201c|\u201d creamos las uniones de dos o m\xe1s tipos de datos, entonces un valor de ese tipo de dato debe corresponder con algunos de los tipos que especificamos en la uni\xf3n.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type HeroId = `${string}-${string}-${string}-${string}-${string}`;\n\ntype HeroPowerScale = 'local' | 'planetary' | 'galactic' | 'universal' | 'omnipresent'\nlet ann : number | string\nann = 1\nann = \"Tambien puede ser un string\"\ntype Hero = {\n  readonly id?: HeroId;\n  name: string;\n  age: number;\n  isActive?: boolean;\n  powerScale?: HeroPowerScale\n};\n\n\nfunction createHero(hero: Hero): Hero {\n  const { name, age } = hero;\n  return { id: crypto.randomUUID(), name, age };\n}\n\nconst thor = createHero({ name: \"Thor\", age: 1500 });\nthor.powerScale = 'local'\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Valor como tipo de dato")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"Los tipos de datos que  especificas con Typescript tambi\xe9n pueden ser valores directamente."),(0,i.yg)("li",{parentName:"ul"},"En ese caso solamente aceptar\xeda los valores que especificaste.")))),(0,i.yg)("h2",{id:"intersection-type"},"Intersection Type"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Nos permite construir nuevos tipos a partir de otros tipos."),(0,i.yg)("li",{parentName:"ul"},"Nos permite ampliar alg\xfan tipo de dato."),(0,i.yg)("li",{parentName:"ul"},"Usamos el signo \u201c&\u201d para la intersection y se podr\xeda decir que sirve para \u201cheredar\u201d otro tipo de dato y as\xed poder ampliarlo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type HeroId = `${string}-${string}-${string}-${string}-${string}`;\n\ntype HeroPowerScale = 'local' | 'planetary' | 'galactic' | 'universal' | 'omnipresent'\n\ntype HeroBasicInfo = {\n   name: string;\n   age: number;\n}\ntype HeroProperties = {\n  readonly id?: HeroId;\n\n  isActive?: boolean;\n  powerScale?: HeroPowerScale\n};\n\ntype Hero = HeroBasicInfo & HeroProperties\n\nfunction createHero(input: HeroBasicInfo): Hero {\n  const { name, age } = input;\n  return { id: crypto.randomUUID(), name, age };\n}\n\nconst thor = createHero({ name: \"Thor\", age: 1500 });\nthor.powerScale = 'local'\n\n")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("ul",{parentName:"div"},(0,i.yg)("li",{parentName:"ul"},"El tipo de dato Hero tiene las propiedades de HeroBasicInfo y HeroProperties."),(0,i.yg)("li",{parentName:"ul"},"A diferencia de  Union types, ac\xe1 el valor debe coincidir con todos los tipos que se especific\xf3 y no solamente con uno.")))),(0,i.yg)("h2",{id:"type-indexing"},"Type indexing"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Podes hacer que una propiedad de un objeto sea un tipo de dato."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html"},"Documentaci\xf3n")),(0,i.yg)("li",{parentName:"ul"},"Ejemplo:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type HeroProperties = {\n   isActive : boolean ,\n   address : {\n      planet : string ,\n      city : string\n   }\n}\n\nconst addressHero : HeroProperties['address'] = {\n   city: 'Madrid' ,\n   planet : 'Tierra'\n}\n\n")))}m.isMDXComponent=!0}}]);