"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[982],{5680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>g});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function c(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):c(c({},n),e)),a},u=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return a?t.createElement(g,c(c({ref:n},u),{},{components:a})):t.createElement(g,c({ref:n},u))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[d]="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=a[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1466:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=a(8168),r=(a(6540),a(5680));const o={sidebar_position:8},c="Reducer",i={unversionedId:"React/reducer",id:"React/reducer",title:"Reducer",description:"useReducer",source:"@site/docs/React/reducer.md",sourceDirName:"React",slug:"/React/reducer",permalink:"/documentacion/docs/React/reducer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/reducer.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"React",previous:{title:"Context API",permalink:"/documentacion/docs/React/context"},next:{title:"Redux",permalink:"/documentacion/docs/React/redux"}},s={},l=[{value:"useReducer",id:"usereducer",level:2},{value:"Funcion reductora(reducer)",id:"funcion-reductorareducer",level:3},{value:"Problema",id:"problema",level:2},{value:"Nuevo Proyecto",id:"nuevo-proyecto",level:3},{value:"useState",id:"usestate",level:3},{value:"useReducer",id:"usereducer-1",level:2},{value:"useReducer recibe tres parametros",id:"usereducer-recibe-tres-parametros",level:3},{value:"1- La funcion reductora",id:"1--la-funcion-reductora",level:4},{value:"2- Valor inicial del estado",id:"2--valor-inicial-del-estado",level:4},{value:"3- Funcion que modifica el valor inicial del estado",id:"3--funcion-que-modifica-el-valor-inicial-del-estado",level:4},{value:"dispatch",id:"dispatch",level:2},{value:"Sugerencias",id:"sugerencias",level:2},{value:"A\xf1adimos mas acciones",id:"a\xf1adimos-mas-acciones",level:2},{value:"Creamos las funciones que le env\xedan un objeto de tipo acci\xf3n(action) al reducer",id:"creamos-las-funciones-que-le-env\xedan-un-objeto-de-tipo-acci\xf3naction-al-reducer",level:3},{value:"Tenemos que escribir la l\xf3gica (lo que va a ejecutar) de las acciones que agregamos en el reducer.",id:"tenemos-que-escribir-la-l\xf3gica-lo-que-va-a-ejecutar-de-las-acciones-que-agregamos-en-el-reducer",level:3},{value:"Tercer parametro de useReducer",id:"tercer-parametro-de-usereducer",level:2},{value:"Directorios",id:"directorios",level:2},{value:"carpeta actions",id:"carpeta-actions",level:3},{value:"carpeta reducers",id:"carpeta-reducers",level:3}],u={toc:l},d="wrapper";function p(e){let{components:n,...a}=e;return(0,r.yg)(d,(0,t.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"reducer"},"Reducer"),(0,r.yg)("h2",{id:"usereducer"},"useReducer"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Nos permite manejar el estado."),(0,r.yg)("li",{parentName:"ul"},"Es como useState"),(0,r.yg)("li",{parentName:"ul"},"Es para app medianas/grandes")),(0,r.yg)("h3",{id:"funcion-reductorareducer"},"Funcion reductora(reducer)"),(0,r.yg)("p",null,"Es una funci\xf3n pura  que devuelve el estado de la App."),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Funciones pura")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"Devuelve un valor "),(0,r.yg)("li",{parentName:"ul"},"Toda la l\xf3gica es capaz de resolver un solo procesamiento "),(0,r.yg)("li",{parentName:"ul"},"No afecta cosas externas"),(0,r.yg)("li",{parentName:"ul"},"No genera efectos secundario")))),(0,r.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"No podemos hacer peticiones as\xedncronas ni usar useEffect"))),(0,r.yg)("h2",{id:"problema"},"Problema"),(0,r.yg)("h3",{id:"nuevo-proyecto"},"Nuevo Proyecto"),(0,r.yg)("p",null,"App.jsx"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport Contador from './components/Contador'\n\nconst App = () => {\n  return (\n    <div>\n        <h1>App</h1>\n        <Contador/>\n        \n        </div>\n  )\n}\n\nexport default App\n\n")),(0,r.yg)("p",null,"src/components/Contador.jsx"),(0,r.yg)("h3",{id:"usestate"},"useState"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState } from 'react'\n\nconst Contador = () => {\n    const [count , setCount] = useState(0);\n    const sumar = () => setCount(count + 1);\n    const restar = () => setCount(count - 1);\n  return (\n    <div style={{textAlign: 'center'}}>\n        <h2>Contador</h2>\n       <nav>\n           <button onClick={sumar}>+</button>\n           <button onClick={restar}> -</button>\n       </nav>\n       <h3>{count}</h3>\n    </div>\n  )\n}\n\nexport default Contador\n\n")),(0,r.yg)("h2",{id:"usereducer-1"},"useReducer"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Devuelve el estado y el dispatch(seria como el Set de useState )")),(0,r.yg)("h3",{id:"usereducer-recibe-tres-parametros"},"useReducer recibe tres parametros"),(0,r.yg)("h4",{id:"1--la-funcion-reductora"},"1- La funcion reductora"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Una funci\xf3n reducer recibe el estado y un objeto llamado acci\xf3n(action)"),(0,r.yg)("li",{parentName:"ul"},"Una funcion reducer retorna el estado (puede estar modificado o no)"),(0,r.yg)("li",{parentName:"ul"},"La acci\xf3n(action) es un objeto , sus propiedades son:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"type : tipo de acci\xf3n "),(0,r.yg)("li",{parentName:"ul"},"payload : opcional ,  es para enviar valores/datos que van a ser utilizados por la logica del reducer para  modificar el estado")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"function reducer(state , action) {\n    return state\n}\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"La funci\xf3n reductora va a recibir diferentes acciones."),(0,r.yg)("li",{parentName:"ul"},"En un contador ejemplo: sumar y restar"),(0,r.yg)("li",{parentName:"ul"},"Dependiendo del tipo de acci\xf3n, se ejecuta un c\xf3digo determinado")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'function reducer(state , action) {\n    switch (action.type) {\n        case "INCREMENT":\n            return {contador : state.contador + 1};\n        case "DECREMENT":\n            return {contador : state.contador - 1};\n        default:\n            return state;\n    }\n\n}\n\n')),(0,r.yg)("h4",{id:"2--valor-inicial-del-estado"},"2- Valor inicial del estado"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Se recomienda que sea un objeto ")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const initialState = {contador:0};\n")),(0,r.yg)("h4",{id:"3--funcion-que-modifica-el-valor-inicial-del-estado"},"3- Funcion que modifica el valor inicial del estado"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Es opcional "),(0,r.yg)("li",{parentName:"ul"},"Nos permite modificar el estado inicial"),(0,r.yg)("li",{parentName:"ul"},"Sirve para modificar o transformar el estado inicial."),(0,r.yg)("li",{parentName:"ul"},'Es una funcion que recibe el estado inicial y devuelve el estado "final"')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const init = (initialState) => {\n   return  { contador: initialState.contador +100}\n}\n\n")),(0,r.yg)("h2",{id:"dispatch"},"dispatch"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Sirve para enviarle un objeto action a la funci\xf3n reducer y que esta modifique el estado.")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"recordatorio")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"Un objeto action tiene dos propiedades:"),(0,r.yg)("ul",{parentName:"div"},(0,r.yg)("li",{parentName:"ul"},"type: tipo de acci\xf3n(action)"),(0,r.yg)("li",{parentName:"ul"},"payload: opcional , son los datos que podemos enviarle a la funcion reducer")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"En base al tipo de acci\xf3n que le mandamos, la funcion reducer ejecuta un c\xf3digo determinado.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"    const sumar = () => dispatch({type:'INCREMENT'})\n    const restar = () =>  dispatch({type:'DECREMENT'})\n\n")),(0,r.yg)("p",null,"Contador.jsx"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useReducer} from 'react'\nconst initialState = {contador:0};\nfunction reducer(state , action) {\n    switch (action.type) {\n        case \"INCREMENT\":\n            return {contador : state.contador + 1};\n        case \"DECREMENT\":\n            return {contador : state.contador - 1};\n        default:\n            return state;\n    }\n\n}\nconst Contador = () => {\n    // state se sugiere que sea un objeto\n     const [state, dispatch] = useReducer(reducer, initialState)\n    const sumar = () => dispatch({type:'INCREMENT'})\n    const restar = () =>  dispatch({type:'DECREMENT'})\n  return (\n    <div style={{textAlign: 'center'}}>\n        <h2>Contador</h2>\n       <nav>\n           <button onClick={sumar}>+</button>\n           <button onClick={restar}> -</button>\n       </nav>\n       <h3>{state.contador}</h3>\n    </div>\n  )\n}\n\nexport default Contador\n\n")),(0,r.yg)("h2",{id:"sugerencias"},"Sugerencias"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Los tipos de acciones(type) son constante que nunca van a cambiar."),(0,r.yg)("li",{parentName:"ul"},"La buena practica sugiere que los tipos de acciones(type) est\xe9n un objeto")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'const TYPES = {\n    INCREMENT:"INCREMENT",\n    DECREMENT:"DECREMENT"\n}\nfunction reducer(state , action) {\n    switch (action.type) {\n        case TYPES.INCREMENT:\n            return {contador : state.contador + 1};\n        case TYPES.DECREMENT:\n            return {contador : state.contador - 1};\n        default:\n            return state;\n    }\n\n}\n    const sumar = () => dispatch({type:TYPES.INCREMENT})\n    const restar = () =>  dispatch({type:TYPES.DECREMENT})\n\n')),(0,r.yg)("h2",{id:"a\xf1adimos-mas-acciones"},"A\xf1adimos mas acciones"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'const TYPES = {\n    INCREMENT:"INCREMENT",\n    INCREMENT_5:"INCREMENT_5",\n    DECREMENT:"DECREMENT" ,\n    DECREMENT_5:"DECREMENT_5" ,\n    RESET:"RESET"\n}\n\n')),(0,r.yg)("h3",{id:"creamos-las-funciones-que-le-env\xedan-un-objeto-de-tipo-acci\xf3naction-al-reducer"},"Creamos las funciones que le env\xedan un objeto de tipo acci\xf3n(action) al reducer"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"\n    const sumar = () => dispatch({type:TYPES.INCREMENT})\n    const restar = () =>  dispatch({type:TYPES.DECREMENT})\n     const sumar5 = () =>  dispatch({type:TYPES.INCREMENT_5 , payload:5})\n     const restar5 = () =>  dispatch({type:TYPES.DECREMENT_5 ,payload:5})\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"Usamos el payload para enviarle un dato al reducer para que modifique el Estado."))),(0,r.yg)("h3",{id:"tenemos-que-escribir-la-l\xf3gica-lo-que-va-a-ejecutar-de-las-acciones-que-agregamos-en-el-reducer"},"Tenemos que escribir la l\xf3gica (lo que va a ejecutar) de las acciones que agregamos en el reducer."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"function reducer(state, action) {\n    function reducer(state, action) {\n    switch (action.type) {\n        case TYPES.INCREMENT:\n            return { contador: state.contador + 1 };\n        case TYPES.DECREMENT:\n            return { contador: state.contador - 1 };\n        case TYPES.DECREMENT_5:\n            return { contador: state.contador - action.payload };\n        case TYPES.INCREMENT_5:\n            return { contador: state.contador + action.payload };\n        default:\n            return state;\n    }\n\n}\n\n\n")),(0,r.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"En la l\xf3gica utilizamos el dato que le enviamos"))),(0,r.yg)("p",null,"Contador.jsx"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Le a\xf1adimos el reset tambien ")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import React, { useReducer } from \'react\'\nconst initialState = { contador: 0 };\n\nconst TYPES = {\n    INCREMENT: "INCREMENT",\n    INCREMENT_5: "INCREMENT_5",\n    DECREMENT: "DECREMENT",\n    DECREMENT_5: "DECREMENT_5",\n    RESET: "RESET"\n}\nfunction reducer(state, action) {\n    switch (action.type) {\n        case TYPES.INCREMENT:\n            return { contador: state.contador + 1 };\n        case TYPES.DECREMENT:\n            return { contador: state.contador - 1 };\n        case TYPES.DECREMENT_5:\n            return { contador: state.contador - action.payload };\n        case TYPES.INCREMENT_5:\n            return { contador: state.contador + action.payload };\n        case TYPES.RESET:\n             return initialState;\n        default:\n            return state;\n    }\n\n}\nconst Contador = () => {\n    // state se sugiere que sea un objeto\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const sumar = () => dispatch({ type: TYPES.INCREMENT })\n    const restar = () => dispatch({ type: TYPES.DECREMENT })\n    const sumar5 = () => dispatch({ type: TYPES.INCREMENT_5, payload: 5 })\n    const restar5 = () => dispatch({ type: TYPES.DECREMENT_5, payload: 5 })\n    const reset = () => dispatch({type:TYPES.RESET})\n    return (\n        <div style={{ textAlign: \'center\' }}>\n            <h2>Contador</h2>\n            <nav>\n                <button onClick={reset}>0</button>\n                <button onClick={sumar5}>+5</button>\n                <button onClick={restar5}>-5</button>\n                <button onClick={sumar}>+</button>\n                <button onClick={restar}> -</button>\n            </nav>\n            <h3>{state.contador}</h3>\n        </div>\n    )\n}\n\nexport default Contador\n\n')),(0,r.yg)("h2",{id:"tercer-parametro-de-usereducer"},"Tercer parametro de useReducer"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Sirve para modificar o transformar el estado inicial."),(0,r.yg)("li",{parentName:"ul"},"Es una funcion que recibe el estado inicial."),(0,r.yg)("li",{parentName:"ul"},"Siempre devuelve el estado final ")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import React, { useReducer } from \'react\'\nconst initialState = { contador: 0 };\nconst init = (initialState) => {\n   return  { contador: initialState.contador +100}\n}\nconst TYPES = {\n    INCREMENT: "INCREMENT",\n    INCREMENT_5: "INCREMENT_5",\n    DECREMENT: "DECREMENT",\n    DECREMENT_5: "DECREMENT_5",\n    RESET: "RESET"\n}\nfunction reducer(state, action) {\n    switch (action.type) {\n        case TYPES.INCREMENT:\n            return { contador: state.contador + 1 };\n        case TYPES.DECREMENT:\n            return { contador: state.contador - 1 };\n        case TYPES.DECREMENT_5:\n            return { contador: state.contador - action.payload };\n        case TYPES.INCREMENT_5:\n            return { contador: state.contador + action.payload };\n        case TYPES.RESET:\n             return initialState;\n        default:\n            return state;\n    }\n\n}\nconst Contador = () => {\n    // state se sugiere que sea un objeto\n    const [state, dispatch] = useReducer(reducer, initialState , init)\n\n')),(0,r.yg)("h2",{id:"directorios"},"Directorios"),(0,r.yg)("h3",{id:"carpeta-actions"},"carpeta actions"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Se debe tener una carpeta para las acciones (actions)"),(0,r.yg)("li",{parentName:"ul"},"src/actions")),(0,r.yg)("p",null,"src/actions/ContadorActions.js"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Tendr\xeda un objeto con los tipos de acciones.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'export const TYPES = {\n    INCREMENT: "INCREMENT",\n    INCREMENT_5: "INCREMENT_5",\n    DECREMENT: "DECREMENT",\n    DECREMENT_5: "DECREMENT_5",\n    RESET: "RESET"\n}\n\n')),(0,r.yg)("h3",{id:"carpeta-reducers"},"carpeta reducers"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Se debe tener una carpeta para los reducers "),(0,r.yg)("li",{parentName:"ul"},"src/reducers"),(0,r.yg)("li",{parentName:"ul"},"Se puede  crear una carpeta por cada reducer y adentro de cada una tener un index.js")),(0,r.yg)("p",null,"src/reducers/contadorReducer.js"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Debe tener la funci\xf3n reducer, el valor inicial del estado y la funci\xf3n que modifica el valor inicial."),(0,r.yg)("li",{parentName:"ul"},"B\xe1sicamente este archivo contiene los tres par\xe1metros de UseReducer.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { TYPES } from "../actions/contadorActions";\n\nexport const contadorInitialState = { contador: 0 };\nexport const contadorInit = (initialState) => {\n   return  { contador: initialState.contador +100}\n}\n\nexport function contadorReducer(state, action) {\n    switch (action.type) {\n        case TYPES.INCREMENT:\n            return { contador: state.contador + 1 };\n        case TYPES.DECREMENT:\n            return { contador: state.contador - 1 };\n        case TYPES.DECREMENT_5:\n            return { contador: state.contador - action.payload };\n        case TYPES.INCREMENT_5:\n            return { contador: state.contador + action.payload };\n        case TYPES.RESET:\n             return contadorInitialState;\n        default:\n            return state;\n    }\n\n}\n\n')),(0,r.yg)("p",null,"Contador.jsx"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useReducer } from 'react'\nimport { TYPES } from '../actions/contadorActions'\nimport { contadorInit, contadorInitialState, contadorReducer } from '../reducers/contadorReducer'\n\nconst Contador = () => {\n    const [state, dispatch] = useReducer(contadorReducer, contadorInitialState , contadorInit)\n    const sumar = () => dispatch({ type: TYPES.INCREMENT })\n    const restar = () => dispatch({ type: TYPES.DECREMENT })\n    const sumar5 = () => dispatch({ type: TYPES.INCREMENT_5, payload: 5 })\n    const restar5 = () => dispatch({ type: TYPES.DECREMENT_5, payload: 5 })\n    const reset = () => dispatch({type:TYPES.RESET})\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <h2>Contador</h2>\n            <nav>\n                <button onClick={reset}>0</button>\n                <button onClick={sumar5}>+5</button>\n                <button onClick={restar5}>-5</button>\n                <button onClick={sumar}>+</button>\n                <button onClick={restar}> -</button>\n            </nav>\n            <h3>{state.contador}</h3>\n        </div>\n    )\n}\n\nexport default Contador\n\n")))}p.isMDXComponent=!0}}]);