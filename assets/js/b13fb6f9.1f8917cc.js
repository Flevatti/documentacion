"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[6117],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>p});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=r.createContext({}),d=function(e){var a=r.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=d(e.components);return r.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(n),p=t,v=m["".concat(i,".").concat(p)]||m[p]||u[p]||o;return n?r.createElement(v,l(l({ref:a},c),{},{components:n})):r.createElement(v,l({ref:a},c))}));function p(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:t,l[1]=s;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6309:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(7462),t=(n(7294),n(3905));const o={sidebar_position:5},l="Array",s={unversionedId:"Javascript/array",id:"Javascript/array",title:"Array",description:"Los arrays son objetos similares a una lista cuyo prototipo proporciona m\xe9todos para efectuar operaciones de recorrido y de mutaci\xf3n. Tanto la longitud como el tipo de los elementos de un array son variables.",source:"@site/docs/Javascript/array.md",sourceDirName:"Javascript",slug:"/Javascript/array",permalink:"/documentacion/docs/Javascript/array",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Javascript/array.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"Javascript",previous:{title:"DOM",permalink:"/documentacion/docs/Javascript/DOM"},next:{title:"Validaciones (Formulario)",permalink:"/documentacion/docs/Javascript/formulario"}},i={},d=[{value:"Recorrer un Array",id:"recorrer-un-array",level:2},{value:"Metodos que afectan al array Original",id:"metodos-que-afectan-al-array-original",level:2},{value:"push",id:"push",level:2},{value:"pop",id:"pop",level:2},{value:"shift",id:"shift",level:2},{value:"unshift",id:"unshift",level:2},{value:"Paradigma de progamaci\xf3n",id:"paradigma-de-progamaci\xf3n",level:2},{value:"Son:",id:"son",level:3},{value:"Imperativa vs Declarativa",id:"imperativa-vs-declarativa",level:3},{value:"POO",id:"poo",level:3},{value:"Funcional",id:"funcional",level:3},{value:"Metodos que no afectan al Array",id:"metodos-que-no-afectan-al-array",level:2},{value:"Es progamacion funcional",id:"es-progamacion-funcional",level:3},{value:"Estos m\xe9todos no mutan el array original, sino que nos devuelven uno nuevo.",id:"estos-m\xe9todos-no-mutan-el-array-original-sino-que-nos-devuelven-uno-nuevo",level:3},{value:"Map()",id:"map",level:2},{value:"Parametros:",id:"parametros",level:3},{value:"filter()",id:"filter",level:2},{value:"Parametros:",id:"parametros-1",level:3},{value:"find()",id:"find",level:2},{value:"Parametros:",id:"parametros-2",level:3},{value:"some()",id:"some",level:2},{value:"Parametros:",id:"parametros-3",level:3},{value:"findIndex()",id:"findindex",level:2},{value:"Parametros:",id:"parametros-4",level:3},{value:"Hay mas m\xe9todos de b\xfasquedas de un array (Investigar)",id:"hay-mas-m\xe9todos-de-b\xfasquedas-de-un-array-investigar",level:2},{value:"Slice()",id:"slice",level:2},{value:"Parametros:",id:"parametros-5",level:3},{value:"Splice()",id:"splice",level:2},{value:"start",id:"start",level:3},{value:"deleteCount",id:"deletecount",level:3},{value:"...elemento",id:"elemento",level:3},{value:"concat()",id:"concat",level:2},{value:"Parametros:",id:"parametros-6",level:3},{value:"Sint\xe1xis Spread (...)",id:"sint\xe1xis-spread-",level:2},{value:"Algunas de sus funciones:",id:"algunas-de-sus-funciones",level:3},{value:"Crean una copia de un array/objeto",id:"crean-una-copia-de-un-arrayobjeto",level:4},{value:"Descomponen un objeto/array",id:"descomponen-un-objetoarray",level:4},{value:"Sirve para unir Array/Objetos",id:"sirve-para-unir-arrayobjetos",level:4},{value:"Sirve para a\xf1adir elementos a un array o a\xf1adir propiedades a un objeto",id:"sirve-para-a\xf1adir-elementos-a-un-array-o-a\xf1adir-propiedades-a-un-objeto",level:4},{value:"Sirve para guardar un pedazo de un array o objeto",id:"sirve-para-guardar-un-pedazo-de-un-array-o-objeto",level:4},{value:"REST OPERATOR",id:"rest-operator",level:2},{value:"reduce()",id:"reduce",level:2},{value:"Parametros:",id:"parametros-7",level:3},{value:"flat()",id:"flat",level:2},{value:"Parametros:",id:"parametros-8",level:3},{value:"split()",id:"split",level:2},{value:"Parametros:",id:"parametros-9",level:3},{value:"join()",id:"join",level:2},{value:"Parametros:",id:"parametros-10",level:3},{value:"Practica",id:"practica",level:2},{value:"HTML",id:"html",level:3},{value:"JS",id:"js",level:3},{value:"Desestructurar por posiciones",id:"desestructurar-por-posiciones",level:2},{value:"\xbfSab\xedas que en JavaScript puedes desestructurar un Array apuntando directamente a sus posiciones?",id:"sab\xedas-que-en-javascript-puedes-desestructurar-un-array-apuntando-directamente-a-sus-posiciones",level:4}],c={toc:d};function u(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",(0,r.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"array"},"Array"),(0,t.kt)("p",null,"Los arrays son objetos similares a una lista cuyo prototipo proporciona m\xe9todos para efectuar operaciones de recorrido y de mutaci\xf3n. Tanto la longitud como el tipo de los elementos de un array son variables."),(0,t.kt)("p",null,"En javascript son din\xe1micos, no hace falta declarar la dimensi\xf3n(tama\xf1o)."),(0,t.kt)("p",null,"En javascript podes mezclar datos . Un array puede tener String , n\xfameros , etc."),(0,t.kt)("p",null,"[] = Array"),(0,t.kt)("p",null,"Con una coma separas los elementos(valores) del array."),(0,t.kt)("p",null,"Cada valor corresponde a un \xedndice ","[Numero]"),(0,t.kt)("p",null,"Los \xedndice empiezan con 0."),(0,t.kt)("p",null,"Para  llamar a un elemento del array"),(0,t.kt)("p",null,"variable","[\xedndice]"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'let frutas = ["manzana", "platano", "pera"];\nconsole.log(frutas);\n\n')),(0,t.kt)("p",null,"Conceptos claves:"),(0,t.kt)("p",null,"length: Tama\xf1o de array (cantidad de elementos) (NO ES EL INDICE)"),(0,t.kt)("p",null,"\xedndice: Comienzan en cero, es decir, el \xedndice del primer elemento de un array es 0."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'let frutas = ["manzana", "platano", "pera"];\nconsole.log(frutas);\nconsole.log(frutas.length);\nconsole.log(frutas[0]);\nconsole.log(frutas[1]);\nconsole.log(frutas[2]);\nconsole.log(frutas[3]);\n\n')),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"undefined"),(0,t.kt)("p",{parentName:"div"},"Una variable a la que no se le ha asignado valor, o no se ha declarado en absoluto (no se declara, no existe) son de tipo undefined. Un m\xe9todo o sentencia tambi\xe9n devuelve undefined si la variable que se est\xe1 evaluando no tiene asignado un valor. Una funci\xf3n devuelve undefined si no se ha devuelto un valor."))),(0,t.kt)("h2",{id:"recorrer-un-array"},"Recorrer un Array"),(0,t.kt)("p",null,"El m\xe9todo forEach() ejecuta la funci\xf3n indicada una vez por cada elemento del array"),(0,t.kt)("p",null,"El par\xe1metro es una funci\xf3n flecha (la que se va a ejecutar por cada elemento)"),(0,t.kt)("p",null,"La funci\xf3n flecha puede tener un par\xe1metro que va a representar el  valor de cada elemento del array:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'let frutas = ["manzana", "sand\xeda", "pera"]\nfrutas.forEach(fruta => console.log(fruta))\n')),(0,t.kt)("p",null,"La funci\xf3n flecha puede tener un segundo par\xe1metro que va a representar el \xedndice del valor de cada elemento del array:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'let frutas = ["manzana", "sand\xeda", "pera"]\nfrutas.forEach((fruta , index) => { \n    console.log(`${index}  :  ${fruta}  `)\n})\n\n')),(0,t.kt)("p",null,"La funci\xf3n flecha puede tener un tercer par\xe1metro que va a presentar el array entero:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'let frutas = ["manzana", "sand\xeda", "pera"]\nfrutas.forEach((fruta , index , array) => { \n    console.log(`${index}  :  ${fruta}  `)\n    console.log(array);\n})\n\n\n')),(0,t.kt)("h2",{id:"metodos-que-afectan-al-array-original"},"Metodos que afectan al array Original"),(0,t.kt)("h2",{id:"push"},"push"),(0,t.kt)("p",null,"El m\xe9todo push() a\xf1ade uno o m\xe1s elementos al final de un array y devuelve la nueva longitud del array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const frutas = ["Banana"]\nfrutas.push("Sand\xeda")\nconsole.log(frutas)\n\n')),(0,t.kt)("h2",{id:"pop"},"pop"),(0,t.kt)("p",null,"El m\xe9todo pop() elimina el \xfaltimo elemento de un array y lo devuelve. Este m\xe9todo cambia la longitud del array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const frutas = ["Banana" , "Pera"]\nconst frutaEliminado = frutas.pop();\nconsole.log(frutas)\nconsole.log(frutaEliminado);\n\n')),(0,t.kt)("h2",{id:"shift"},"shift"),(0,t.kt)("p",null,"El m\xe9todo shift() elimina el primer elemento del array y lo retorna. Este m\xe9todo modifica la longitud del array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const frutas = ["Banana" , "Pera"]\nconst frutaEliminado = frutas.shift();\nconsole.log(frutas)\nconsole.log(frutaEliminado);\n\n')),(0,t.kt)("h2",{id:"unshift"},"unshift"),(0,t.kt)("p",null,"El m\xe9todo unshift() agrega uno o m\xe1s elementos al inicio del array, y devuelve la nueva longitud del array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const frutas = ["Banana"]\nfrutas.unshift("Sand\xeda")\nconsole.log(frutas)\n\n')),(0,t.kt)("p",null,"Ejemplo: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const frutas = []\nconst fruta = prompt('\ud83c\udf52 Feria Market \ud83c\udf49 \xbfqu\xe9 fruta desea comprar?')\n\nfrutas.push(fruta)\n\nwhile (confirm('\xbfDesea agregar otro elemento al \ud83d\uded2?')) {\n    const fruta = prompt('\xbfqu\xe9 fruta desea comprar?')\n    frutas.push(fruta)\n}\n\nconsole.log('Ustede compr\xf3: ')\nfor (let fruta of frutas) {\n    console.log(fruta)\n}\n\n")),(0,t.kt)("h2",{id:"paradigma-de-progamaci\xf3n"},"Paradigma de progamaci\xf3n"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Un paradigma de programaci\xf3n no es m\xe1s que una forma de ver y crear c\xf3digo de programaci\xf3n. Para resolver problemas."),(0,t.kt)("li",{parentName:"ul"},"Existen diferentes formas de dise\xf1ar un lenguaje de programaci\xf3n y varios modos de trabajar para obtener los resultados que necesitan los programadores."),(0,t.kt)("li",{parentName:"ul"},"Los lenguajes de programaci\xf3n adoptan uno o varios paradigmas en funci\xf3n del tipo de \xf3rdenes que permiten implementar como, por ejemplo, Python o JavaScript, que son multiparadigmas.")),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"son"},"Son:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Imperativo: (Emperador) en el que el programador instruye a la m\xe1quina c\xf3mo cambiar su estado. El progamador dicta el camino a seguir para conseguir los resultados esperados.",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"procedimental que agrupa las instrucciones en procedimientos."),(0,t.kt)("li",{parentName:"ul"},"orientado a objetos (OPP o POO) que agrupa las instrucciones con la parte del estado en el que operan."))),(0,t.kt)("li",{parentName:"ol"},"Declarativo: en el que el programador simplemente declara las propiedades del resultado deseado, pero no c\xf3mo calcularlo. El programador dice el resultado que quiere obtener, pero no la manera en que se va a realizar",(0,t.kt)("pre",{parentName:"li"},(0,t.kt)("code",{parentName:"pre"},"-   funcional en el que el resultado deseado se declara como el valor de una serie de aplicaciones de funci\xf3n.\n-   l\xf3gico en la que el resultado deseado se declara como la respuesta a una pregunta sobre un sistema de hechos y reglas.\n-   matem\xe1tico en el que el resultado deseado se declara como la soluci\xf3n de un problema de optimizaci\xf3n.\n")),"o\treactivo en el que se declara el resultado deseado con flujos de datos y la propagaci\xf3n del cambio.")),(0,t.kt)("h3",{id:"imperativa-vs-declarativa"},"Imperativa vs Declarativa"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Programaci\xf3n imperativa: Nosotros dictamos el camino a seguir a trav\xe9s del control de flujo: variables, funciones, if, else, switch, loops ( while, for, for of, for in), try catch, async await. Por lo tanto siempre utilizas programaci\xf3n imperativa en Javascript."),(0,t.kt)("li",{parentName:"ul"},"Programaci\xf3n declarativa: Declaras lo que quieres que suceda, no c\xf3mo se hace. La programaci\xf3n funcional b\xe1sicamente significa escribir c\xf3digo que hace algo (declara lo que se hace) pero no es espec\xedfico sobre c\xf3mo hacerlo (imperativo).")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("ul",{parentName:"div"},(0,t.kt)("li",{parentName:"ul"},"Javascript permite un estilo de desarrollo tanto declarativo como imperativo, atendiendo asi a qu\xe9 objetivo se busca alcanzar (declarativo) o extendi\xe9ndose sobre c\xf3mo se debe alcanzar un objetivo (imperativo)."),(0,t.kt)("li",{parentName:"ul"},"Si bien las \xfaltimas incorporaciones del lenguaje muestran una tendencia hacia un paradigma claramente declarativo (funcional), ambos estilos coexisten en la industria actual y suponen diferencias a efectos de optimizaci\xf3n, rendimiento, legibilidad o mantenibilidad de nuestras aplicaciones, entre otros."),(0,t.kt)("li",{parentName:"ul"},'Ambos enfoques pueden lograr los mismos objetivos, y no tenemos que elegir solo uno al programar porque JavaScript es un lenguaje de "m\xfaltiples paradigmas"')))),(0,t.kt)("h3",{id:"poo"},"POO"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"La programaci\xf3n orientada a objetos es una forma de programaci\xf3n imperativa puesto que al programar se describe la secuencia que debe seguir el programa para resolver un problema dado."),(0,t.kt)("li",{parentName:"ul"},"Hace uso de estructuras de datos llamadas objetos que aglutinan propiedades y m\xe9todos conjuntamente con sus interacciones."),(0,t.kt)("li",{parentName:"ul"},"La programaci\xf3n orientada a objetos se basa tambi\xe9n en conceptos como la abstracci\xf3n de datos, la encapsulaci\xf3n, los eventos, la modularidad, la herencia y el polimorfismo.")),(0,t.kt)("h3",{id:"funcional"},"Funcional"),(0,t.kt)("p",null,"La programaci\xf3n funcional b\xe1sicamente significa escribir c\xf3digo que hace algo (declara lo que se hace) pero no es espec\xedfico sobre c\xf3mo hacerlo (imperativo)."),(0,t.kt)("p",null,"La programaci\xf3n funcional es otro enfoque com\xfan en el desarrollo de software (paradigma de programaci\xf3n). En programaci\xf3n funcional, el c\xf3digo est\xe1 organizado en funciones m\xe1s peque\xf1as y b\xe1sicas que se pueden combinar para construir programas de mayor complejidad."),(0,t.kt)("h2",{id:"metodos-que-no-afectan-al-array"},"Metodos que no afectan al Array"),(0,t.kt)("h3",{id:"es-progamacion-funcional"},"Es progamacion funcional"),(0,t.kt)("h3",{id:"estos-m\xe9todos-no-mutan-el-array-original-sino-que-nos-devuelven-uno-nuevo"},"Estos m\xe9todos no mutan el array original, sino que nos devuelven uno nuevo."),(0,t.kt)("h2",{id:"map"},"Map()"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"El m\xe9todo map iterar\xe1 sobre cada elemento de un arreglo y devuelve un nuevo arreglo que contiene los resultados(lo que retorna) de  la funci\xf3n callback en cada elemento. Esto lo hace sin mutar el arreglo original."),(0,t.kt)("li",{parentName:"ul"},"Devuelve todos los elementos del array",(0,t.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"Una funci\xf3n de callback es una funci\xf3n que se pasa a otra funci\xf3n como un argumento."))))),(0,t.kt)("h3",{id:"parametros"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)\nEl par\xe1metro del callback va a representa el valor que contenga cada elemento del arreglo al recorrerlo.")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo (un nuevo valor del array)"),(0,t.kt)("p",null,"Ejemplo: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Obtengo el mismo array:\nconst frutas = ["\ud83c\udf4c", "\ud83c\udf4f", "\ud83c\udf53"];\n\nconst nuevoArray = frutas.map((item) => {return item })\n\nconsole.log(nuevoArray);\n\n')),(0,t.kt)("p",null,"Otro Ejemplo Abreviado: "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const frutas = ["\ud83c\udf4c", "\ud83c\udf4f", "\ud83c\udf53"];\n\nconst nuevoArray = frutas.map((item) => item )\n\nconsole.log(nuevoArray);\n\n')),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"Te permite crear una copia del array totalmente independiente al original."))),(0,t.kt)("p",null,"Otros Ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'\n\nconst frutas = ["\ud83c\udf4c", "\ud83c\udf4f", "\ud83c\udf53"];\n\nconst nuevoArray = frutas.map((item) => item )\nfrutas.push("\ud83c\udf49");\nconsole.log(nuevoArray);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const users = [\n    { name: "John", age: 34 },\n    { name: "Amy", age: 20 },\n    { name: "camperCat", age: 10 },\n];\n const names = users.map((user) => user.name );\n console.log(names);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"// Crea un nuevo array multiplicando por 2 cada elemento del array numeros\nconst numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst numerosPorDos = numeros.map((item) => item*2);\n\nconsole.log(numerosPorDos);\n\n\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"Se puede modificar el mismo array con MAP() si no le asignas a una variable."))),(0,t.kt)("h2",{id:"filter"},"filter()"),(0,t.kt)("p",null,"El m\xe9todo filter() crea un nuevo array con todos los elementos que cumplan la condici\xf3n implementada por la funci\xf3n dada."),(0,t.kt)("h3",{id:"parametros-1"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)\nEl par\xe1metro del callback va a representa el valor que contenga cada elemento del arreglo al recorrerlo.")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo ( true si cumple la condicion , false si no la cumple)"),(0,t.kt)("p",null,"el filter debe devolver true (si pasa el filtro) o false (si no pasa)"),(0,t.kt)("p",null,"Puede devolver todos los elementos del array o algunos."),(0,t.kt)("p",null,"Ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Devuelve al usuario cuya edad es mayor a 30\nconst users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst mayores = users.filter((item) => item.age > 30);\n\nconsole.log(mayores);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Eliminar un usuario del array:\nconst users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst usersFiltrado = users.filter((item) => item.uid !== 3);\n\nconsole.log(usersFiltrado);\n\n')),(0,t.kt)("h2",{id:"find"},"find()"),(0,t.kt)("p",null,"El m\xe9todo find() devuelve el valor del primer elemento del array que cumple la  condici\xf3n  implementada por la funci\xf3n "),(0,t.kt)("h3",{id:"parametros-2"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)\nEl par\xe1metro del callback va a representa el valor que contenga cada elemento del arreglo al recorrerlo.")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo."),(0,t.kt)("p",null,"Ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Devolver el usuario con la uid 2.\n const users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst amy = users.find((user) => user.uid === 2);\n\nconsole.log(amy);\n\nconst users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 2, name: "Amy5", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst amy = users.find((user) => user.uid === 2);\n\nconsole.log(amy);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Ejemplo con destructuring:\nconst users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 2, name: "Amy5", age: 30 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst {age} = users.find((user) => user.uid === 2);\n\nconsole.log(age);\n\n')),(0,t.kt)("h2",{id:"some"},"some()"),(0,t.kt)("p",null,"El m\xe9todo some() comprueba si al menos un elemento del array cumple con la condici\xf3n implementada por la funci\xf3n proporcionada."),(0,t.kt)("p",null,"Devuelve un valor booleano."),(0,t.kt)("p",null,"Devuelve true si existe un elemento del array que cumple la condici\xf3n."),(0,t.kt)("h3",{id:"parametros-3"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)\nEl par\xe1metro del callback va a representa el valor que contenga cada elemento del arreglo al recorrerlo.")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo."),(0,t.kt)("p",null,"Ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'\nconst users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst existe = users.some((user) => user.uid === 2);\nconsole.log(existe);\n\n')),(0,t.kt)("h2",{id:"findindex"},"findIndex()"),(0,t.kt)("p",null,"El m\xe9todo findIndex() devuelve el \xedndice del primer elemento de un array que cumpla con la condici\xf3n de la  funci\xf3n proporcionada. En caso contrario devuelve -1."),(0,t.kt)("h3",{id:"parametros-4"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)\nEl par\xe1metro del callback va a representa el valor que contenga cada elemento del arreglo al recorrerlo.")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo."),(0,t.kt)("p",null,"Ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const users = [\n    { uid: 1, name: "John", age: 34 },\n    { uid: 2, name: "Amy", age: 20 },\n    { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst indice = users.findIndex((user)=> user.uid === 2);\nconsole.log(indice);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'\nconst users = [\n   { uid: 1, name: "John", age: 34 },\n   { uid: 2, name: "Amy", age: 20 },\n   { uid: 3, name: "camperCat", age: 10 },\n];\n\nconst indice = users.findIndex((user)=> user.uid === 2);\nconsole.log(indice);\nconsole.log(users[indice]);\n\n')),(0,t.kt)("h2",{id:"hay-mas-m\xe9todos-de-b\xfasquedas-de-un-array-investigar"},"Hay mas m\xe9todos de b\xfasquedas de un array (Investigar)"),(0,t.kt)("h2",{id:"slice"},"Slice()"),(0,t.kt)("p",null,"El m\xe9todo slice() devuelve una parte del array dentro de un nuevo array ."),(0,t.kt)("p",null,"Como par\xe1metros tenes que especificar el \xedndice de inicio y el \xedndice final (no incluido). El array original no se modificar\xe1."),(0,t.kt)("h3",{id:"parametros-5"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Indice comienzo (incluido)"),(0,t.kt)("li",{parentName:"ol"},"Indice final (No incluido)")),(0,t.kt)("p",null,"Ambos son INT"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const arr = ["Cat", "Dog", "Tiger", "Zebra"];\n\nconst arrayNuevo = arr.slice(1,3);\n// Devuelve un array ["Dog" , "Tiger"];\nconsole.log(arrayNuevo);\n\n')),(0,t.kt)("h2",{id:"splice"},"Splice()"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"El m\xe9todo splice() cambia el contenido de un array eliminando elementos existentes y/o agregando nuevos elementos."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"},"info"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"array.splice(start, deleteCount , ...elemento]\n")),(0,t.kt)("h3",{id:"start"},"start"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"\xcdndice donde se comenzar\xe1 a cambiar el array (con 0 como origen). "),(0,t.kt)("li",{parentName:"ul"},"Si es mayor que la longitud del array, el punto inicial ser\xe1 la longitud del array. Si es negativo, empezar\xe1  contando desde el final.")),(0,t.kt)("h3",{id:"deletecount"},"deleteCount"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Un entero indicando el n\xfamero de elementos a eliminar del array antiguo."),(0,t.kt)("li",{parentName:"ul"},"Si deleteCount se omite, o si su valor es mayor que arr.length - start (esto significa, si es mayor que el n\xfamero de elementos restantes del array, comenzando desde start), entonces todos los elementos desde start hasta el final del array ser\xe1n eliminados."),(0,t.kt)("li",{parentName:"ul"},"Si deleteCount es igual a 0 o negativo, no se eliminar\xe1 ning\xfan elemento. En este caso, se debe especificar al menos un nuevo elemento (ver m\xe1s abajo).")),(0,t.kt)("h3",{id:"elemento"},"...elemento"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Los elementos que se agregar\xe1n al array, empezando en el \xedndice start. Si no se especifica ning\xfan elemento, splice() solamente eliminar\xe1 elementos del array.")),(0,t.kt)("h2",{id:"concat"},"concat()"),(0,t.kt)("p",null," El m\xe9todo concat() se usa para unir dos o m\xe1s arrays. Este m\xe9todo no cambia los arrays existentes, sino que devuelve un nuevo array."),(0,t.kt)("h3",{id:"parametros-6"},"Parametros:"),(0,t.kt)("p",null," Arrays a fusionar "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const array1 = ["a", "b", "c"];\nconst array2 = ["d", "e", "f"];\nconst array3 = array1.concat(array2);\n\nconsole.log(array3);\n\n')),(0,t.kt)("h2",{id:"sint\xe1xis-spread-"},"Sint\xe1xis Spread (...)"),(0,t.kt)("p",null," ",(0,t.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax"},"\npermite a un elemento iterable tal como un arreglo o cadena ser expandido en lugares donde son esperados.\n")),(0,t.kt)("p",null,"Es lo mismo que concant pero usando los tres puntos (\u201c\u2026\u201d)"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Todos los elementos del array 1 (\u2026array1) y todos los elementos del array 2 (\u2026array2) se juntan\n const array1 = ["a", "b", "c"];\nconst array2 = ["d", "e", "f"];\nconst array3 = [...array1, ...array2];\n\nconsole.log(array3);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'// Con la Coma separamos los elementos, por lo tanto se puede cambiar el orden\nconst array1 = ["a", "b", "c"];\nconst array2 = ["d", "e", "f"];\nconst array3 = [...array2 , ...array1];\n\nconsole.log(array3);\n\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const array1 = ["a", "b", "c"];\nconst array2 = ["d", "e", "f"];\nconst array3 = [...array2 , \'Al reves\' , ...array1];\n\nconsole.log(array3);\n\n')),(0,t.kt)("h3",{id:"algunas-de-sus-funciones"},"Algunas de sus funciones:"),(0,t.kt)("h4",{id:"crean-una-copia-de-un-arrayobjeto"},"Crean una copia de un array/objeto"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const gato = {propiedades del gato}\n// Creamos una copia de gato\nconst gato2 = {\u2026gato};\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion ")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("ul",{parentName:"div"},(0,t.kt)("li",{parentName:"ul"},"Al gato2 se le asigna una copia de gato por lo tanto tambi\xe9n tiene todas sus propiedades."),(0,t.kt)("li",{parentName:"ul"},"gato y gato2 tienen las mismas propiedades y valores, pero son totalmente independiente(es una copia)"),(0,t.kt)("li",{parentName:"ul"},"Conclusion : Sirven para crear una copia de forma independiente.")))),(0,t.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"La copia se hace solo de los elementos superiores (se accede a la propiedad con un punto(objeto.propiedad)), los elementos de \u201cnivel bajo\u201d (se accede a la propiedad con m\xe1s de un punto  (objeto.propiedad.propiedad) se pasan por referencia.  "),(0,t.kt)("p",{parentName:"div"},"CUIDADO CON OBJETOS/ARRAY COMPLEJOS"))),(0,t.kt)("h4",{id:"descomponen-un-objetoarray"},"Descomponen un objeto/array"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const sumar = (a,b) => a+b;\nconst numeros = [2,3];\nconst suma = sumar (\u2026numeros)\n\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion ")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"En el ejemplo se ejecuta la funci\xf3n sumar donde a = 2 y b = 3"))),(0,t.kt)("h4",{id:"sirve-para-unir-arrayobjetos"},"Sirve para unir Array/Objetos"),(0,t.kt)("h4",{id:"sirve-para-a\xf1adir-elementos-a-un-array-o-a\xf1adir-propiedades-a-un-objeto"},"Sirve para a\xf1adir elementos a un array o a\xf1adir propiedades a un objeto"),(0,t.kt)("h4",{id:"sirve-para-guardar-un-pedazo-de-un-array-o-objeto"},"Sirve para guardar un pedazo de un array o objeto"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const masNumeros = [1,2,3,4,5]\nconst [primero , \u2026resto] = masNumeros\n//Resultado\n//primero = 1\n//resto = [2,3,4,5]\n\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"Funciona de igual manera con array y objetos"))),(0,t.kt)("h2",{id:"rest-operator"},"REST OPERATOR"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Es un par\xe1metro (\u2026par\xe1metro) de una funcion"),(0,t.kt)("li",{parentName:"ul"},"Te convierte todos los valores  que se pasa como argumento en un array."),(0,t.kt)("li",{parentName:"ul"},"Es lo contrario a SPREAD.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"function suma(\u2026n\xfameros) {}\n")),(0,t.kt)("h2",{id:"reduce"},"reduce()"),(0,t.kt)("p",null,"El m\xe9todo reduce () ejecuta una funci\xf3n reductora sobre cada elemento de un array, devolviendo como resultado un \xfanico valor."),(0,t.kt)("p",null,"El acumulador en la primera vuelta es 0."),(0,t.kt)("p",null,"Lo que devuelve la funci\xf3n en cada vuelta se lo asigna al acumulador."),(0,t.kt)("p",null,"El valor devuelto de la funci\xf3n reductora se asigna al acumulador, cuyo valor se recuerda en cada iteraci\xf3n de la matriz y , en su ultima instancia, se convierte en el valor final , \xfanico y resultante."),(0,t.kt)("h3",{id:"parametros-7"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Funcion (Callback)")),(0,t.kt)("p",null,"El callback tiene dos parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Acumulador"),(0,t.kt)("li",{parentName:"ol"},"El valor que contiene el elemento del array")),(0,t.kt)("p",null,"La funci\xf3n callback siempre debe retornar algo."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"//Sumar todos los elementos de un array\nconst numeros = [1, 2, 3, 4, 5];\n\nconst sumaTodos = numeros.reduce((acumulador, valorActual) => acumulador + valorActual);\n\nconsole.log(sumaTodos);\n\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},"El acumulador puede ser un array "))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"//Generar un array con todos los valores.\nconst arrayNumeros = [\n    [0, 1],\n    [2, 3],\n    [4, 5],\n];\n\nconst soloNumeros = arrayNumeros.reduce(\n    (acc, current) => acc.concat(current)\n);\n\nconsole.log(soloNumeros);\n\n")),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("ul",{parentName:"div"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce"},"documentacion de Reduce"))))),(0,t.kt)("p",null,"Otro Ejemplo para hacer lo mismo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"//Generar un array con todos los valores.\nconst arrayNumeros = [\n    [0, 1],\n    [2, 3],\n    [4, 5],\n];\n\nconst arrayPlano = [].concat(...arrayNumeros);\nconsole.log(arrayPlano);\n\n")),(0,t.kt)("h2",{id:"flat"},"flat()"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/flat"},"Es nuevo")),(0,t.kt)("p",null,"El m\xe9todo flat() crea una nueva matriz con todos los elementos de sub-array concatenados recursivamente hasta la profundidad especificada."),(0,t.kt)("h3",{id:"parametros-8"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Profundidad (INT) , POR DEFECTO ES 1")),(0,t.kt)("p",null,"Ejemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"//Generar un array con todos los valores.\nconst arrayNumeros = [\n    [0, 1],\n    [2, 3],\n    [4, 5],\n];\n\nconst arrayPlano = arrayNumeros.flat();\nconsole.log(arrayPlano);\n\n")),(0,t.kt)("p",null,"Ejemplo con Parametro:"),(0,t.kt)("p",null," ","[5,6]"," esta en la profundidad 2  ya que esta adentro de un sub array."),(0,t.kt)("p",null,"Entonces asignamos la profundidad "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"//Generar un array con todos los valores.\nvar arr1 = [1, 2, [3, 4, [5, 6]]];\n// Que saque hasta el nivel de profundidad 2 \nconst arrayPlano = arr1.flat(2);\nconsole.log(arrayPlano);\n\n")),(0,t.kt)("h2",{id:"split"},"split()"),(0,t.kt)("p",null,"El m\xe9todo split() divide un objeto de tipo String en un array, mediante un separador."),(0,t.kt)("p",null,"Convierte un String en array, mediante un separador."),(0,t.kt)("h3",{id:"parametros-9"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Separador (String)")),(0,t.kt)("p",null,"Ejemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const cadenaMeses = "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec";\nconst arrayMeses = cadenaMeses.split(",");\nconsole.log(arrayMeses);\n\n')),(0,t.kt)("h2",{id:"join"},"join()"),(0,t.kt)("p",null,"Lo contrario a split"),(0,t.kt)("p",null,"Convierte un array en un String, mediante un separador."),(0,t.kt)("h3",{id:"parametros-10"},"Parametros:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Separador (String)")),(0,t.kt)("p",null,"Ejemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const nuevoTexto = arrayMeses.join(",");\nconsole.log(nuevoTexto);\n\n')),(0,t.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.kt)("div",{parentName:"div",className:"admonition-heading"},(0,t.kt)("h5",{parentName:"div"},(0,t.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,t.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.kt)("div",{parentName:"div",className:"admonition-content"},(0,t.kt)("p",{parentName:"div"},'Separador: Es una cadena usada para separar cada uno de los elementos del arreglo. El separador es convertido a una cadena si es necesario. Si este se omite, los elementos del arreglo son separados con una coma (",").'))),(0,t.kt)("h2",{id:"practica"},"Practica"),(0,t.kt)("h3",{id:"html"},"HTML"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="es">\n\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Seleccionar Color</title>\n    <link\n      crossorigin="anonymous"\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"\n      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"\n      rel="stylesheet"\n    >\n</head>\n\n<body>\n\n  <main class="container mt-5">\n    <div class="row text-center">\n        <article class="col-sm-4 mb-3">\n            <div class="card">\n                <div class="card-body">\n                    <h5 class="card-title">Frutilla \ud83c\udf53</h5>\n                    <button class="btn btn-primary" data-fruta="frutilla">Agregar</button>\n                </div>\n            </div>\n        </article>\n        <article class="col-sm-4 mb-3">\n            <div class="card">\n                <div class="card-body">\n                    <h5 class="card-title">Banana \ud83c\udf4c</h5>\n                    <button class="btn btn-primary" data-fruta="banana">Agregar</button>\n                </div>\n            </div>\n        </article>\n        <article class="col-sm-4 mb-3">\n            <div class="card">\n                <div class="card-body">\n                    <h5 class="card-title">Manzana \ud83c\udf4f</h5>\n                    <button class="btn btn-primary" data-fruta="manzana">Agregar</button>\n                </div>\n            </div>\n        </article>\n    </div>\n</main>\n<section class="container mt-3">\n  <ul class="list-group" id="carrito">\n   \n  </ul>\n</section>\n\n<template id="template">\n  <li class="list-group-item d-flex justify-content-between align-items-center">\n      <span class="lead">A list item</span>\n      <span class="badge bg-primary rounded-pill">14</span>\n  </li>\n</template>\n    <script src="app.js"><\/script>\n</body>\n\n</html>\n\n')),(0,t.kt)("h3",{id:"js"},"JS"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'const carrito = document.querySelector("#carrito");\nconst template = document.querySelector("#template");\nconst fragment = document.createDocumentFragment();\nconst agregar = document.querySelectorAll(".card button");\n\n// Objeto\nconst carritoObjeto = [];\n\nconst agregarCarrito = (e) => {\n   \n    const producto = {\n        titulo: e.target.dataset.fruta,\n        id: e.target.dataset.fruta,\n        cantidad: 1,\n    };\n\n  const indice = carritoObjeto.findIndex((item) => item.id === producto.id );\n\n \n   if (indice === -1) {\n       carritoObjeto.push(producto);\n   } else {\n       carritoObjeto[indice].cantidad++;\n   }\n   \n   \n    pintarCarrito(carritoObjeto);\n};\n\nconst pintarCarrito = (array) => {\n       carrito.textContent = "";\n\n    array.forEach((item) => {\n        const clone = template.content.firstElementChild.cloneNode(true);\n        clone.querySelector(".lead").textContent = item.titulo;\n        clone.querySelector(".rounded-pill").textContent = item.cantidad;\n        fragment.appendChild(clone);\n        \n    });\n\n    carrito.appendChild(fragment);\n};\n\nagregar.forEach((boton) => boton.addEventListener("click", agregarCarrito));\n\n\n\n')),(0,t.kt)("h2",{id:"desestructurar-por-posiciones"},"Desestructurar por posiciones"),(0,t.kt)("h4",{id:"sab\xedas-que-en-javascript-puedes-desestructurar-un-array-apuntando-directamente-a-sus-posiciones"},"\xbfSab\xedas que en JavaScript puedes desestructurar un Array apuntando directamente a sus posiciones?"),(0,t.kt)("p",null,"Adem\xe1s, puedes renombrar el \xedndice por el nombre de variable que necesites:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"      const nombres = ['Fede' , 'Miguel' , 'Andrea' , 'Santi' , 'Daniela']\n\n      // Accedemos a la posicion 0 (Fede) y a la Posicion 2(Andrea)\n      const {\n        // Le asignamos el valor de nombres[indice] a nombreVariable\n        // indice : nombreVariable\n        0:variableFede ,\n        2:variableAndrea\n      } = nombres;\n\n      console.log(variableFede , variableAndrea)\n\n")))}u.isMDXComponent=!0}}]);