"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[5537],{5680:(e,n,a)=>{a.d(n,{xA:()=>m,yg:()=>g});var t=a(6540);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},m=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=o,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||r;return a?t.createElement(g,l(l({ref:n},m),{},{components:a})):t.createElement(g,l({ref:n},m))}));function g(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8118:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var t=a(8168),o=(a(6540),a(5680));const r={sidebar_position:1},l="Proyecto 1",i={unversionedId:"React-Native/readme",id:"React-Native/readme",title:"Proyecto 1",description:"React native",source:"@site/docs/React-Native/readme.md",sourceDirName:"React-Native",slug:"/React-Native/",permalink:"/documentacion/docs/React-Native/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React-Native/readme.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"ReactNative",next:{title:"Extra",permalink:"/documentacion/docs/React-Native/extra"}},s={},p=[{value:"React native",id:"react-native",level:2},{value:"\xbfQu\xe9 es app nativa?",id:"qu\xe9-es-app-nativa",level:4},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:2},{value:"1- Instalaci\xf3n",id:"1--instalaci\xf3n",level:4},{value:"2- Iniciamos el Proyecto",id:"2--iniciamos-el-proyecto",level:4},{value:"3- Iniciamos el proyecto",id:"3--iniciamos-el-proyecto",level:4},{value:"Estructura del proyecto",id:"estructura-del-proyecto",level:4},{value:"Package.json",id:"packagejson",level:5},{value:"App.js",id:"appjs",level:5},{value:"Componentes",id:"componentes",level:2},{value:"Componente StatusBar",id:"componente-statusbar",level:4},{value:"Componente Text",id:"componente-text",level:4},{value:"Componente View",id:"componente-view",level:4},{value:"Componente textInput",id:"componente-textinput",level:4},{value:"Componente Touchable***",id:"componente-touchable",level:4},{value:"Componente TouchableWithoutFeedback",id:"componente-touchablewithoutfeedback",level:4},{value:"Componente TouchableNativeFeedback",id:"componente-touchablenativefeedback",level:4},{value:"Componente alert",id:"componente-alert",level:4},{value:"Creamos una App",id:"creamos-una-app",level:2},{value:"expo-constants",id:"expo-constants",level:3},{value:"Mostrar datos",id:"mostrar-datos",level:2},{value:"Componente FlatList",id:"componente-flatlist",level:3},{value:"FlatList",id:"flatlist",level:4},{value:"Props",id:"props",level:5},{value:"props ItemSeparatorComponent",id:"props-itemseparatorcomponent",level:4},{value:"Props style",id:"props-style",level:2},{value:"Componente Item",id:"componente-item",level:2},{value:"Stylesheet",id:"stylesheet",level:2},{value:"\xbfC\xf3mo crear los estilos?",id:"c\xf3mo-crear-los-estilos",level:4},{value:"Se puede usar Arrays para estilos CSS",id:"se-puede-usar-arrays-para-estilos-css",level:4},{value:"Tema",id:"tema",level:4},{value:"Flex",id:"flex",level:2},{value:"Cuestiones CSS",id:"cuestiones-css",level:2},{value:"Imagen",id:"imagen",level:2},{value:"Cuestiones CSS #2",id:"cuestiones-css-2",level:2},{value:"AppBar",id:"appbar",level:2},{value:"Router",id:"router",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n-1",level:4},{value:"\xbfPara que sirve esto en un celular?",id:"para-que-sirve-esto-en-un-celular",level:4},{value:"\xa1Y listo ya tenemos un menu!",id:"y-listo-ya-tenemos-un-menu",level:4},{value:"Props del componente link",id:"props-del-componente-link",level:2},{value:"ScrollView",id:"scrollview",level:2},{value:"Active",id:"active",level:2},{value:"\xbfC\xf3mo saber en qu\xe9 p\xe1gina estamos?",id:"c\xf3mo-saber-en-qu\xe9-p\xe1gina-estamos",level:4},{value:"StatusBar",id:"statusbar",level:2},{value:"Como ejecutar codigo solo en Android",id:"como-ejecutar-codigo-solo-en-android",level:2},{value:"1 Manera - Platform.OS",id:"1-manera---platformos",level:3},{value:"2 Manera - Platform.select()",id:"2-manera---platformselect",level:3},{value:"M\xe9todo select()",id:"m\xe9todo-select",level:4},{value:"Otro ejemplo",id:"otro-ejemplo",level:4},{value:"3 Manera - Elegir entre dos componentes",id:"3-manera---elegir-entre-dos-componentes",level:3},{value:"4 Manera - Elegir entre dos componentes #2",id:"4-manera---elegir-entre-dos-componentes-2",level:3},{value:"Formulario con formik",id:"formulario-con-formik",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n-2",level:4},{value:"Componente formik",id:"componente-formik",level:4},{value:"Componente TextInput",id:"componente-textinput-1",level:4},{value:"Render Children",id:"render-children",level:4},{value:"Funcionalidades",id:"funcionalidades",level:4},{value:"values",id:"values",level:4},{value:"handleChange()",id:"handlechange",level:4},{value:"handleSubmit()",id:"handlesubmit",level:4},{value:"Componente Button",id:"componente-button",level:4},{value:"StyledTextInput",id:"styledtextinput",level:3},{value:"Hook useField",id:"hook-usefield",level:3},{value:"Validaciones con Formik",id:"validaciones-con-formik",level:2},{value:"1 Forma",id:"1-forma",level:3},{value:"1- Crear una funcion que recibe todos los valores del formulario.",id:"1--crear-una-funcion-que-recibe-todos-los-valores-del-formulario",level:4},{value:"2-  A trav\xe9s de la props validate de &lt;Formik&gt;  especificamos que funcion se ejecutara para validar los campos (input) del formulario.",id:"2---a-trav\xe9s-de-la-props-validate-de-formik--especificamos-que-funcion-se-ejecutara-para-validar-los-campos-input-del-formulario",level:4},{value:"3- Tenemos que comprobar si existe errores en el formulario, para poder mostr\xe1rselo al usuario.",id:"3--tenemos-que-comprobar-si-existe-errores-en-el-formulario-para-poder-mostr\xe1rselo-al-usuario",level:4},{value:"Bordes del input",id:"bordes-del-input",level:4},{value:"Esta forma es \xfatil cuando:",id:"esta-forma-es-\xfatil-cuando",level:4},{value:"2 Forma",id:"2-forma",level:3},{value:"YUP",id:"yup",level:4},{value:"Pasos",id:"pasos",level:4},{value:"1- Instalaci\xf3n",id:"1--instalaci\xf3n-1",level:4},{value:"2- Esquema",id:"2--esquema",level:4},{value:"yup.object().shape()",id:"yupobjectshape",level:4},{value:"Metodos de validaci\xf3n",id:"metodos-de-validaci\xf3n",level:4},{value:"3-  Formik tiene la props validationSchema , el cual recibe el esquema  de validaci\xf3n para usar en el formulario.",id:"3---formik-tiene-la-props-validationschema--el-cual-recibe-el-esquema--de-validaci\xf3n-para-usar-en-el-formulario",level:4},{value:"Backend",id:"backend",level:2},{value:"Pasos",id:"pasos-1",level:4},{value:"Consumir backend",id:"consumir-backend",level:2},{value:"Hook useRepositories",id:"hook-userepositories",level:2}],m={toc:p},u="wrapper";function c(e){let{components:n,...a}=e;return(0,o.yg)(u,(0,t.A)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"proyecto-1"},"Proyecto 1"),(0,o.yg)("h2",{id:"react-native"},"React native"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"React Native, es un framework de c\xf3digo abierto creado por Meta Platforms, Inc. Se utiliza para desarrollar aplicaciones para Android,  Android TV,  iOS, macOS,  tvOS, Web,  Windows y UWP al permitir que los desarrolladores usen React con las caracter\xedsticas nativas de estas plataformas."),(0,o.yg)("li",{parentName:"ul"},"El c\xf3digo se ejecutara de manera nativa para Android y iOS."),(0,o.yg)("li",{parentName:"ul"},"React native te permite  renderizar un componente especifico dependiendo en que sistema operativo estes."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/environment-setup"},"Guia de instalaci\xf3n"))),(0,o.yg)("h4",{id:"qu\xe9-es-app-nativa"},"\xbfQu\xe9 es app nativa?"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Una app nativa es aquella que ha sido desarrollada en el lenguaje de programaci\xf3n espec\xedfico de un sistema operativo. Es decir, si hablamos de Android, la app nativa habr\xe1 sido desarrollada con el lenguaje de programaci\xf3n Kotlin o Java"),(0,o.yg)("li",{parentName:"ul"},"La aplicaci\xf3n nativa est\xe1 desarrollada y optimizada espec\xedficamente para el sistema operativo determinado y la plataforma de desarrollo del fabricante (Android, iOS, etc). "),(0,o.yg)("li",{parentName:"ul"},"Este tipo de aplicaciones se adapta al 100% con las funcionalidades y caracter\xedsticas del dispositivo obteniendo as\xed una mejor experiencia de uso")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Info")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://actualizatec.com/blog/app-nativa/#:~:text=Una%20app%20nativa%20es%20aquella,de%20programaci%C3%B3n%20Kotlin%20o%20Java"},"\xbfQu\xe9 es una App Nativa? Caracter\xedsticas y ventajas")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://www.raona.com/aplicacion-nativa-web-hibrida/"},"\xbfApp nativa, web o h\xedbrida?"))))),(0,o.yg)("h2",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vamos a utilizar ",(0,o.yg)("a",{parentName:"li",href:"https://expo.dev/"},"Expo")," , que es una plataforma que utiliza react native y que adem\xe1s le prev\xe9 diferentes librer\xedas, bibliotecas y diferentes tipos de mejoras."),(0,o.yg)("li",{parentName:"ul"},"Es la plataforma por defecto para desarollar en react native.")),(0,o.yg)("h4",{id:"1--instalaci\xf3n"},"1- Instalaci\xf3n"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"},"npm install -g expo-cli \n")),(0,o.yg)("h4",{id:"2--iniciamos-el-proyecto"},"2- Iniciamos el Proyecto"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"},"expo init Nombre_Proyecto\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Nombre_Proyecto es cualquier nombre."),(0,o.yg)("li",{parentName:"ul"},"Nos va a preguntar que plantilla (template)  usar :",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Uno vacio (este vamos a usar)"),(0,o.yg)("li",{parentName:"ul"},"Uno vacio con typescripts"),(0,o.yg)("li",{parentName:"ul"},"Uno con tabs (tiene paginas hechas) y typescript"),(0,o.yg)("li",{parentName:"ul"},"Minimal (contiene lo esencial para arrancar) "))),(0,o.yg)("li",{parentName:"ul"},"Al terminar de ejecutar el comando, nos mostrar\xeda una serie de pasos para ejecutar el proyecto que creamos.")),(0,o.yg)("h4",{id:"3--iniciamos-el-proyecto"},"3- Iniciamos el proyecto"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Ejecutamos el siguiente comando dentro de la carpeta del proyecto")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"},"npm start \n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Una vez ejecutado el proyecto, podes abrirlo desde el navegador, Android, iOS , emulador , etc."),(0,o.yg)("li",{parentName:"ul"},"Todas estas opciones se muestran en la consola al ejecutar el \u201cstart\u201d.")),(0,o.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Te puede pedir que instales algunas dependencias para ejecutar el proyecto en alguna plataforma especifica.")))),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Con la opcion open Android pod\xe9s simular un celular con Android Studio"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/environment-setup"},"Click aqu\xed para ver la configuraci\xf3n y instalaci\xf3n necesaria\u2026")," ")))),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"En un celular con \u201ccontrol + m\u201d abr\xeds un menu de expo"))),(0,o.yg)("h4",{id:"estructura-del-proyecto"},"Estructura del proyecto"),(0,o.yg)("h5",{id:"packagejson"},"Package.json"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Hay scripts para todos los SO"),(0,o.yg)("li",{parentName:"ul"},"La depedencia react-native-web se utiliza para renderizar la app en la web.")),(0,o.yg)("h5",{id:"appjs"},"App.js"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es una app de React"),(0,o.yg)("li",{parentName:"ul"},"En el archivo estamos renderizando un componente VIEW con los estilos del objeto styles.container "),(0,o.yg)("li",{parentName:"ul"},"Dentro del componente View, se renderiza Text y StatusBar.")),(0,o.yg)("h2",{id:"componentes"},"Componentes"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/components-and-apis"},"Componentes Basicos y APIs"))),(0,o.yg)("h4",{id:"componente-statusbar"},"Componente StatusBar"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Nos permite controlar la barra de estado de la app dependiendo del dispositivo. "),(0,o.yg)("li",{parentName:"ul"},"La barra de estado es la zona, generalmente en la parte superior de la pantalla, que muestra la hora actual, la informaci\xf3n de la red Wi-Fi y celular, el nivel de la bater\xeda y/u otros \xedconos de estado.")),(0,o.yg)("h4",{id:"componente-text"},"Componente Text"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El componente Text, tiene el texto que se va a mostrar."),(0,o.yg)("li",{parentName:"ul"},"Text es el \xfanico componente de React Native, para renderizar texto")),(0,o.yg)("h4",{id:"componente-view"},"Componente View"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es el componente b\xe1sico para crear cualquier interfaz."),(0,o.yg)("li",{parentName:"ul"},"Una vista (view) puede tener varios componentes adentro (incluso una vista)"),(0,o.yg)("li",{parentName:"ul"},"Se podr\xeda decir que es una etiqueta ","<","div> con flexbox.")),(0,o.yg)("h4",{id:"componente-textinput"},"Componente textInput"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Representa un input de HTML")),(0,o.yg)("h4",{id:"componente-touchable"},"Componente Touchable***"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Representa los botones."),(0,o.yg)("li",{parentName:"ul"},"Hay varios tipos de botones , pero todos empiezan con la palabra \u201cTouchable\u201d"),(0,o.yg)("li",{parentName:"ul"},"Te permite capturar los eventos de cuando el usuario hace una especie de \u201cclick\u201d."),(0,o.yg)("li",{parentName:"ul"},"Touchable",(0,o.yg)("strong",{parentName:"li"},"***")," es el \xfanico componente que se puede hacer click (que es tocable)")),(0,o.yg)("h4",{id:"componente-touchablewithoutfeedback"},"Componente TouchableWithoutFeedback"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es un boton que no hace ning\xfan efecto cuando hace click (por eso \u201csin feedback)"),(0,o.yg)("li",{parentName:"ul"},"Solo puede contener un hijo.")),(0,o.yg)("p",null,"App.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { StyleSheet, Text, View , TouchableWithoutFeedback , Alert } from 'react-native';\n\n\n\nexport default function App() {\n  console.log('Se ejecuta');\n  return (\n    <View style={styles.container}>\n      <TouchableWithoutFeedback onPress={()=> {\n        // El metodo alert(string) genera una alerta con el string en su interior\n        Alert.alert('Hemos tocado el texto!')\n      }}>\n      <Text>Hola boludo!</Text>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n")),(0,o.yg)("h4",{id:"componente-touchablenativefeedback"},"Componente TouchableNativeFeedback"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es un componente que hace alg\xfan efecto cuando se hace click (tiene feedback)"),(0,o.yg)("li",{parentName:"ul"},"Es un contenedor para hacer que las vistas respondan correctamente a los toques (solo Android)."),(0,o.yg)("li",{parentName:"ul"},"Solo admite tener una \xfanica instancia de View como nodo secundario(hijo)")),(0,o.yg)("h4",{id:"componente-alert"},"Componente alert"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Como su nombre lo dice, sirve para alertas")),(0,o.yg)("h2",{id:"creamos-una-app"},"Creamos una App"),(0,o.yg)("p",null,"Src/components/Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"\nimport {Text , View} from 'react-native'\n\nconst Main = ()=> {\n    return (\n        <View>\n            <Text>Aplicaci\xf3n</Text>\n        </View>\n    )\n}\n\nexport default Main\n\n")),(0,o.yg)("p",null,"App.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import {  View  } from 'react-native';\nimport Main from './src/components/Main';\n\n\nexport default function App() {\n  console.log('Se ejecuta');\n  return (\n   <View>\n      <Main></Main>\n   </View>\n  );\n}\n\n")),(0,o.yg)("h3",{id:"expo-constants"},"expo-constants"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El codigo anterior tiene un problema: el texto se renderiza en el punto 0 0 y no se ve."),(0,o.yg)("li",{parentName:"ul"},"Para solucionar el problema , tenemos que usar las constantes de expo-constants"),(0,o.yg)("li",{parentName:"ul"},"De forma nativa, no se puede usar CSS. Pero el componente View tiene la props style para manejar el \u201cestilo\u201d de la APP."),(0,o.yg)("li",{parentName:"ul"},"Dependiendo de la plataforma en la que ejecutes el programa , los valores de las constantes de  expo-constants son diferentes. Estos valores son \xfatiles para la props Style."),(0,o.yg)("li",{parentName:"ul"},"Por ejemplo : la constante (propiedad) statusBarHeight es la altura predeterminada de la barra de estado para el dispositivo.")),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import Constants from 'expo-constants'\n\nconst Main = ()=> {\n    return (\n        <View style={{marginTop : Constants.statusBarHeight}}>\n            <Text>Aplicaci\xf3n</Text>\n        </View>\n    )\n}\n\n")),(0,o.yg)("h2",{id:"mostrar-datos"},"Mostrar datos"),(0,o.yg)("p",null,"data/data.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const repositories = [\n  {\n    id: 'jaredpalmer.formik',\n    fullName: 'jaredpalmer/formik',\n    description: 'Build forms in React, without the tears',\n    language: 'TypeScript',\n    forksCount: 1589,\n    stargazersCount: 21553,\n    ratingAverage: 88,\n    reviewCount: 4,\n    ownerAvatarUrl: 'https://avatars2.githubusercontent.com/u/4060187?v=4',\n  },\n  {\n    id: 'rails.rails',\n    fullName: 'rails/rails',\n    description: 'Ruby on Rails',\n    language: 'Ruby',\n    forksCount: 18349,\n    stargazersCount: 45377,\n    ratingAverage: 100,\n    reviewCount: 2,\n    ownerAvatarUrl: 'https://avatars1.githubusercontent.com/u/4223?v=4',\n  },\n  {\n    id: 'django.django',\n    fullName: 'django/django',\n    description: 'The Web framework for perfectionists with deadlines.',\n    language: 'Python',\n    forksCount: 21015,\n    stargazersCount: 48496,\n    ratingAverage: 73,\n    reviewCount: 5,\n    ownerAvatarUrl: 'https://avatars2.githubusercontent.com/u/27804?v=4',\n  },\n  {\n    id: 'reduxjs.redux',\n    fullName: 'reduxjs/redux',\n    description: 'Predictable state container for JavaScript apps',\n    language: 'TypeScript',\n    forksCount: 13902,\n    stargazersCount: 52869,\n    ratingAverage: 0,\n    reviewCount: 0,\n    ownerAvatarUrl: 'https://avatars3.githubusercontent.com/u/13142323?v=4',\n  },{\n    id: 'reduxjs.redux2',\n    fullName: 'reduxjs/redux',\n    description: 'Predictable state container for JavaScript apps',\n    language: 'TypeScript',\n    forksCount: 13902,\n    stargazersCount: 52869,\n    ratingAverage: 0,\n    reviewCount: 0,\n    ownerAvatarUrl: 'https://avatars3.githubusercontent.com/u/13142323?v=4',\n  },{\n    id: 'reduxjs.redux3',\n    fullName: 'reduxjs/redux',\n    description: 'Predictable state container for JavaScript apps',\n    language: 'TypeScript',\n    forksCount: 13902,\n    stargazersCount: 52869,\n    ratingAverage: 0,\n    reviewCount: 0,\n    ownerAvatarUrl: 'https://avatars3.githubusercontent.com/u/13142323?v=4',\n  },{\n    id: 'reduxjs.redux4',\n    fullName: 'reduxjs/redux',\n    description: 'Predictable state container for JavaScript apps',\n    language: 'TypeScript',\n    forksCount: 13902,\n    stargazersCount: 52869,\n    ratingAverage: 0,\n    reviewCount: 0,\n    ownerAvatarUrl: 'https://avatars3.githubusercontent.com/u/13142323?v=4',\n  }\n];\n\nexport default repositories;\n\n")),(0,o.yg)("p",null,"src/components/RepositoryList.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"\nimport {View , Text} from 'react-native';\nimport repositories from '../../data/data';\n\nconst RepositoryList = () => {\n  \n    return (\n        <View>\n         \n            {\n                repositories.map(repo => (\n                    <View key={repo.id}>\n                         <Text>id: {repo.id}</Text>\n                         <Text>Fullname: {repo.fullName}</Text>\n                         <Text>Description : {repo.description}</Text>\n                         <Text>Language: {repo.language}</Text>\n                         <Text>Stars : {repo.stargazersCount}</Text>\n                         <Text>Forks : {repo.forksCount}</Text>\n                         <Text>Review : {repo.reviewCount}</Text>\n                         <Text> Rating : {repo.ratingAverage}</Text>\n                    </View>\n                ))\n            }\n        </View>\n    )\n}\n\nexport default RepositoryList;\n\n")),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import {Text , View} from 'react-native'\nimport Constants from 'expo-constants'\nimport RepositoryList from './RepositoryList'\n\nconst Main = ()=> {\n    return (\n        <View style={{marginTop : Constants.statusBarHeight}}>\n            <Text>Aplicaci\xf3n</Text>\n            <RepositoryList />\n        </View>\n    )\n}\n\nexport default Main\n\n")),(0,o.yg)("h3",{id:"componente-flatlist"},"Componente FlatList"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El codigo anterior tiene un problema: La informaci\xf3n no \u201ccabe / entra\u201d en la pantalla / viewport y encima no se puede scrollear."),(0,o.yg)("li",{parentName:"ul"},"El componente View NO TIENE SCROLL."),(0,o.yg)("li",{parentName:"ul"},"Hay dos componentes que te permiten hacer scroll:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"FlatList : Se utiliza para renderizar listas"),(0,o.yg)("li",{parentName:"ul"},"ScrollView : Es una vista especial que te permite tener scroll.")))),(0,o.yg)("h4",{id:"flatlist"},"FlatList"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Entonces el FlatList se utiliza para listas (cuando renderizas con map u otro m\xe9todo que recorre alg\xfan tipo de dato) . "),(0,o.yg)("li",{parentName:"ul"},"Esto sirve para mejorar el rendimiento"),(0,o.yg)("li",{parentName:"ul"},"Si el contenido que queres renderizar no contiene una lista , tenes que utilizar el componente ScrollView para hacer scroll.")),(0,o.yg)("h5",{id:"props"},"Props"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"data : Especifica el \u201carray / objeto / etc \u201c que queremos recorrer."),(0,o.yg)("li",{parentName:"ul"},"renderItem \t: Recibe un m\xe9todo que indicara como renderizar cada item de data.  Como par\xe1metro tiene el item de cada recorrido. Se podr\xeda decir que su valor es el par\xe1metro de map().")),(0,o.yg)("p",null,"RepositoryList.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View, Text, FlatList } from "react-native";\nimport repositories from "../../data/data";\n\nconst RepositoryList = () => {\n  return (\n    <View>\n      <FlatList\n        data={repositories}\n        renderItem={({ item: repo }) => (\n          <View key={repo.id}>\n            <Text>id: {repo.id}</Text>\n            <Text>Fullname: {repo.fullName}</Text>\n            <Text>Description : {repo.description}</Text>\n            <Text>Language: {repo.language}</Text>\n            <Text>Stars : {repo.stargazersCount}</Text>\n            <Text>Forks : {repo.forksCount}</Text>\n            <Text>Review : {repo.reviewCount}</Text>\n            <Text> Rating : {repo.ratingAverage}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default RepositoryList;\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Ahora si se puede scrollear!"))),(0,o.yg)("h4",{id:"props-itemseparatorcomponent"},"props ItemSeparatorComponent"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El componente FlatList tambi\xe9n tiene la props ItemSeparatorComponent cuyo valor es una funcion que devuelve algo."),(0,o.yg)("li",{parentName:"ul"},"Lo que devuelve es lo que se renderizara entre \xedtems para generar un \u201cespacio\u201d")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"<FlatList\n        data={repositories}\n        ItemSeparatorComponent={ () => (<Text></Text>)}\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Entre items , se renderizara un componente Text vacio , provocando que all\xe1 una l\xednea en blanco entre componentes."))),(0,o.yg)("h2",{id:"props-style"},"Props style"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"La props style la tienen todos los componentes , sirven para dar estilos CSS.")),(0,o.yg)("p",null,"RepositoryList"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const RepositoryList = () => {\n  return (\n    <View>\n      <FlatList\n      style = {{padding:20 , paddingBottom : 5 , paddingTop:5 }}\n        data={repositories}\n        ItemSeparatorComponent={ () => (<Text></Text>)}\n        renderItem={({ item: repo }) => (\n          <View key={repo.id}>\n            <Text style={{fontWeight:'bold' , marginBottom:5}}>id: {repo.id}</Text>\n            <Text>Fullname: {repo.fullName}</Text>\n            <Text>Description : {repo.description}</Text>\n            <Text>Language: {repo.language}</Text>\n            <Text>Stars : {repo.stargazersCount}</Text>\n            <Text>Forks : {repo.forksCount}</Text>\n            <Text>Review : {repo.reviewCount}</Text>\n            <Text> Rating : {repo.ratingAverage}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"En el padding ponemos un numero sin especificar la medida, pero son pixeles (react native se encarga de esto). Esto sucede con todas las propiedades que necesitan una medida."),(0,o.yg)("li",{parentName:"ul"},"React native se encarga de especificar los pixeles naturales del dispositivo (cada dispositivo tiene un pixel especifico)"),(0,o.yg)("li",{parentName:"ul"},"Las propiedades con mas de una palabra , se especifica como camelCase")))),(0,o.yg)("h2",{id:"componente-item"},"Componente Item"),(0,o.yg)("p",null,"RepositoryList.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import {  Text, FlatList } from "react-native";\nimport repositories from "../../data/data";\nimport RepositoryItem from "./RepositoryItem";\n\nconst RepositoryList = () => {\n  return (\n      <FlatList\n      style = {{padding:20 , paddingBottom : 5 , paddingTop:5 }}\n        data={repositories}\n        ItemSeparatorComponent={ () => (<Text></Text>)}\n        renderItem={({ item: repo }) => (\n         <RepositoryItem  {...repo}/>\n        )}\n      />\n  );\n};\n\nexport default RepositoryList;\n\n')),(0,o.yg)("p",null,"Components/RepositoryItem.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text } from \"react-native\";\nconst RepositoryItem = (props) => (\n    <View key={props.id}>\n            <Text style={{fontWeight:'bold' , marginBottom:5}}>id: {props.id}</Text>\n            <Text>Fullname: {props.fullName}</Text>\n            <Text>Description : {props.description}</Text>\n            <Text>Language: {props.language}</Text>\n            <Text>Stars : {props.stargazersCount}</Text>\n            <Text>Forks : {props.forksCount}</Text>\n            <Text>Review : {props.reviewCount}</Text>\n            <Text> Rating : {props.ratingAverage}</Text>\n          </View>\n)\n\nexport default RepositoryItem;\n\n")),(0,o.yg)("h2",{id:"stylesheet"},"Stylesheet"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"React native tiene una forma de simular las hojas de estilos de la web."),(0,o.yg)("li",{parentName:"ul"},"No son exactamente hojas de estilos porque no se pueden hacer global."),(0,o.yg)("li",{parentName:"ul"},"Podes crear estas hojas de estilos fuera de un componente para que sea mas optimo y as\xed evitar que se cree el objeto style por cada componente que se va a renderizar , afectando el rendimiento de la APP ."),(0,o.yg)("li",{parentName:"ul"},"Ejemplo:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Cada vez que se renderice RepositoryItem , se creara un objeto que pertenece a la props style , afectando el rendimiento de la APP."),(0,o.yg)("li",{parentName:"ul"},"Estas \u201chojas de estilos\u201d solucionar\xedan este problema, ya que se ubicar\xedan afuera del componente.")))),(0,o.yg)("h4",{id:"c\xf3mo-crear-los-estilos"},"\xbfC\xf3mo crear los estilos?"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Importamos Stylesheet de react-native"),(0,o.yg)("li",{parentName:"ol"},"Usamos el metodo create() que recibe un objeto , cuya estructura es:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"{\n    container : {\n        propiedadCSS : valor ,\n        propiedadCSS : valor ,\n    } , \n    NombreContenedor : {\n      propiedadCSS : valor ,\n        propiedadCSS : valor ,\n    } ,\n   \u2026\n}\n\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Podemos crear los NombreContenedor que quieras con el nombre que te plazca."),(0,o.yg)("li",{parentName:"ul"},"Cada propiedad de primer nivel es un objeto (contenedor) que contiene propiedades CSS."),(0,o.yg)("li",{parentName:"ul"},"Como podr\xe1s notar, las propiedades CSS se ubican adentro de alg\xfan contenedor (propiedad container u otra propiedad que creaste)"),(0,o.yg)("li",{parentName:"ul"},"El m\xe9todo create() devuelve un objeto que se utilizara en algun componente para aplicar alguna propiedad CSS que se especific\xf3.")),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},'En la props style de alg\xfan componente , especificamos que propiedad CSS utilizar con el objeto que creamos . Si usamos alguna propiedad "contenedor", estaremos aplicando TODAS las propiedades que se defini\xf3 adentro de esta.')),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text  , StyleSheet} from \"react-native\";\n\n\n\nconst RepositoryItem = (props) => (\n    <View key={props.id} style={styles.container}>\n            <Text style={styles.strong}>id: {props.id}</Text>\n            <Text>Fullname: {props.fullName}</Text>\n            <Text>Description : {props.description}</Text>\n            <Text>Language: {props.language}</Text>\n            <Text>Stars : {props.stargazersCount}</Text>\n            <Text>Forks : {props.forksCount}</Text>\n            <Text>Review : {props.reviewCount}</Text>\n            <Text> Rating : {props.ratingAverage}</Text>\n          </View>\n)\n\nconst styles = StyleSheet.create({\n    container : {\n        padding:20,\n        paddingBottom:5,\n        paddingTop:5,\n    } ,\n    strong : {\n        color : '#09f',\n        fontWeight:'bold',\n        marginBottom:5\n    }\n})\nexport default RepositoryItem;\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},'A la props style generalmente se le asigna un "contenedor" del objeto styles')))),(0,o.yg)("h4",{id:"se-puede-usar-arrays-para-estilos-css"},"Se puede usar Arrays para estilos CSS"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Cada objeto del array seria un \u201ccontenedor\u201d con propiedades CSS."),(0,o.yg)("li",{parentName:"ul"},"Si especificamos el array completo en la props style, se aplicar\xedan todas las propiedades CSS de todos los contenedores.")),(0,o.yg)("p",null,"components/StyledText.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text  , StyleSheet} from \"react-native\";\n\nconst styles = StyleSheet.create({\n    text : {\n        fontSize:12,\n        color:'grey'\n    } ,\n    bold: {\n        fontWeight:'bold'\n    } ,\n    blue : {\n        color : 'blue'\n    } ,\n    big: {\n        fontSize:20\n    } , \n    small : {\n        fontSize:10\n    }\n})\n\nexport default function StyleText ({blue , bold , children , big , small}) {\n\n    const  textStyles = [\n        styles.text , \n        blue && styles.blue ,\n        big && styles.big ,\n        small && styles.small ,\n        bold && styles.bold\n    ]\n\n   \n      return (\n        <Text style={textStyles}>\n            {children}\n        </Text>\n      )\n} \n\n")),(0,o.yg)("p",null,"components/StyledText.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text  , StyleSheet} from \"react-native\";\n\nconst styles = StyleSheet.create({\n    text : {\n        fontSize:12,\n        color:'grey'\n    } ,\n    bold: {\n        fontWeight:'bold'\n    } ,\n    blue : {\n        color : 'blue'\n    } ,\n    big: {\n        fontSize:20\n    } , \n    small : {\n        fontSize:10\n    }\n})\n\nexport default function StyleText ({blue , bold , children , big , small}) {\n\n    const  textStyles = [\n        styles.text , \n        blue && styles.blue ,\n        big && styles.big ,\n        small && styles.small ,\n        bold && styles.bold\n    ]\n\n   \n      return (\n        <Text style={textStyles}>\n            {children}\n        </Text>\n      )\n} \n\n")),(0,o.yg)("p",null,"RepositoryItem.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View, Text  , StyleSheet} from "react-native";\nimport StyleText from "./StyledText";\n\n\n\nconst RepositoryItem = (props) => (\n    <View key={props.id} style={styles.container}>\n            <StyleText big bold>id: {props.id}</StyleText>\n            <StyleText blue>Fullname: {props.fullName}</StyleText >\n            <StyleText bold>Description : {props.description}</StyleText>\n            <StyleText blue>Language: {props.language}</StyleText>\n            <StyleText small>Stars : {props.stargazersCount}</StyleText>\n            <StyleText small>Forks : {props.forksCount}</StyleText>\n            <StyleText small>Review : {props.reviewCount}</StyleText>\n            <StyleText small> Rating : {props.ratingAverage}</StyleText>\n          </View>\n)\n\nconst styles = StyleSheet.create({\n    container : {\n        padding:20,\n        paddingBottom:5,\n        paddingTop:5,\n    } ,\n})\nexport default RepositoryItem;\n\n')),(0,o.yg)("h4",{id:"tema"},"Tema"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Esto es una buena pr\xe1ctica.")),(0,o.yg)("p",null,"Src/theme.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'export default theme = {\n  colors: {\n    textPrimary: "#24292e",\n    textSecondary: "#586069",\n    primary: "#0366d6",\n  },\n  fontSizes: {\n    body: 14,\n    subHeading: 16,\n  },\n  fonts: {\n    main: "System",\n  },\n  fontWeight: {\n    normal: "400",\n    bold: "700",\n  },\n};\n\n')),(0,o.yg)("p",null,"StyleText.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text, StyleSheet } from \"react-native\";\n\nimport theme from \"../theme.js\";\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: theme.fontSizes.body,\n    color: theme.colors.textPrimary,\n    fontWeight: theme.fontWeight.normal,\n  },\n  colorPrimary: {\n    color: theme.colors.textPrimary,\n  },\n  colorSecondary: {\n    color: theme.colors.textSecondary,\n  },\n  bold: {\n    fontWeight: theme.fontWeight.bold,\n  },\n  subHeading: {\n    fontSize: theme.fontSizes.subHeading,\n  },\n});\n\nexport default function StyleText({children , color , fontSize , fontWeight , style , ...restOfProps }) {\n  const textStyles = [\n    styles.text,\n    color === 'primary' && styles.colorPrimary,\n    color === 'secondary' && styles.colorSecondary,\n    fontSize === 'subheading' && styles.subHeading,\n    fontWeight === 'bold' && styles.bold\n\n  ];\n\n  return <Text style={textStyles} {...restOfProps}>{children}</Text>;\n}\n\n")),(0,o.yg)("p",null,"RepositoryItems.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const RepositoryItem = (props) => (\n    <View key={props.id} style={styles.container}>\n            <StyleText fontWeight='bold' fontSize='subheading' >{props.fullName}</StyleText >\n            <StyleText >{props.description}</StyleText>\n            <StyleText >{props.language}</StyleText>\n            <StyleText >Stars : {props.stargazersCount}</StyleText>\n            <StyleText >Forks : {props.forksCount}</StyleText>\n            <StyleText >Review : {props.reviewCount}</StyleText>\n            <StyleText >Rating : {props.ratingAverage}</StyleText>\n          </View>\n)\n\nconst styles = StyleSheet.create({\n    container : {\n        padding:20,\n        paddingBottom:5,\n        paddingTop:5,\n    } ,\n})\nexport default RepositoryItem;\n\n")),(0,o.yg)("h2",{id:"flex"},"Flex"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Flexbox es la base para estilar en React native."),(0,o.yg)("li",{parentName:"ul"},"Todos los componentes View tiene por defecto un ",(0,o.yg)("strong",{parentName:"li"},'"display : flex"')," y ",(0,o.yg)("strong",{parentName:"li"},'"flex-direction : column"'))),(0,o.yg)("p",null,"RepositoryItem.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View, Text, StyleSheet } from "react-native";\nimport StyleText from "./StyledText";\nimport RepositoryStats from "./RepositoryStats";\n\n\n\n\n\nconst RepositoryItem = (props) => (\n  <View key={props.id} style={styles.container}>\n    <StyleText fontWeight="bold" fontSize="subheading">\n      {props.fullName}\n    </StyleText>\n    <StyleText>{props.description}</StyleText>\n    <StyleText>{props.language}</StyleText>\n    <RepositoryStats {...props} />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n});\nexport default RepositoryItem;\n\n')),(0,o.yg)("p",null,"RepositoryStat.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View} from "react-native";\nimport StyleText from "./StyledText";\nconst parseThousands = value => {\n    return value >= 1000 ? `${Math.round(value / 100) / 10} k ` : String(value)\n}\nconst RepositoryStats = (props) => {\n    return (\n      <View style={{ flexDirection: "row", justifyContent: "space-around" }}>\n        <View>\n        <StyleText align="center" fontWeight="bold">{parseThousands(props.stargazersCount)}</StyleText>\n          <StyleText align="center" >\n            Stars\n          </StyleText>\n        \n        </View>\n        <View>\n        <StyleText align="center" fontWeight="bold">{parseThousands(props.forksCount)}</StyleText>\n          <StyleText  align="center">\n            Forks\n          </StyleText>\n         \n        </View>\n        <View>\n        <StyleText align="center" fontWeight="bold">{parseThousands(props.reviewCount)}</StyleText>\n          <StyleText align="center" >\n            Review\n          </StyleText>\n         \n        </View>\n        <View>\n        <StyleText align="center" fontWeight="bold">{parseThousands(props.ratingAverage)}</StyleText>\n          <StyleText align="center" >\n            Rating\n          </StyleText>\n         \n        </View>\n      </View>\n    );\n  };\n\n  export default RepositoryStats;\n\n')),(0,o.yg)("p",null,"StyleText.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text, StyleSheet } from \"react-native\";\n\nimport theme from \"../theme.js\";\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: theme.fontSizes.body,\n    color: theme.colors.textPrimary,\n    fontWeight: theme.fontWeight.normal,\n  },\n  colorPrimary: {\n    color: theme.colors.textPrimary,\n  },\n  colorSecondary: {\n    color: theme.colors.textSecondary,\n  },\n  bold: {\n    fontWeight: theme.fontWeight.bold,\n  },\n  subHeading: {\n    fontSize: theme.fontSizes.subHeading,\n  },\n  textAlignCenter: {\n    textAlign:'center'\n  }\n});\n\nexport default function StyleText({children , color , fontSize , fontWeight , style ,align ,  ...restOfProps }) {\n  const textStyles = [\n    styles.text,\n    align === 'center' && styles.textAlignCenter ,\n    color === 'primary' && styles.colorPrimary,\n    color === 'secondary' && styles.colorSecondary,\n    fontSize === 'subheading' && styles.subHeading,\n    fontWeight === 'bold' && styles.bold\n\n  ];\n\n  return <Text style={textStyles} {...restOfProps}>{children}</Text>;\n}\n\n")),(0,o.yg)("h2",{id:"cuestiones-css"},"Cuestiones CSS"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"La  propiedad CSS background no es valida"),(0,o.yg)("li",{parentName:"ul"},"Los shorthands (algunos funcionan) est\xe1n prohibidos en react native. React native creo propiedades CSS para remplazar los shorthands."),(0,o.yg)("li",{parentName:"ul"},"Si usas las palabras claves para especificar un \u201ccolor\u201d (ejemplo: blue), puede ser que react native ponga una tonalidad diferente en cada dispositivo"),(0,o.yg)("li",{parentName:"ul"},"Si moves un elemento flexbox (con alignSelf por ej) , el elemento solo ocupara el espacio del contenido (actuando como si fuera un elemento en linea) . Si no lo moves , el elemento ocupara todo el ancho (actuando como si fuera un elemento en bloque)."),(0,o.yg)("li",{parentName:"ul"},"Para que la propiedad border-radius haga efecto , se debe especificar un overflow:hidden (hay excepciones).")),(0,o.yg)("p",null,"RepositoryItem"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View,  StyleSheet } from "react-native";\nimport StyleText from "./StyledText";\nimport RepositoryStats from "./RepositoryStats";\nimport theme from "../theme";\n\n\n\n\nconst RepositoryItem = (props) => (\n  <View key={props.id} style={styles.container}>\n    <StyleText fontWeight="bold" fontSize="subheading">\n      {props.fullName}\n    </StyleText>\n    <StyleText>{props.description}</StyleText>\n    <StyleText style={styles.language}>{props.language}</StyleText>\n    <RepositoryStats {...props} />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  language: {\n    padding:4,\n    color: theme.colors.white ,\n    backgroundColor:theme.colors.primary ,\n    alignSelf : \'flex-start\',\n    borderRadius:4,\n    overflow:\'hidden\'\n  }\n});\nexport default RepositoryItem;\n\n')),(0,o.yg)("p",null,"StyledText"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, Text, StyleSheet } from \"react-native\";\n\nimport theme from \"../theme.js\";\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: theme.fontSizes.body,\n    color: theme.colors.textPrimary,\n    fontWeight: theme.fontWeight.normal,\n  }, \n  colorPrimary: {\n    color: theme.colors.textPrimary,\n  },\n  colorSecondary: {\n    color: theme.colors.textSecondary,\n  },\n  bold: {\n    fontWeight: theme.fontWeight.bold,\n  },\n  subHeading: {\n    fontSize: theme.fontSizes.subHeading,\n  },\n  textAlignCenter: {\n    textAlign:'center'\n  }\n});\n\nexport default function StyleText({children , color , fontSize , fontWeight , style ,align ,  ...restOfProps }) {\n  const textStyles = [\n    styles.text,\n    align === 'center' && styles.textAlignCenter ,\n    color === 'primary' && styles.colorPrimary,\n    color === 'secondary' && styles.colorSecondary,\n    fontSize === 'subheading' && styles.subHeading,\n    fontWeight === 'bold' && styles.bold ,\n    style\n\n  ];\n\n  return <Text style={textStyles} {...restOfProps}>{children}</Text>;\n}\n\n")),(0,o.yg)("p",null,"Theme.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'\nexport default theme = {\n  colors: {\n    textPrimary: "#24292e",\n    textSecondary: "#586069",\n    primary: "#0366d6",\n    white : \'#fefefe\'\n  },\n  fontSizes: {\n    body: 14,\n    subHeading: 16,\n  },\n  fonts: {\n    main: "System",\n  },\n  fontWeight: {\n    normal: "400",\n    bold: "700",\n  },\n};\n\n\n')),(0,o.yg)("h2",{id:"imagen"},"Imagen"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El componente Image (viene de react native) se encarga de las im\xe1genes."),(0,o.yg)("li",{parentName:"ul"},"Tambien tiene la props style para aplicar estilos CSS"),(0,o.yg)("li",{parentName:"ul"},"Tiene la props Source , la cual sirve para \u201cimportar\u201d la imagen."),(0,o.yg)("li",{parentName:"ul"},"La props Source recibe un objeto con :",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Propiedad uri: Recibe la url de la imagen.")))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"  <Image style={styles.image} source={{uri:props.ownerAvatarUrl}}/>\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Si usamos el c\xf3digo anterior en el componente RepositoryItem , la imagen no se ver\xe1."),(0,o.yg)("li",{parentName:"ul"},"React native no sabe que espacio debe ocupar una imagen, por lo tanto se debe especificar el width y height con CSS."),(0,o.yg)("li",{parentName:"ul"},"Una vez que se especifica el espacio que ocupa la imagen, se mostrara.")),(0,o.yg)("p",null,"RepositoryItem"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View,  StyleSheet, Image } from "react-native";\nimport StyleText from "./StyledText";\nimport RepositoryStats from "./RepositoryStats";\nimport theme from "../theme";\n\n\n\n\nconst RepositoryItem = (props) => (\n  <View key={props.id} style={styles.container}>\n    <Image style={styles.image} source={{uri:props.ownerAvatarUrl}}/>\n    <StyleText fontWeight="bold" fontSize="subheading">\n      {props.fullName}\n    </StyleText>\n    <StyleText>{props.description}</StyleText>\n    <StyleText style={styles.language}>{props.language}</StyleText>\n    <RepositoryStats {...props} />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  language: {\n    padding:4,\n    color: theme.colors.white ,\n    backgroundColor:theme.colors.primary ,\n    alignSelf : \'flex-start\',\n    borderRadius:4,\n    overflow:\'hidden\'\n  } ,\n  image : {\n    width:48,\n    height:48,\n    borderRadius:4\n  }\n});\nexport default RepositoryItem;\n\n')),(0,o.yg)("h2",{id:"cuestiones-css-2"},"Cuestiones CSS #2"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"flex: 1  =  Hace que el elemento ocupe todo el espacio disponible y que haga salto de l\xednea si es necesario."),(0,o.yg)("li",{parentName:"ul"},"Estas dos propiedades no est\xe1n en CSS, las crea React native:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"marginVertical : numero  = Aplica los m\xe1rgenes de arriba y abajo (en pixeles)"),(0,o.yg)("li",{parentName:"ul"},"marginHorizontal : numero = Aplica los m\xe1rgenes de izquierda y derecha (en pixeles)"))),(0,o.yg)("li",{parentName:"ul"},"Hay varias propiedades CSS que crea react native para trabajar dos costados/lados con un solo valor.  Ej : paddingHorizontal.")),(0,o.yg)("p",null,"RepositoryItem"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { View, StyleSheet, Image } from "react-native";\nimport StyleText from "./StyledText";\nimport RepositoryStats from "./RepositoryStats";\nimport theme from "../theme";\n\nconst RepositoryItemHeader = ({\n  ownerAvatarUrl,\n  fullName,\n  description,\n  language,\n}) => (\n  <View style={{ flexDirection: "row", paddingBottom: 2 }}>\n    <View style={{ paddingRight: 10 }}>\n      <Image style={styles.image} source={{ uri: ownerAvatarUrl }} />\n    </View>\n\n    <View style={{ flex: 1 }}>\n      <StyleText fontWeight="bold" >\n        {fullName}\n      </StyleText>\n      <StyleText color=\'secondary\'>{description}</StyleText>\n      <StyleText style={styles.language}>{language}</StyleText>\n    </View>\n  </View>\n);\n\nconst RepositoryItem = (props) => (\n  <View key={props.id} style={styles.container}>\n    <RepositoryItemHeader {...props} />\n    <RepositoryStats {...props} />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  language: {\n    padding: 4,\n    color: theme.colors.white,\n    backgroundColor: theme.colors.primary,\n    alignSelf: "flex-start",\n    borderRadius: 4,\n    overflow: "hidden",\n    marginVertical:4\n  },\n  image: {\n    width: 48,\n    height: 48,\n    borderRadius: 4,\n  },\n});\nexport default RepositoryItem;\n\n\n')),(0,o.yg)("h2",{id:"appbar"},"AppBar"),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"CSS")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Podemos realizar operaciones matem\xe1ticas en las propiedades CSS sin necesidad de usar calc()."))),(0,o.yg)("p",null,"components/Appbar.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View } from "react-native";\nimport StyleText from "./StyledText";\nimport theme from "../theme";\nimport Constants from \'expo-constants\'\nconst styles = StyleSheet.create({\n    appBar : {\n        backgroundColor : theme.appBar.primary,\n        paddingTop:  Constants.statusBarHeight + 10 ,\n        paddingBottom:10,\n        paddingLeft:10 \n    } ,\n    text:{\n        color: theme.appBar.textPrimary\n    }\n})\n\nconst AppBar = () => {\n\n    return (\n        <View style={styles.appBar}>\n          <StyleText fontWeight=\'bold\' style={styles.text}  >  Repositories </StyleText>\n         \n        </View>\n    )\n}\n\nexport default AppBar;\n\n')),(0,o.yg)("p",null,"theme.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'const theme = {\n  appBar: {\n    primary:\'#24292e\',\n    textPrimary:\'#fff\'\n  } , \n  colors: {\n    textPrimary: "#24292e",\n    textSecondary: "#586069",\n    primary: "#0366d6",\n    white : \'#fefefe\'\n  },\n  fontSizes: {\n    body: 14,\n    subHeading: 16,\n  },\n  fonts: {\n    main: "System",\n  },\n  fontWeight: {\n    normal: "400",\n    bold: "700",\n  },\n};\n\nexport default theme;\n\n')),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import {  View} from 'react-native'\nimport RepositoryList from './RepositoryList'\nimport AppBar from './AppBar'\n\nconst Main = ()=> {\n    return (\n        <View style={{ flew : 1}} >\n      <AppBar/>\n            <RepositoryList />\n        </View>\n    )\n}\n\nexport default Main\n\n")),(0,o.yg)("h2",{id:"router"},"Router"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.expo.dev/guides/routing-and-navigation/"},"Hay diferentes maneras de routear"),"."),(0,o.yg)("li",{parentName:"ul"},"En esta gu\xeda , usaremos react-router-native.")),(0,o.yg)("h4",{id:"instalaci\xf3n-1"},"Instalaci\xf3n"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"},"npm install react-router-native\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"En lugar de usar BrowserRouter (de react-router) , usamos el NativeRouter")),(0,o.yg)("p",null,"App.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"\nimport Main from './src/components/Main';\nimport { NativeRouter } from 'react-router-native';\n\n\nexport default function App() {\n  return (\n   <NativeRouter>\n   <Main/>\n   </NativeRouter>\n \n  \n  );\n}\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\xbfTe tira un error?")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Es porque falta la dependencia @expo/webpack-config y configurarla."),(0,o.yg)("li",{parentName:"ul"},"En las versiones nuevas no te deber\xeda tirar este error porque ya est\xe1 instalada y configurada."),(0,o.yg)("li",{parentName:"ul"},"\xa1En caso contrario, a investigar!")))),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Son los mismos componentes que React Router b\xe1sicamente.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport { View, Text } from "react-native";\nimport RepositoryList from "./RepositoryList";\nimport AppBar from "./AppBar";\nimport { Route, Link, Routes } from "react-router-native";\n\nconst Main = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppBar />\n\n      <Routes>\n        <Route path="/" element={<RepositoryList />} />\n        <Route path="/signin" element={<Text>Estamos trabajando</Text>} />\n      </Routes>\n    </View>\n  );\n};\n\nexport default Main;\n\n')),(0,o.yg)("h4",{id:"para-que-sirve-esto-en-un-celular"},"\xbfPara que sirve esto en un celular?"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"\xa1\xa1Lo normal que este tipo de \u201crouter\u201d, solo sea \xfatil en Navegadores ya que son path con url!!"),(0,o.yg)("li",{parentName:"ul"},"Pues en dispositivos m\xf3viles, son rutas en memoria, NO rutas de una p\xe1gina web.")),(0,o.yg)("p",null,"Appbar.jsx"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Usamos el componente Link que nos permite llevar al usuario a una ruta especifica.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View } from "react-native";\nimport StyleText from "./StyledText";\nimport theme from "../theme";\nimport Constants from "expo-constants";\nimport { Link } from "react-router-native";\nconst styles = StyleSheet.create({\n  appBar: {\n    backgroundColor: theme.appBar.primary,\n    paddingTop: Constants.statusBarHeight + 10,\n    paddingBottom: 10,\n    flexDirection:\'row\'\n  },\n  text: {\n    color: theme.appBar.textPrimary,\n    // padding left y right\n    paddingHorizontal : 10\n  },\n});\nconst AppBarTab = ({ active, children, to }) => {\n  return (\n    <Link to={to}>\n     \n      <StyleText fontWeight="bold" style={styles.text}>\n        \n       {children}\n      </StyleText>\n    </Link>\n  );\n};\nconst AppBar = () => {\n  return <View style={styles.appBar}>\n    <AppBarTab active to="/">Repositories</AppBarTab>\n    <AppBarTab active to="/signin">Sign in</AppBarTab>\n  </View>;\n};\n\nexport default AppBar;\n\n')),(0,o.yg)("h4",{id:"y-listo-ya-tenemos-un-menu"},"\xa1Y listo ya tenemos un menu!"),(0,o.yg)("h2",{id:"props-del-componente-link"},"Props del componente link"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Cuando haces click en un componente \u201cLink\u201d , se genera una opacidad y un background nuevo."),(0,o.yg)("li",{parentName:"ul"},"Por defecto Link renderiza un \u201ccomponente\u201d cuando se hace click."),(0,o.yg)("li",{parentName:"ul"},"Eso lo podemos configurar con la props component que recibe como valor un componente (que se renderizara al hacer click)"),(0,o.yg)("li",{parentName:"ul"},"Podemos usar alg\xfan componente de react native como valor de esta props.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View , TouchableHighlight  } from "react-native";\nconst AppBarTab = ({ active, children, to }) => {\n  return (\n    <Link to={to} component={TouchableHighlight}>\n     \n      <StyleText fontWeight="bold" style={styles.text}>\n        \n       {children}\n      </StyleText>\n    </Link>\n  );\n};\n\n')),(0,o.yg)("h2",{id:"scrollview"},"ScrollView"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"\xa1Si creamos varios \xedtems en el menu, se sale del dispositivo!")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'const AppBar = () => {\n  return <View style={styles.appBar}>\n    <AppBarTab active to="/">Repositories</AppBarTab>\n    <AppBarTab active to="/signin">Sign in</AppBarTab>\n    <AppBarTab active to="/signin">Register</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n  </View>;\n};\n\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Para solucionar esto , usamos el componente ScrollView"),(0,o.yg)("li",{parentName:"ul"},"El ScrollView ubica los elementos como columna (de arriba abajo) , para que los ubique como fila (de izquierda a derecha) tenemos que pasarle la props horizontal.")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Si le pasas la props sin ning\xfan valor, se considera que contiene como valor true."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View , TouchableWithoutFeedback  , ScrollView} from "react-native";\nimport StyleText from "./StyledText";\nimport theme from "../theme";\nimport Constants from "expo-constants";\nimport { Link } from "react-router-native";\n\nconst styles = StyleSheet.create({\n  appBar: {\n    backgroundColor: theme.appBar.primary,\n    paddingTop: Constants.statusBarHeight + 10,\n    flexDirection:\'row\'\n  },\n  text: {\n    color: theme.appBar.textPrimary,\n    // padding left y right\n    paddingHorizontal : 10\n  }, \n  scroll : {\n    paddingBottom:15\n  }\n});\nconst AppBarTab = ({ active, children, to }) => {\n    console.log(TouchableWithoutFeedback)\n  return (\n   \n    <Link to={to} component={TouchableWithoutFeedback}>\n      <StyleText fontWeight="bold" style={styles.text}>\n       {children}\n      </StyleText>\n    </Link>\n  \n  );\n};\nconst AppBar = () => {\n  return <View style={styles.appBar}>\n    <ScrollView horizontal style={styles.scroll}>\n    <AppBarTab active to="/">Repositories</AppBarTab>\n    <AppBarTab active to="/signin">Sign in</AppBarTab>\n    <AppBarTab active to="/signin">Register</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n    <AppBarTab active to="/signin">Lorem ipsum dolor</AppBarTab>\n    </ScrollView>\n  </View>;\n};\n\nexport default AppBar;\n\n')),(0,o.yg)("h2",{id:"active"},"Active"),(0,o.yg)("h4",{id:"c\xf3mo-saber-en-qu\xe9-p\xe1gina-estamos"},"\xbfC\xf3mo saber en qu\xe9 p\xe1gina estamos?"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vamos a usar el hook useLocation"),(0,o.yg)("li",{parentName:"ul"},"El hook useLocation de React Router es un hook que podemos utilizar en cualquier componente. Este hook nos devuelve el objeto location. Dentro de este objeto, tenemos informaci\xf3n sobre la URL actual, es decir, la que el usuario ha pedido recientemente. Esta informaci\xf3n se guarda bajo la  propiedad pathname."),(0,o.yg)("li",{parentName:"ul"},"Como es un \u201chook\u201d , si cambia el valor (se navega a otra URL por ejemplo) , se vuelve a renderizar las partes que utilizar informaci\xf3n de este."),(0,o.yg)("li",{parentName:"ul"},"La propiedad pathname contiene la \u201curl\u201d actual, por lo tanto, podemos utilizar esta informaci\xf3n para hacer una peque\xf1a l\xf3gica:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View , TouchableWithoutFeedback  , ScrollView} from "react-native";\nimport StyleText from "./StyledText";\nimport theme from "../theme";\nimport Constants from "expo-constants";\nimport { Link, useLocation } from "react-router-native";\n\nconst styles = StyleSheet.create({\n  appBar: {\n    backgroundColor: theme.appBar.primary,\n    paddingTop: Constants.statusBarHeight + 10,\n    flexDirection:\'row\'\n  },\n  text: {\n    color: theme.appBar.textSecondary,\n    // padding left y right\n    paddingHorizontal : 10\n  }, \n  scroll : {\n    paddingBottom:15\n  } , \n  active : {\n    color: theme.appBar.textPrimary,\n  }\n});\nconst AppBarTab = ({  children, to }) => {\n    const {pathname} = useLocation();\n    const active = pathname === to\n    const textStyles = [\n        styles.text , \n        active && styles.active\n    ]\n    console.log(textStyles)\n  return (\n   \n    <Link to={to} component={TouchableWithoutFeedback}>\n      <StyleText fontWeight="bold" style={textStyles}>\n       {children}\n      </StyleText>\n    </Link>\n  \n  );\n};\n\nconst AppBar = () => {\n  return <View style={styles.appBar}>\n    <ScrollView horizontal style={styles.scroll}>\n    <AppBarTab  to="/">Repositories</AppBarTab>\n    <AppBarTab  to="/signin">Sign in</AppBarTab>\n    </ScrollView>\n  </View>;\n};\n\nexport default AppBar;\n\n')),(0,o.yg)("h2",{id:"statusbar"},"StatusBar"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vamos a acomodar el estilo del \u201cmenu\u201d.")),(0,o.yg)("p",null,"App.js"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vamos a importar StatusBar que viene de expo-status-bar (viene de expo)."),(0,o.yg)("li",{parentName:"ul"},"StatusBar es un \u201ccomponente\u201d que se renderiza arriba del NativeRouter y que maneja la barra de estado (donde se muestra el nivel de bater\xeda y otros iconos)"),(0,o.yg)("li",{parentName:"ul"},"La props style de Statusbar especifica el color de fondo y el de los iconos."),(0,o.yg)("li",{parentName:"ul"},"El valor \u2018light\u2019 especifica fondo negro y los iconos blancos."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.expo.dev/versions/latest/sdk/status-bar/"},"M\xe1s info"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"\n\nimport Main from './src/components/Main';\nimport { NativeRouter } from 'react-router-native';\nimport { StatusBar } from 'expo-status-bar';\n\nexport default function App() {\n  return (\n    <>\n \n    <StatusBar style='light' />\n   <NativeRouter>\n   <Main/>\n   </NativeRouter>\n   </>\n  \n  );\n}\n\n")),(0,o.yg)("h2",{id:"como-ejecutar-codigo-solo-en-android"},"Como ejecutar codigo solo en Android"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Esto puede aplicar tambi\xe9n para IOS.")),(0,o.yg)("h3",{id:"1-manera---platformos"},"1 Manera - Platform.OS"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Utilizaremos ",(0,o.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/platform"},"Platform")," de react-native."),(0,o.yg)("li",{parentName:"ul"},"Es un objeto \u201cespecial\u201d que tiene informaci\xf3n de la plataforma en la que estas."),(0,o.yg)("li",{parentName:"ul"},"Por ejemplo:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"La propiedad OS devuelve el sistema operativo actual (Android o iOS)"),(0,o.yg)("li",{parentName:"ul"},"La propiedad isPad devuelve true si es un iPad")))),(0,o.yg)("p",null,"RepositoryItem"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { View, StyleSheet, Image , Platform } from \"react-native\";\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  language: {\n    padding: 4,\n    color: theme.colors.white,\n    backgroundColor: Platform.OS === 'android' ? 'red' : '#09f',\n    alignSelf: \"flex-start\",\n    borderRadius: 4,\n    overflow: \"hidden\",\n    marginVertical:4\n  },\n  image: {\n    width: 48,\n    height: 48,\n    borderRadius: 4,\n  },\n});\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Si esta en Android , el backgroundColor de language es \u2018red\u2019 , en caso contrario es \u2018#09f\u2019."))),(0,o.yg)("h3",{id:"2-manera---platformselect"},"2 Manera - Platform.select()"),(0,o.yg)("h4",{id:"m\xe9todo-select"},"M\xe9todo select()"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Recibe un objeto donde cada propiedad es el nombre de un dispositivo (Android , iOS , etc)  y su valor es lo que se va a aplicar si la APP se esta ejecutando en esa plataforma.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"language: {\n    padding: 4,\n    color: theme.colors.white,\n    backgroundColor: Platform.select({\n      android:theme.colors.primary ,\n      ios: 'orange' ,\n      default : 'purple'\n    }) ,\n    alignSelf: \"flex-start\",\n    borderRadius: 4,\n    overflow: \"hidden\",\n    marginVertical:4\n  }\n\n")),(0,o.yg)("h4",{id:"otro-ejemplo"},"Otro ejemplo"),(0,o.yg)("p",null,"RepositoryItem"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"}," backgroundColor: theme.colors.primary ,\n")),(0,o.yg)("p",null,"theme.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import {  Platform } from \"react-native\";\nconst theme = {\n  appBar: {\n    primary:'#24292e',\n    textPrimary:'#fff' ,\n    textSecondary : '#999' ,\n  } , \n  colors: {\n    textPrimary: \"#24292e\",\n    textSecondary: \"#586069\",\n    primary: \"#0366d6\",\n    white : '#fefefe'\n  },\n  fontSizes: {\n    body: 14,\n    subHeading: 16,\n  },\n  fonts: {\n\n    main: Platform.select({\n      ios:'Arial',\n      android:'Roboto',\n      default:'System'\n    })\n  },\n  fontWeight: {\n    normal: \"400\",\n    bold: \"700\",\n  },\n};\n\nexport default theme;\n\n")),(0,o.yg)("p",null,"StyledText"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const textStyles = [\n    styles.text,\n    align === 'center' && styles.textAlignCenter ,\n    color === 'primary' && styles.colorPrimary,\n    color === 'secondary' && styles.colorSecondary,\n    fontSize === 'subheading' && styles.subHeading,\n    fontWeight === 'bold' && styles.bold ,\n    style , {\n      fontFamily:theme.fonts.main\n    }\n\n  ];\n\n")),(0,o.yg)("h3",{id:"3-manera---elegir-entre-dos-componentes"},"3 Manera - Elegir entre dos componentes"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Se renderiza un componente en base al sistema operativo."),(0,o.yg)("li",{parentName:"ul"},"En el ejemplo lo hare con Android, pero si tenes iOS pod\xe9s probarlo con esa tambi\xe9n (solo cambia un poco la l\xf3gica)")),(0,o.yg)("p",null,"src\\components\\AndroidAppBar.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { StyleSheet, View , TouchableWithoutFeedback  , ScrollView} from "react-native";\nimport StyleText from "./StyledText";\nimport theme from "../theme";\nimport Constants from "expo-constants";\nimport { Link, useLocation } from "react-router-native";\n\nconst styles = StyleSheet.create({\n  appBar: {\n    backgroundColor: \'red\',\n    paddingTop: Constants.statusBarHeight + 10,\n    flexDirection:\'row\'\n  },\n  text: {\n    color: theme.appBar.textSecondary,\n    // padding left y right\n    paddingHorizontal : 10\n  }, \n  scroll : {\n    paddingBottom:15\n  } , \n  active : {\n    color: theme.appBar.textPrimary,\n  }\n});\nconst AppBarTab = ({  children, to }) => {\n    const {pathname} = useLocation();\n    const active = pathname === to\n    const textStyles = [\n        styles.text , \n        active && styles.active\n    ]\n    console.log(textStyles)\n  return (\n   \n    <Link to={to} component={TouchableWithoutFeedback}>\n      <StyleText fontWeight="bold" style={textStyles}>\n       {children}\n      </StyleText>\n    </Link>\n  \n  );\n};\n\nconst AppBar = () => {\n  return <View style={styles.appBar}>\n    <ScrollView horizontal style={styles.scroll}>\n    <AppBarTab  to="/">Repositories</AppBarTab>\n    <AppBarTab  to="/signin">Sign in</AppBarTab>\n    </ScrollView>\n  </View>;\n};\n\nexport default AppBar;\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Es el mismo menu, pero con el background rojo"))),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Utilizaremos el m\xe9todo Platform.select() para importar un componente."),(0,o.yg)("li",{parentName:"ul"},"Los segundos par\xe9ntesis que se ubican en \u201cSelect ({objeto}) ()\u201d son para ejecutar la funcion que devuelve el m\xe9todo Select. En pocas palabras es porque Select devuelve una funcion y los par\xe9ntesis son para ejecutarla.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport { View, Text , Platform } from "react-native";\nimport RepositoryList from "./RepositoryList";\nimport { Route,  Routes  } from "react-router-native";\n\nconst AppBar = Platform.select({\n  // Utilizamos el .default porque estamos importando algo que se esta exportando de forma default\n  android: () => require(\'./AndroidAppBar.jsx\').default  , \n  default : ()=> require(\'./AppBar.jsx\').default\n})()\nconst Main = () => {\n\n  return (\n    <View style={{ flex: 1 }}>\n      <AppBar />\n\n      <Routes>\n        <Route path="/" element={<RepositoryList />} />\n        <Route path="/signin" element={<Text>Estamos trabajando</Text>} />\n      </Routes>\n    </View>\n  );\n};\n\nexport default Main;\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"No es la forma correcta si tu eres el que creas el fichero (componente)."),(0,o.yg)("li",{parentName:"ul"},"Se recomienda usar esta forma SOLO si son componentes que tu no hiciste.")))),(0,o.yg)("h3",{id:"4-manera---elegir-entre-dos-componentes-2"},"4 Manera - Elegir entre dos componentes #2"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Esta es la manera recomendada de hacerlo, si tu eres el que creas el fichero (el componente es local)."),(0,o.yg)("li",{parentName:"ul"},"Con esto logramos que:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"React native de forma autom\xe1tica (sin que haya c\xf3digo extra) elija que componente renderizar en base a la plataforma actual.")))),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Entonces:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"AppBar.jsx se renderizaria por defecto."),(0,o.yg)("li",{parentName:"ul"},"Y al otro componente le cambiamos el nombre a :  AppBar.android.jsx")))),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import AppBar from \'./AppBar\';\n\nconst Main = () => {\n\n  return (\n    <View style={{ flex: 1 }}>\n      <AppBar />\n  \n      <Routes>\n        <Route path="/" element={<RepositoryList />} />\n        <Route path="/signin" element={<Text>Estamos trabajando</Text>} />\n      </Routes>\n    </View>\n  );\n};\n\nexport default Main;\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"De forma autom\xe1tica, gracias a React native , AppBar renderiza uno de los dos ficheros en base a la plataforma en la que ejecutes la app"),(0,o.yg)("li",{parentName:"ul"},"Para que esto funcione , no TENES que poner la extensi\xf3n al importar (Con la extensi\xf3n le indicas exactamente que fichero se renderizar\xeda)."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/platform-specific-code#platform-specific-extensions"},"info"))))),(0,o.yg)("h2",{id:"formulario-con-formik"},"Formulario con formik"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Formik te permite crear formularios con validaciones de forma sencilla.")),(0,o.yg)("h4",{id:"instalaci\xf3n-2"},"Instalaci\xf3n"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"}," npm install formik\n")),(0,o.yg)("p",null,"Main.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport { View  } from "react-native";\nimport RepositoryList from "./RepositoryList";\nimport { Route,  Routes  } from "react-router-native";\nimport AppBar from \'./AppBar\';\nimport LogInPage from "../pages/LogIn";\n\nconst Main = () => {\n\n  return (\n    <View style={{ flex: 1 }}>\n      <AppBar />\n  \n      <Routes>\n        <Route path="/" element={<RepositoryList />} />\n        <Route path="/signin" element={<LogInPage/>} />\n      </Routes>\n    </View>\n  );\n};\n\nexport default Main;\n\n')),(0,o.yg)("p",null,"src\\pages\\LogIn.jsx"),(0,o.yg)("h4",{id:"componente-formik"},"Componente formik"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Formik es un componente (contexto) que envuelve el formulario y te simplifica todo lo que va a contener (inputs , labels , etc) a trav\xe9s de React context."),(0,o.yg)("li",{parentName:"ul"},"Formik tiene las props:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"initialValues : Contiene un objeto con los valores por defecto del formulario. Cada propiedad es un nombre del input y su valor es el que va a contener por defecto."))),(0,o.yg)("li",{parentName:"ul"},"Tambien tiene el evento:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"onSubmit : Se ejecuta cuando el formulario es enviado . Recibe los valores de los inputs como par\xe1metro."))),(0,o.yg)("li",{parentName:"ul"},"Formik funciona de una manera especial, te obliga a utilizar \u201crender children\u201d que es una funcion . En pocas palabras el \u201cchildren\u201d de Formik es una funcion."),(0,o.yg)("li",{parentName:"ul"},"Lo que envuelve el componente Formik es una funcion (render children). La funcion se encargar\xe1 de renderizar lo que va a contener un \u201cformulario\u201d. Todo lo que especificamos en la funcion se renderizara.")),(0,o.yg)("h4",{id:"componente-textinput-1"},"Componente TextInput"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Representa un input de tipo text."),(0,o.yg)("li",{parentName:"ul"},"Eventos que contiene:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"onChangeText : Se ejecuta cada vez que se modifique el valor del input."))),(0,o.yg)("li",{parentName:"ul"},"Props que contiene:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"secureTextEntry  : Recibe un valor booleano . Si es true el input oculta el texto ingresado para que sea confidencial , como las contrase\xf1as.")))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { Formik } from \"formik\";\nimport {  TextInput, View } from \"react-native\";\n\nconst initialValues = {\n    email : '' ,\n    password : ''\n}\nexport default function LogInPage () {\n\n    return ( <Formik initialValues={initialValues} \n    onSubmit={values => {\n        console.log(values)\n    }}>\n     {() => {\n        return <View>\n            <TextInput></TextInput>\n            <TextInput></TextInput>\n        </View>\n     }}\n     </Formik> )\n}\n\n")),(0,o.yg)("h4",{id:"render-children"},"Render Children"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"La funcion que se encuentra adentro de Formik retorna todo lo que se tienen que renderizar."),(0,o.yg)("li",{parentName:"ul"},"Esto de utilizar una funcion como children era un patron que se usaba con React antes de usar Hooks , que te permitia insertar una funcionalidad a trav\xe9s de la funcion."),(0,o.yg)("li",{parentName:"ul"},"La \u201cfuncionalidad\u201d que recib\xeda, la recib\xeda en el par\xe1metro de la funcion.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"export default function LogInPage () {\n\n    return ( <Formik initialValues={initialValues} \n    onSubmit={values => {\n        console.log(values)\n    }}>\n     {({handleChange , handleSubmit , values}) => {\n        return <View>\n            <TextInput></TextInput>\n            <TextInput></TextInput>\n        </View>\n     }}\n     </Formik> )\n}\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"handleChange , handleSubmit y values son \u201cfuncionalidades\u201d que recibe la funcion."),(0,o.yg)("li",{parentName:"ul"},"Las funcionalidades son del componente Formik y este se las pasa a la funcion que tiene en su interior."),(0,o.yg)("li",{parentName:"ul"},"Esta manera de \u201cpasar funcionalidades\u201d  es un patron que se utilizaba antes de los Hooks .  "),(0,o.yg)("li",{parentName:"ul"},"Cuando salieron los hooks, esto se empez\xf3 a usar menos.")))),(0,o.yg)("h4",{id:"funcionalidades"},"Funcionalidades"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"{handleChange , handleSubmit , values}\n")),(0,o.yg)("h4",{id:"values"},"values"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es un objeto , su valor corresponde a la props initialValues al comienzo , luego se modifica en base al valor del input asignado.")),(0,o.yg)("h4",{id:"handlechange"},"handleChange()"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es una funcion que recibe un String con el nombre del input . Lo que se  le pasa es el nombre de una propiedad del objeto values. Basicamente asocia una propiedad del objeto values con el  value del input que especificamos.")),(0,o.yg)("h4",{id:"handlesubmit"},"handleSubmit()"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Es la funcion que se debe ejecutar al hacer click en el boton de \u201cEnviar\u201d.")),(0,o.yg)("h4",{id:"componente-button"},"Componente Button"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Se utiliza para un boton."),(0,o.yg)("li",{parentName:"ul"},"Eventos que contiene:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"onPress : Se ejecuta cada vez que se hace click/toca el boron"))),(0,o.yg)("li",{parentName:"ul"},"Props que contiene: ",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Title: Recibe un string . Representa el texto que tenga adentro el boton.")))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { Formik } from \"formik\";\nimport {  Button, TextInput, View } from \"react-native\";\n\nconst initialValues = {\n    email : '' ,\n    password : ''\n}\nexport default function LogInPage () {\n\n    return ( <Formik initialValues={initialValues} \n    onSubmit={values => {\n        console.log(values)\n    }}>\n     {({handleChange , handleSubmit , values}) => {\n        return <View>\n            <TextInput placeholder=\"E-mail\" value={values.email}\n            onChangeText={handleChange('email')}  \n            ></TextInput>   \n              <TextInput placeholder=\"Password\" value={values.password}\n            onChangeText={handleChange('password')}\n            \n            ></TextInput>\n         <Button onPress={handleSubmit} title='Log In'/>\n        </View>\n     }}\n     </Formik> )\n}\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Cuando se hace click en el Button , se ejecuta la funcion handleSubmit."),(0,o.yg)("li",{parentName:"ul"},"La funcion handleSubmit invoca el evento onSubmit del componente Formik"),(0,o.yg)("li",{parentName:"ul"},"El evento onSubmit ejecuta una funcion , que en este caso  es mostrar los valores por consola.")))),(0,o.yg)("h3",{id:"styledtextinput"},"StyledTextInput"),(0,o.yg)("p",null,"src\\components\\StyledTextInput.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { StyleSheet, TextInput } from \"react-native\";\n\nconst styles = StyleSheet.create(\n    {\n       textInput: {\n        borderRadius:5,\n        borderWidth:1,\n        borderColor: '#999' ,\n        paddingHorizontal:20,\n        paddingVertical:10 ,\n        marginBottom:10\n       } \n    }\n)\n\nconst StyleTextInput = ({style = {}, ...props}) => {\n   const inputStyle = {\n     ...styles.textInput ,\n     ...style\n   }\n\n   return <TextInput style={inputStyle} {...props}/>\n}\n\nexport default StyleTextInput;\n\n")),(0,o.yg)("p",null,"LogIn.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { Formik } from "formik";\nimport { Button, StyleSheet, TextInput, View } from "react-native";\nimport StyleTextInput from "../components/StyledTextInput";\n\nconst initialValues = {\n  email: "",\n  password: "",\n};\n\nconst styles = StyleSheet.create({\n    form : {\n        margin:12\n    }\n})\nexport default function LogInPage() {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {({ handleChange, handleSubmit, values }) => {\n        return (\n          <View style={styles.form}>\n            <StyleTextInput\n              placeholder="E-mail"\n              value={values.email}\n              onChangeText={handleChange("email")}\n            ></StyleTextInput>\n            <StyleTextInput\n              placeholder="Password"\n              value={values.password}\n              onChangeText={handleChange("password")}\n            ></StyleTextInput>\n            <Button onPress={handleSubmit} title="Log In" />\n          </View>\n        );\n      }}\n    </Formik>\n  );\n}\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"En lugar de usar un componente View, podemos usar un componente Form en el render children , pero en este caso no funcionar\xeda porque estamos en React Native."),(0,o.yg)("li",{parentName:"ul"},"Hay varios componentes de Formik que no funcionan en React Native ya que renderizan elementos HTML no compatible en dispositivos m\xf3viles.")))),(0,o.yg)("h3",{id:"hook-usefield"},"Hook useField"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Con los hooks, podemos gestionar la informaci\xf3n de cualquier componente que se encuentra adentro de ","<","Formik>","<","/Formik>"),(0,o.yg)("li",{parentName:"ul"},"El hook useField() recibe el \u201cnombre (name)\u201d de un input.  Lo que se le  pasa es el nombre de una propiedad del objeto values."),(0,o.yg)("li",{parentName:"ul"},"Devuelve un array de tres posiciones:",(0,o.yg)("ol",{parentName:"li"},(0,o.yg)("li",{parentName:"ol"},"field :  Informacion del campo/input . En field.value obtendremos el valor del input."),(0,o.yg)("li",{parentName:"ol"},"meta: Contiene metainformacion del campo/input . Contiene errores , validaciones , etc."),(0,o.yg)("li",{parentName:"ol"},"helpers :  Nos brinda varias herramientas para gestionar el input . Por ejemplo tenemos el setValue() para modificar el field.value ."))),(0,o.yg)("li",{parentName:"ul"},"Conclusi\xf3n: Nos devuelve un array con lo necesario para gestionar UN input y conectarlo a ","<","Formik>")),(0,o.yg)("p",null,"LogIn.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { Formik, useField } from "formik";\nimport { Button, StyleSheet, TextInput, View } from "react-native";\nimport StyleTextInput from "../components/StyledTextInput";\n\nconst initialValues = {\n  email: "",\n  password: "",\n};\n\nconst styles = StyleSheet.create({\n    form : {\n        margin:12\n    }\n})\n\nconst FormikInputValue = ({name , ...props}) => {\n    const [field , meta , helpers] = useField(name)\n   \n\n    return (\n        <StyleTextInput\n        value={field.value}\n        onChangeText={value => helpers.setValue(value)}\n        {...props}\n      ></StyleTextInput>\n    )\n}\n\nexport default function LogInPage() {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {({  handleSubmit }) => {\n        return (\n          <View style={styles.form}>\n          \n            <FormikInputValue\n            name=\'email\'\n              placeholder="E-mail"\n              \n            />  \n              <FormikInputValue\n              name=\'password\'\n              placeholder="Password"\n              secureTextEntry \n            />\n            <Button onPress={handleSubmit} title="Log In" />\n          </View>\n        );\n      }}\n    </Formik>\n  );\n}\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Solamente usamos la funcionalidad handleSubmit , las otras dos no la necesitamos gracias al Hook "))),(0,o.yg)("h2",{id:"validaciones-con-formik"},"Validaciones con Formik"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"En Formik se puede validar en dos formas.")),(0,o.yg)("h3",{id:"1-forma"},"1 Forma"),(0,o.yg)("h4",{id:"1--crear-una-funcion-que-recibe-todos-los-valores-del-formulario"},"1- Crear una funcion que recibe todos los valores del formulario."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Esta funcion realizara las validaciones y retornara un objeto que va a contener los errores."),(0,o.yg)("li",{parentName:"ul"},"Este objeto estar\xe1 vac\xedo si las validaciones se hicieron correctamente, en caso contrario tendr\xe1 mensajes."),(0,o.yg)("li",{parentName:"ul"},"Cada propiedad de este objeto representa el name (nombre) del input. Las propiedades suelen coincidir con las del objeto que se le pasa a la props  initialValues de Formik.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const validate = values => {\n    errors = {}\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (/[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})/.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    console.log(errors);\n    return errors\n}\n\n")),(0,o.yg)("h4",{id:"2---a-trav\xe9s-de-la-props-validate-de-formik--especificamos-que-funcion-se-ejecutara-para-validar-los-campos-input-del-formulario"},"2-  A trav\xe9s de la props validate de ","<","Formik>  especificamos que funcion se ejecutara para validar los campos (input) del formulario."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"  <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n      validate={validate}\n    >\n\n")),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("p",{parentName:"div"},"Si lo implementaste, te dar\xe1s cuenta que las validaciones se hacen en tiempo real, cada vez que se modifique el valor del input se ejecutara la funcion validate."))),(0,o.yg)("h4",{id:"3--tenemos-que-comprobar-si-existe-errores-en-el-formulario-para-poder-mostr\xe1rselo-al-usuario"},"3- Tenemos que comprobar si existe errores en el formulario, para poder mostr\xe1rselo al usuario."),(0,o.yg)("p",null,"LogIn.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { Formik, useField } from "formik";\nimport { Button, StyleSheet, TextInput, View } from "react-native";\nimport StyleTextInput from "../components/StyledTextInput";\nimport StyleText from "../components/StyledText";\nconst initialValues = {\n  email: "",\n  password: "",\n};\n\nconst styles = StyleSheet.create({\n    form : {\n        margin:12\n    } ,\n    error : {\n        color:\'red\' ,\n        fontSize:15,\n        marginBottom:20,\n        marginTop:-5\n    }\n})\n\nconst validate = values => {\n    errors = {}\n    if (!values.email) {\n        errors.email = \'Obligatorio\';\n    } else if (!/[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})/.test(values.email)) {\n        errors.email = \'Email invalido\';\n    }\n\n    console.log(errors);\n    return errors\n}\n\nconst FormikInputValue = ({name , ...props}) => {\n    const [field , meta , helpers] = useField(name)\n   \n\n    return (\n        <>\n        <StyleTextInput\n        value={field.value}\n        onChangeText={value => helpers.setValue(value)}\n        {...props}\n      ></StyleTextInput>\n      {meta.error && <StyleText style={styles.error}> {meta.error}</StyleText>}\n      </>\n    )\n}\n\nexport default function LogInPage() {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n      validate={validate}\n    >\n      {({  handleSubmit }) => {\n        return (\n          <View style={styles.form}>\n          \n            <FormikInputValue\n            name=\'email\'\n              placeholder="E-mail"\n              \n            />  \n              <FormikInputValue\n              name=\'password\'\n              placeholder="Password"\n              secureTextEntry \n            />\n            <Button onPress={handleSubmit} title="Log In" />\n          </View>\n        );\n      }}\n    </Formik>\n  );\n}\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Con meta.error comprobamos si existe un  error de validaci\xf3n."),(0,o.yg)("li",{parentName:"ul"},"Si el objeto que retorna la funcion validate tiene mensajes, lo tendr\xe1 el valor de la propiedad error."),(0,o.yg)("li",{parentName:"ul"},"Si el objeto que retorna la funcion validate no tiene mensajes (esta vacio), la propiedad error no existe."),(0,o.yg)("li",{parentName:"ul"},"Solo tendr\xe1s acceso a los mensajes de un input  especifico (corresponde al nombre del input).")))),(0,o.yg)("h4",{id:"bordes-del-input"},"Bordes del input"),(0,o.yg)("p",null,"StyledTextInput.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { StyleSheet, TextInput } from \"react-native\";\n\nconst styles = StyleSheet.create(\n    {\n       textInput: {\n        borderRadius:5,\n        borderWidth:1,\n        borderColor: '#999' ,\n        paddingHorizontal:20,\n        paddingVertical:10 ,\n        marginBottom:10\n       } ,\n       error : {\n         borderColor:'red'\n       }\n    }\n)\n\nconst StyleTextInput = ({style = {}, error , ...props}) => {\n   const inputStyle = [\n     styles.textInput ,\n     style , \n     error && styles.error\n   ]\n\n   return <TextInput style={inputStyle} {...props}/>\n}\n\nexport default StyleTextInput;\n\n")),(0,o.yg)("p",null,"LogIn.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const FormikInputValue = ({name , ...props}) => {\n    const [field , meta , helpers] = useField(name)\n   \n\n    return (\n        <>\n        <StyleTextInput\n        error = {meta.error}\n        value={field.value}\n        onChangeText={value => helpers.setValue(value)}\n        {...props}\n        \n      ></StyleTextInput>\n      {meta.error && <StyleText style={styles.error}> {meta.error}</StyleText>}\n      </>\n    )\n}\n\n")),(0,o.yg)("h4",{id:"esta-forma-es-\xfatil-cuando"},"Esta forma es \xfatil cuando:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Tenes las validaciones de otro formulario y la quieres reciclar."),(0,o.yg)("li",{parentName:"ul"},"Son campos (input) muy complejos"),(0,o.yg)("li",{parentName:"ul"},"El formulario es muy sencillo")),(0,o.yg)("h3",{id:"2-forma"},"2 Forma"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"En lugar de escribir las validaciones de forma manual como en la primera forma , formik  acepta bibliotecas de terceros para validar."),(0,o.yg)("li",{parentName:"ul"},"La segunda forma es utilizar YUP para validar.")),(0,o.yg)("h4",{id:"yup"},"YUP"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"YUP es un creador de esquema de validacion para formularios, objetos, etc."),(0,o.yg)("li",{parentName:"ul"},"A trav\xe9s de un objeto indicas las validaciones de cada campo.")),(0,o.yg)("h4",{id:"pasos"},"Pasos"),(0,o.yg)("h4",{id:"1--instalaci\xf3n-1"},"1- Instalaci\xf3n"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-powershell"},"npm i yup\n")),(0,o.yg)("h4",{id:"2--esquema"},"2- Esquema"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Hay que construir una validacion para el esquema."),(0,o.yg)("li",{parentName:"ul"},"El esquema es la informaci\xf3n que queremos obtener del formulario . Por ejemplo email, password , etc.")),(0,o.yg)("h4",{id:"yupobjectshape"},"yup.object().shape()"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"El m\xe9todo yup.object().shape() define la forma del objeto."),(0,o.yg)("li",{parentName:"ul"},"Recibe un objeto cuyas propiedades deber\xedan ser igual que las del objeto initialValues ya que es la informaci\xf3n que queremos obtener del formulario."),(0,o.yg)("li",{parentName:"ul"},"El valor de cada propiedad es la validacion que se realiza en ese campo."),(0,o.yg)("li",{parentName:"ul"},"Basicamente estas especificando \u201ccomo deber\xeda ser\u201d un objeto, especificando si una propiedad es obligatoria , si es String , etc.")),(0,o.yg)("h4",{id:"metodos-de-validaci\xf3n"},"Metodos de validaci\xf3n"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Los m\xe9todos de validacion lo tiene yup "),(0,o.yg)("li",{parentName:"ul"},"Por defecto hay mensajes de errores establecidos por yup pero los podes modificar"),(0,o.yg)("li",{parentName:"ul"},"Los m\xe9todos de validacion pueden recibir un mensaje de error como String.")),(0,o.yg)("p",null,"\\src\\validationSchemas\\login.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import * as yup from \'yup\'\n\n\nexport const loginValidationSchema = yup.object().shape({\n    // El email debe ser string , un correo y es obligatorio\n   email : yup\n   .string()\n   .email()\n   .required("El Email es obligatorio"),\n//    El password debe ser string , con un minimo de 5 caracteres , un maximo de 1000 caracteres y es obligatorio\n   password:yup.\n   string()\n   .min(5 , "Minimo 5 caracteres")\n   .max(1000 , "Muy largo!!")\n   .required(\'El password es obligatorio\')\n})\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Lo que devuelve una validacion, se utiliza para realizar otra validacion.")))),(0,o.yg)("h4",{id:"3---formik-tiene-la-props-validationschema--el-cual-recibe-el-esquema--de-validaci\xf3n-para-usar-en-el-formulario"},"3-  Formik tiene la props validationSchema , el cual recibe el esquema  de validaci\xf3n para usar en el formulario."),(0,o.yg)("p",null,"LogIn.jsx"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Lo que devuelve yup.object().shape() es un esquema de validaci\xf3n. ")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import { Formik, useField } from "formik";\nimport { Button, StyleSheet, TextInput, View } from "react-native";\nimport StyleTextInput from "../components/StyledTextInput";\nimport StyleText from "../components/StyledText";\nimport { loginValidationSchema } from "../validationSchemas/login";\nconst initialValues = {\n  email: "",\n  password: "",\n};\n\nconst styles = StyleSheet.create({\n    form : {\n        margin:12\n    } ,\n    error : {\n        color:\'red\' ,\n        fontSize:15,\n        marginBottom:20,\n        marginTop:-5\n    }\n})\n\n\n\nconst FormikInputValue = ({name , ...props}) => {\n    const [field , meta , helpers] = useField(name)\n   \n\n    return (\n        <>\n        <StyleTextInput\n        error = {meta.error}\n        value={field.value}\n        onChangeText={value => helpers.setValue(value)}\n        {...props}\n        \n      ></StyleTextInput>\n      {meta.error && <StyleText style={styles.error}> {meta.error}</StyleText>}\n      </>\n    )\n}\n\nexport default function LogInPage() {\n  return (\n    <Formik\n    validationSchema={loginValidationSchema}\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {({  handleSubmit }) => {\n        return (\n          <View style={styles.form}>\n          \n            <FormikInputValue\n            name=\'email\'\n              placeholder="E-mail"\n              \n            />  \n              <FormikInputValue\n              name=\'password\'\n              placeholder="Password"\n              secureTextEntry \n            />\n            <Button onPress={handleSubmit} title="Log In" />\n          </View>\n        );\n      }}\n    </Formik>\n  );\n}\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Se comprueba que el objeto values (Contiene todos los inputs y valores del formulario) cumpla con el esquema de validaci\xf3n."),(0,o.yg)("li",{parentName:"ul"},"Si el esquema no se cumple, se mostrar\xe1n los mensajes definidos por yup o el Desarollador"),(0,o.yg)("li",{parentName:"ul"},"Para que el m\xe9todo handleSubmit() (se encarga de enviar el formulario) se ejecute , el objeto values debe cumplir con TODO el esquema de validaci\xf3n.")))),(0,o.yg)("h2",{id:"backend"},"Backend"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Para el proyecto utilizamos esto: ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/fullstack-hy2020/rate-repository-api"},"rate-repository-api"))),(0,o.yg)("h4",{id:"pasos-1"},"Pasos"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Se clona el repositorio "),(0,o.yg)("li",{parentName:"ol"},"Se entra al proyecto y instalas las dependencias con npm i"),(0,o.yg)("li",{parentName:"ol"},"En Github:  Settings \u2013 Developer setting \u2013 Oauth Apps \u2013 New App")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Datos de la aplicaci\xf3n:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Application name : Rate Repository App"),(0,o.yg)("li",{parentName:"ul"},"Homepage URL: cualquier url , en mi caso ",(0,o.yg)("a",{parentName:"li",href:"https://fede.dev"},"https://fede.dev")),(0,o.yg)("li",{parentName:"ul"},"Authorization callback URL : Es el puerto en donde se inicia el backend , en mi caso http://localhost:5000"),(0,o.yg)("li",{parentName:"ul"},"Registramos la App con estos datos")))),(0,o.yg)("ol",{start:4},(0,o.yg)("li",{parentName:"ol"},"En el  proyecto creamos un .env con los datos de la App que creamos . Los datos que necesita el .env se encuentra en .env.template (Solo los dos github key) "),(0,o.yg)("li",{parentName:"ol"},"En el proyecto ejecutamos npm run build"),(0,o.yg)("li",{parentName:"ol"},"Luego ejecutamos \u201cnpm run seed:run\u201d para llenar la BD de datos aleatorios"),(0,o.yg)("li",{parentName:"ol"},"Por ultimo ejecutamos npm start"),(0,o.yg)("li",{parentName:"ol"},"Si hiciste todo bien , al hacer una solicitud get en http://localhost:5000/api/repositories , te deber\xeda responder el backend.")),(0,o.yg)("h2",{id:"consumir-backend"},"Consumir backend"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Fetch y Axios est\xe1n disponible en React native.")),(0,o.yg)("p",null,"src\\components\\RepositoryList.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import {  Text, FlatList } from "react-native";\nimport RepositoryItem from "./RepositoryItem";\nimport { useState , useEffect } from "react";\n\nconst RepositoryList = () => {\n  const [repositories , setRepositories] = useState(null)\n\n  const fetchRepositories = async () => {\n    const response = await globalThis.fetch(\'http://192.168.100.2:5000/api/repositories\');\n    const json = await response.json()\n    setRepositories(json);\n  }\n\n  useEffect(()=> {\n    fetchRepositories()\n  } , [])\n\n  const repositoriesNodes = repositories ? repositories.edges.map((edge)=> {\n        return edge.node\n  }) : []\n  \n  return (\n      <FlatList\n        data={repositoriesNodes}\n        ItemSeparatorComponent={ () => (<Text></Text>)}\n        renderItem={({ item: repo }) => (\n         <RepositoryItem  {...repo}/>\n        )}\n      />\n  );\n};\n\nexport default RepositoryList;\n\n')),(0,o.yg)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Si no funciona el fetch con la url http://localhost:5000/api/repositories, remplazamos la palabra localhost por la IP del pc en la que est\xe1 ejecutando el backend. "),(0,o.yg)("li",{parentName:"ul"},"Abrir configuraci\xf3n de red e internet \u2013 Propiedades \u2013 Buscar la Direcci\xf3n Ipv4 , esa ser\xeda la IP de la PC en la red local."),(0,o.yg)("li",{parentName:"ul"},"Tambi\xe9n expo te muestra la ip de la PC en la que se esta ejecutando."),(0,o.yg)("li",{parentName:"ul"},"Este problema suele pasar en Android, ya que el locahost seria el \u201cpropio dispositivo\u201d.")))),(0,o.yg)("h2",{id:"hook-userepositories"},"Hook useRepositories"),(0,o.yg)("p",null,"src\\hooks\\useRepositories.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"import { useState , useEffect } from \"react\";\nconst useRepositories = () => {\n    const [repositories , setRepositories] = useState(null);\n    const fetchRepositories = async () => {\n      const response = await globalThis.fetch('http://192.168.100.2:5000/api/repositories');\n      const json = await response.json()\n      setRepositories(json);\n    }\n  \n    useEffect(()=> {\n      fetchRepositories()\n    } , [])\n  \n    const repositoriesNodes = repositories ? repositories.edges.map((edge)=> {\n          return edge.node\n    }) : []\n  \n  \n    return {repositories : repositoriesNodes}\n  }\n\n  export default useRepositories;\n\n")),(0,o.yg)("p",null,"src\\components\\RepositoryList.jsx"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'import {  Text, FlatList } from "react-native";\nimport RepositoryItem from "./RepositoryItem";\nimport useRepositories from "../hooks/useRepositories";\n\n\n\nconst RepositoryList = () => {\n\n  const {repositories} = useRepositories();\n  \n  return (\n      <FlatList\n        data={repositories}\n        ItemSeparatorComponent={ () => (<Text></Text>)}\n        renderItem={({ item: repo }) => (\n         <RepositoryItem  {...repo}/>\n        )}\n      />\n  );\n};\n\nexport default RepositoryList;\n\n')),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"hook")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Un hook debe ser una \u201ccaja negra\u201d , no debemos saber nada de la \u201cimplementaci\xf3n\u201d al ejecutarlo."),(0,o.yg)("li",{parentName:"ul"},"En este ejemplo, el componente que lo usa, no sabe si se hace por axios , fetch , etc."),(0,o.yg)("li",{parentName:"ul"},"Entonces los hooks se usan para realizar tareas sin saber \u201ccomo\u201d se hacen dichas tareas.")))),(0,o.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.yg)("div",{parentName:"div",className:"admonition-heading"},(0,o.yg)("h5",{parentName:"div"},(0,o.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,o.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.yg)("div",{parentName:"div",className:"admonition-content"},(0,o.yg)("ul",{parentName:"div"},(0,o.yg)("li",{parentName:"ul"},"Tambien podes utilizar Apollo y Graphql Para consumir un backend."),(0,o.yg)("li",{parentName:"ul"},"Intenta adaptar este proyecto con el Apollo que te brinda la API....")))))}c.isMDXComponent=!0}}]);