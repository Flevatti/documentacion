"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[6335],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>u});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var r=t.createContext({}),c=function(e){var a=t.useContext(r),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},d=function(e){var a=c(e.components);return t.createElement(r.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=i,v=p["".concat(r,".").concat(u)]||p[u]||m[u]||o;return n?t.createElement(v,s(s({ref:a},d),{},{components:n})):t.createElement(v,s({ref:a},d))}));function u(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=p;var l={};for(var r in a)hasOwnProperty.call(a,r)&&(l[r]=a[r]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4664:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=n(7462),i=(n(7294),n(3905));const o={sidebar_position:4},s="Conceptos de POO - Parte 2",l={unversionedId:"C--/POO2",id:"C--/POO2",title:"Conceptos de POO - Parte 2",description:"Abstracci\xf3n",source:"@site/docs/C--/POO2.md",sourceDirName:"C--",slug:"/C--/POO2",permalink:"/documentacion/docs/C--/POO2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/C--/POO2.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"C",previous:{title:"Poo",permalink:"/documentacion/docs/C--/POO"},next:{title:"Base de datos",permalink:"/documentacion/docs/C--/BD"}},r={},c=[{value:"Abstracci\xf3n",id:"abstracci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Herencia",id:"herencia",level:2},{value:"Ejemplo",id:"ejemplo-1",level:4},{value:"Palara clave &quot;sealed&quot;",id:"palara-clave-sealed",level:4},{value:"Palara clave &quot;base&quot;",id:"palara-clave-base",level:4},{value:"Herencia m\xfaltiple",id:"herencia-m\xfaltiple",level:3},{value:"\xbfPor qu\xe9 no se permite herencia m\xfaltiple en todos los lenguajes de programaci\xf3n?",id:"por-qu\xe9-no-se-permite-herencia-m\xfaltiple-en-todos-los-lenguajes-de-programaci\xf3n",level:4},{value:"Lista de lenguajes de programaci\xf3n que soportan herencia m\xfaltiple:",id:"lista-de-lenguajes-de-programaci\xf3n-que-soportan-herencia-m\xfaltiple",level:4},{value:"Lista de lenguajes de programaci\xf3n que NO soportan herencia m\xfaltiple:",id:"lista-de-lenguajes-de-programaci\xf3n-que-no-soportan-herencia-m\xfaltiple",level:4},{value:"Herencia simple y herencia m\xfaltiple",id:"herencia-simple-y-herencia-m\xfaltiple",level:4},{value:"C# -- Herencia m\xfaltiple",id:"c----herencia-m\xfaltiple",level:4},{value:"\xbfc\xf3mo implemento herencia de una clase, y adem\xe1s implemento interfaces en C#?",id:"c\xf3mo-implemento-herencia-de-una-clase-y-adem\xe1s-implemento-interfaces-en-c",level:4},{value:"Encapsulamiento",id:"encapsulamiento",level:2},{value:"Polimorfismo",id:"polimorfismo",level:2},{value:"Ejemplo de Herencia",id:"ejemplo-de-herencia",level:4},{value:"Otro ejemplo",id:"otro-ejemplo",level:4},{value:"Propiedades",id:"propiedades",level:2},{value:"Encapsulaci\xf3n",id:"encapsulaci\xf3n",level:4},{value:"\xbfPor qu\xe9 encapsulaci\xf3n?",id:"por-qu\xe9-encapsulaci\xf3n",level:4},{value:"Propiedad",id:"propiedad",level:4},{value:"Propiedades autom\xe1ticas / auto implementadas",id:"propiedades-autom\xe1ticas--auto-implementadas",level:4},{value:"Valor por defecto",id:"valor-por-defecto",level:3},{value:"1-\tUsando inicializadores autom\xe1ticos de propiedades",id:"1-usando-inicializadores-autom\xe1ticos-de-propiedades",level:4},{value:"2-\tAsignar valor por defecto en el constructor",id:"2-asignar-valor-por-defecto-en-el-constructor",level:4},{value:"3-\tUtilizar el definidor de propiedades",id:"3-utilizar-el-definidor-de-propiedades",level:4},{value:"4-\tAtributo DefaultValue y Property Setter",id:"4-atributo-defaultvalue-y-property-setter",level:4},{value:"Enumeraci\xf3n",id:"enumeraci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo-2",level:4},{value:"Tambi\xe9n puedes tener un enum dentro de una clase:",id:"tambi\xe9n-puedes-tener-un-enum-dentro-de-una-clase",level:4},{value:"Valor de una enumeraci\xf3n",id:"valor-de-una-enumeraci\xf3n",level:4},{value:"Enumeraci\xf3n en una instrucci\xf3n Switch",id:"enumeraci\xf3n-en-una-instrucci\xf3n-switch",level:4},{value:"This",id:"this",level:2},{value:"Ejemplo:",id:"ejemplo-3",level:4},{value:"Constructor principal",id:"constructor-principal",level:2},{value:"Ejemplo",id:"ejemplo-4",level:4},{value:"Clases gen\xe9ricas",id:"clases-gen\xe9ricas",level:2},{value:"\xbfQu\xe9 son las clases gen\xe9ricas en C#?",id:"qu\xe9-son-las-clases-gen\xe9ricas-en-c",level:4},{value:"Estructura de una clase gen\xe9rica.",id:"estructura-de-una-clase-gen\xe9rica",level:4},{value:"Ejemplo",id:"ejemplo-5",level:4},{value:"Otro ejemplo",id:"otro-ejemplo-1",level:4},{value:"M\xfaltiples tipos de datos",id:"m\xfaltiples-tipos-de-datos",level:4},{value:"Restricciones",id:"restricciones",level:4},{value:"Init",id:"init",level:2},{value:"Tipo de destino - New",id:"tipo-de-destino---new",level:2},{value:"\xa1Bienvenidas, target-typed new expressions!",id:"bienvenidas-target-typed-new-expressions",level:4},{value:"Inicializadores de objetos",id:"inicializadores-de-objetos",level:2},{value:"Llamar al constructor de la clase Base",id:"llamar-al-constructor-de-la-clase-base",level:2},{value:"M\xe9todos default en interfaces",id:"m\xe9todos-default-en-interfaces",level:2}],d={toc:c};function m(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"conceptos-de-poo---parte-2"},"Conceptos de POO - Parte 2"),(0,i.kt)("h2",{id:"abstracci\xf3n"},"Abstracci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si nuevamente nos vamos al diccionario tenemos que abstraer significa dejar de lado lo poco relevante y enfocarnos en lo m\xe1s importante o relevante para un fin buscado."),(0,i.kt)("li",{parentName:"ul"},"Trasponiendo este concepto hacia la programaci\xf3n orientada a objetos tenemos que este concepto establece que nos enfoquemos s\xf3lo en los campos que son relevantes para una clase."),(0,i.kt)("li",{parentName:"ul"},"La abstracci\xf3n de datos es el proceso de ocultar ciertos detalles y mostrar solo la informaci\xf3n esencial al usuario."),(0,i.kt)("li",{parentName:"ul"},"La abstracci\xf3n se puede lograr con clases abstractas o interfaces.")),(0,i.kt)("h4",{id:"ejemplo"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Cliente\n{\n    public int Id { get; set; }\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n    public DateTime FechaRegistro { get; set; }\n    public double Credito { get; set; }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Un cliente puede tener miles de caracter\xedsticas, que traducidos a un lenguaje de programaci\xf3n orientada a objetos ser\xedan campos y propiedades, pero \xbfPor qu\xe9 s\xf3lo consideramos estos seis?"),(0,i.kt)("li",{parentName:"ul"},"La respuesta es f\xe1cil, porque la programaci\xf3n orientada a objetos nos indica mediante la Abstracci\xf3n que s\xf3lo nos enfoquemos en aquello que es relevante para nuestro software, dejando de lado todo lo dem\xe1s.")))),(0,i.kt)("h2",{id:"herencia"},"Herencia"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Es el mecanismo de la programaci\xf3n orientada orientada a objetos mediante el cual constru\xedmos una clase a partir de otra, compartiendo c\xf3digo de una hacia otra clase."),(0,i.kt)("li",{parentName:"ul"},"A la clase que recibe los miembros de otra clase, es decir que hereda desde otra clase, se le llama clase hija."),(0,i.kt)("li",{parentName:"ul"},"A la clase que da la herencia a su clase hija se le llama clase padre."),(0,i.kt)("li",{parentName:"ul"},'En C#, es posible heredar campos y m\xe9todos de una clase a otra. Agrupamos el "concepto de herencia" en dos categor\xedas:',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Clase derivada (hijo): la clase que hereda de otra clase"),(0,i.kt)("li",{parentName:"ul"},"Clase base (padre): la clase de la que se hereda"))),(0,i.kt)("li",{parentName:"ul"},"Para heredar de una clase, use el  s\xedmbolo \u201c",(0,i.kt)("strong",{parentName:"li"},":"),"\u201d.")),(0,i.kt)("h4",{id:"ejemplo-1"},"Ejemplo"),(0,i.kt)("p",null,"Clase padre:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class DocumentoVenta\n{\n    public int Id { get; set; }\n    public string Serie { get; set; }\n    public string Correlativo { get; set; }\n    public DateTime FechaEmision { get; set; }\n    public double MontoTotal { get; set; }\n}\n\n")),(0,i.kt)("p",null,"Tiene dos clases hijas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Boleta : DocumentoVenta\n{\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n}\n    public class Factura : DocumentoVenta\n{\n    public string RazonSocial { get; set; }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Decimos que boleta y factura son hijas que heredan de su padre Documento venta ya que heredan todas las caracter\xedsticas de \xe9l, y le a\xf1aden sus propiedades particulares, con esto reducimos c\xf3digo redundante."))),(0,i.kt)("h4",{id:"palara-clave-sealed"},'Palara clave "sealed"'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si no desea que otras clases hereden de una clase, use la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"sealed"),"."),(0,i.kt)("li",{parentName:"ul"},"Si intenta acceder a una clase sealed, C# generar\xe1 un error:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"sealed class Vehicle \n{\n  ...\n}\n\nclass Car : Vehicle \n{\n  ...\n}\n\n")),(0,i.kt)("h4",{id:"palara-clave-base"},'Palara clave "base"'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La palabra clave \u201c",(0,i.kt)("strong",{parentName:"li"},"base"),"\u201d se usa para acceder a los constructores y m\xe9todos de la clase \u201cpadre\u201d. "),(0,i.kt)("li",{parentName:"ul"},"\xdaselo dentro del m\xe9todo , constructor, etc.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\npublic class Animal {\n   public string repColor = "brown";\n}\npublic class Reptile: Animal {\n   string repColor = "green";\n   public void display() {\n      Console.WriteLine("Color: "+base.repColor);\n      Console.WriteLine("Color: "+repColor);\n   }\n}\npublic class Demo {\n   public static void Main() {\n      Reptile rep = new Reptile();\n      rep.display();\n   }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Podemos usar los miembros de la clase base sin necesidad de utilizar la palabra clave base.")))),(0,i.kt)("h3",{id:"herencia-m\xfaltiple"},"Herencia m\xfaltiple"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La herencia m\xfaltiple es cuando una clase hereda propiedades y m\xe9todos de m\xe1s de una clase padre. En otras palabras, una clase hija puede tener m\xfaltiples clases padres. Este tipo de herencia es posible en algunos lenguajes de programaci\xf3n como C++, pero no en otros como Java.")),(0,i.kt)("h4",{id:"por-qu\xe9-no-se-permite-herencia-m\xfaltiple-en-todos-los-lenguajes-de-programaci\xf3n"},"\xbfPor qu\xe9 no se permite herencia m\xfaltiple en todos los lenguajes de programaci\xf3n?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La herencia m\xfaltiple puede llevar a problemas de ambig\xfcedad. En otras palabras, si dos clases padres tienen m\xe9todos o propiedades con el mismo nombre, puede no estar claro cu\xe1l de esos m\xe9todos o propiedades utilizar para la clase hija. "),(0,i.kt)("li",{parentName:"ul"},"Por esta raz\xf3n, algunos lenguajes de programaci\xf3n no permiten herencia m\xfaltiple.")),(0,i.kt)("h4",{id:"lista-de-lenguajes-de-programaci\xf3n-que-soportan-herencia-m\xfaltiple"},"Lista de lenguajes de programaci\xf3n que soportan herencia m\xfaltiple:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C++"),(0,i.kt)("li",{parentName:"ul"},"Python"),(0,i.kt)("li",{parentName:"ul"},"Ruby")),(0,i.kt)("h4",{id:"lista-de-lenguajes-de-programaci\xf3n-que-no-soportan-herencia-m\xfaltiple"},"Lista de lenguajes de programaci\xf3n que NO soportan herencia m\xfaltiple:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Java"),(0,i.kt)("li",{parentName:"ul"},"C#"),(0,i.kt)("li",{parentName:"ul"},"PHP")),(0,i.kt)("h4",{id:"herencia-simple-y-herencia-m\xfaltiple"},"Herencia simple y herencia m\xfaltiple"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La herencia simple y la herencia m\xfaltiple son dos conceptos clave en la programaci\xf3n orientada a objetos."),(0,i.kt)("li",{parentName:"ul"},"La herencia simple implica que una clase hija solo puede heredar propiedades y m\xe9todos de una clase padre, mientras que la herencia m\xfaltiple implica que una clase hija puede heredar propiedades y m\xe9todos de m\xe1s de una clase padre."),(0,i.kt)("li",{parentName:"ul"},"Es importante tener en cuenta que no todos los lenguajes de programaci\xf3n permiten la herencia m\xfaltiple debido a la posible ambig\xfcedad en los m\xe9todos y propiedades.")),(0,i.kt)("h4",{id:"c----herencia-m\xfaltiple"},"C# -- Herencia m\xfaltiple"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# como otros lenguajes orientados a objetos, implementa herencia simple. Es decir, que solo podemos heredar de una clase padre."),(0,i.kt)("li",{parentName:"ul"},"La manera de implementar herencia m\xfaltiple en C# es con interfaces. Ahora bien, esto es relativo, recordemos que una interfaz nos obliga a implementar cierto c\xf3digo, pero no nos proporciona una definici\xf3n del mismo , al menos hasta C# 8 con los m\xe9todos default en interfaces. ")),(0,i.kt)("h4",{id:"c\xf3mo-implemento-herencia-de-una-clase-y-adem\xe1s-implemento-interfaces-en-c"},"\xbfc\xf3mo implemento herencia de una clase, y adem\xe1s implemento interfaces en C#?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En C# primero debes indicar si heredas de una clase, y a continuaci\xf3n puedes implementar las interfaces que desees."),(0,i.kt)("li",{parentName:"ul"},"Mientras que la herencia est\xe1 limitada a una sola clase, el n\xfamero de interfaces que puedes implementar no tiene l\xedmite. "),(0,i.kt)("li",{parentName:"ul"},"Veamos un ejemplo para que nos quede m\xe1s claro:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-k_INZV7rnKU/YH4Jkot-8ZI/AAAAAAABA1g/9vSeieRsRmULpnQbQX6WKY0MSlbmR5L3gCLcBGAsYHQ/s567/herenciC%2523.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Aqu\xed defin\xed una clase llamada A. Una interfaz IEjemplo y otra interfaz IOperacion. Ambas son interfaces normales. Por ultimo defin\xed una interfaz IDefault, en la implement\xf3 la nueva funcionalidad de C# 8, que es la de definir un m\xe9todo default. "),(0,i.kt)("li",{parentName:"ul"},"Esta funcionalidad es sencilla, con ella las interfaces dejan de ser meros contratos y nos permiten implementar c\xf3digo como tal. En otras palabras, cada clase que implemente la interfaz tiene ya definido el comportamiento para los m\xe9todos default. Puede modificarlo si lo desea, pero si no, se usa el c\xf3digo que se especifico en la interfaz.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ahora veamos como implementar herencia m\xfaltiple usando clases e interfaces:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-p_wL-533Gus/YH4KVnaGiII/AAAAAAABA1o/i7kbdZKNJN03R6oo-xv9X2Gm6pe4SALrACLcBGAsYHQ/s16000/clase%2BB.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como vemos B es una clase compleja. Primero hereda de A. Es importante recordar, en C# es indistinta la sintaxis para heredar de una clase o implementar una interfaz, pero lo primero que debe venir despu\xe9s de los \u201c:\u201d es la clase de la que se hereda. Es decir si cambio el orden, y pongo A en cualquier otra posici\xf3n el compilador marcar\xe1 error."),(0,i.kt)("li",{parentName:"ul"},"Despu\xe9s de la clase de la que se hereda, pueden venir una serie de interfaces separadas por coma. Como dijimos antes una clase puede implementar cualquier n\xfamero de Interfaces."),(0,i.kt)("li",{parentName:"ul"},"En este caso, las primeras dos interfaces me obligan a implementar un m\xe9todo cada una. Lo interesante es la tercera: no implemente ning\xfan m\xe9todo de la misma. Pero como sus m\xe9todos son default, no es necesario.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ahora veamos que puedo hacer con mi clase B:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-0wio5QDZFhQ/YH4PDoVoyvI/AAAAAAABA28/ERuOMB6e80MBVSydOOquNBxCo8ctgkp3ACLcBGAsYHQ/s16000/HerenciaMultipleC%2523.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como vemos cree un nuevo objeto B. Este objeto por supuesto puede usar los m\xe9todos nombrados como metodo1 y sumar, ya que los implemento. Hasta aqu\xed todo muy sencillo, si la clase A tuviera sus propios m\xe9todos B podr\xeda usarlos, adem\xe1s de todos los que implemento obligado por las interfaces.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pero con la nueva funcionalidad podemos hacer algo m\xe1s. Bueno primero hay que admitir que tiene sus limitaciones, al momento de invocar los m\xe9todos default, debemos hacerlo desde un objeto de tipo de la interfaz que los contiene, no podemos hacerlo directo del objeto que la implementa. Veamos un ejemplo:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-ASWilh-eLHo/YH4QVmHic-I/AAAAAAABA3E/JYEGwXs_ZSQyUaxT1RQP_KH6tWLLN4hVACLcBGAsYHQ/s16000/InterfaceDefault.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"En este caso defino objeto2 como IDefault, pero le asigno el valor de new B(), es decir de un objeto B. As\xed puedo usar los m\xe9todos default de mi interfaz."),(0,i.kt)("li",{parentName:"ul"},"En el segundo ejemplo, hago un casting. Ya ten\xeda definido objeto como B, pero lo casteo a IDefault. De esa manera tambi\xe9n puedo usar el m\xe9todo default multiplicar."),(0,i.kt)("li",{parentName:"ul"},"Finalmente en la interfaz defin\xed un m\xe9todo est\xe1tico. Este es todav\xeda m\xe1s pr\xe1ctico, pues puedo ejecutarlo directamente usando IDefault, sin necesidad de tener ninguna instancia. ")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Como vemos con los nuevos m\xe9todos default de interfaces se abre la puerta a una especie de herencia m\xfaltiple m\xe1s completa en C#. Veamos un ejemplo:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-EeKEEzxwzCQ/YH4U6bDO8zI/AAAAAAABA3U/fo5j-aUJMVsMk2xMiNb924I-kw-Byf4oACLcBGAsYHQ/s16000/MultipleHerencia.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como vemos tengo 3 interfaces. Cada una tiene un m\xe9todo default diferente. Declaro IMultiAnimal como una nueva interfaz . Esta hereda de las otras 3 interfaces. "),(0,i.kt)("li",{parentName:"ul"},"En las interfaces no tenemos limite, cada interfaz puede heredar de m\xfaltiples interfaces. "),(0,i.kt)("li",{parentName:"ul"},"De esta manera hemos unido los 3 comportamientos en una sola interfaz. "),(0,i.kt)("li",{parentName:"ul"},"Como vemos tengo 3 interfaces. Cada una tiene un m\xe9todo default diferente. Declaro IMultiAnimal como una nueva interfaz . Esta hereda de las otras 3 interfaces. En las interfaces no tenemos limite, cada interfaz puede heredar de m\xfaltiples interfaces. De esta manera hemos unido los 3 comportamientos en una sola interfaz."),(0,i.kt)("li",{parentName:"ul"},"Por \xfaltima la clase MultiAnimal, implementa esta interfaz.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ahora veamos como podemos usarla:")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://1.bp.blogspot.com/-hyGB7dLWsWs/YH4VumR0Y7I/AAAAAAABA3c/wED8lvBlVOULmO3p84C8P6jtJIT7nnxHQCLcBGAsYHQ/s16000/EJecutaAnimal.png",alt:"Ejemplo"})),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como vemos hemos definido animal como IMultiAnimal, y lo creamos con new MultiAnimal(). Ahora nuestro objeto tiene los 3 m\xe9todos, puede maullar, ladrar y balar.")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://robertomiguelz.blogspot.com/2021/04/herencia-multiple-en-c-heredar-de-clase.html"},"Herencia m\xfaltiple en C#. Heredar de clase padre e implementar interfaz. Interfaces con m\xe9todos default.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.delftstack.com/es/howto/csharp/inherit-from-multiple-classes-in-csharp/"},"Heredar de varias clases en C#")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://tecnobits.com/diferencia-entre-herencia-simple-y-herencia-multiple/"},"Diferencia entre herencia simple y herencia multiple"))))),(0,i.kt)("h2",{id:"encapsulamiento"},"Encapsulamiento"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Especifica quien puede interactuar con los miembros de una clase."),(0,i.kt)("li",{parentName:"ul"},"Este concepto puede ocultar los miembros de una clase hacia el exterior seg\xfan sea conveniente."),(0,i.kt)("li",{parentName:"ul"},"Este concepto est\xe1 fuertemente relacionado con los ",(0,i.kt)("a",{parentName:"li",href:"/documentacion/docs/C--/POO#modificadores-de-acceso"},"modificadores de acceso")),(0,i.kt)("li",{parentName:"ul"},"Para ver un ejemplo podemos utilizar la siguiente clase:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public class Cliente\n{         \n    public int Id { get; set; }\n    public string Nombres { get; set; }\n    public string Apellidos { get; set; }\n    public DateTime FechaRegistro { get; set; }\n    private double Credito { get; set; }\n \n    public void AumentarCredito(double monto)\n    {\n        this.Credito += monto;\n    }        \n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como notamos, podemos controlar el encapsulamiento con los modificadores de acceso, siendo que la clase Cliente es accesible desde cualquier parte de la aplicaci\xf3n, al igual que las propiedades Id, Nombres, Apellidos y FechaRegistro ya que todos estos son p\xfablicos."),(0,i.kt)("li",{parentName:"ul"},"Sin embargo, el campo Credito s\xf3lo es accesible desde dentro de la clase (al ser privado) y si se quiere aumentar el cr\xe9dito tenemos a nuestra disposici\xf3n el m\xe9todo AumentarCredito ya que este s\xed que es p\xfablico.")))),(0,i.kt)("h2",{id:"polimorfismo"},"Polimorfismo"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Polimorfismo significa "muchas formas", y ocurre cuando tenemos muchas clases que est\xe1n relacionadas entre s\xed.'),(0,i.kt)("li",{parentName:"ul"},"El polimorfismo es cuando se usa un m\xe9todo para realizar una tarea. Pero la misma acci\xf3n(tarea) se puede hacer de diferentes maneras."),(0,i.kt)("li",{parentName:"ul"},"Existen dos formas de  aplicar polimorfismo:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Por interfaz"),(0,i.kt)("li",{parentName:"ul"},"Por herencia")))),(0,i.kt)("h4",{id:"ejemplo-de-herencia"},"Ejemplo de Herencia"),(0,i.kt)("p",null,"Tenemos la clase padre Animal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    public abstract class Animal\n{\n    public abstract void EmitirSonido();\n}\n\n")),(0,i.kt)("p",null,"Y las clases hijas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'    public class Perro : Animal\n{\n    public override void EmitirSonido()\n    {\n        Console.WriteLine("Guau guau!");\n    }\n}\n\n    public class Gato : Animal\n{\n    public override void EmitirSonido()\n    {\n        Console.WriteLine("Miau miau!");\n    }\n}\n\n')),(0,i.kt)("h4",{id:"otro-ejemplo"},"Otro ejemplo"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Piense en una clase base llamada Animal que tiene un m\xe9todo llamado animalSound(). "),(0,i.kt)("li",{parentName:"ul"},"Las clases derivadas de animales podr\xedan ser cerdos, gatos, perros, p\xe1jaros, y tambi\xe9n tienen su propia implementaci\xf3n de animalSound(el cerdo gru\xf1e y el gato ma\xfalla, etc.)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Animal  \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The animal makes a sound");\n  }\n}\n\nclass Pig : Animal \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The pig says: wee wee");\n  }\n}\n\nclass Dog : Animal \n{\n  public void animalSound() \n  {\n    Console.WriteLine("The dog says: bow wow");\n  }\n}\n\nclass Program \n{\n  static void Main(string[] args) \n  {\n    Animal myAnimal = new Animal();  \n    Animal myPig = new Pig();  \n    Animal myDog = new Dog();  \n\n    myAnimal.animalSound();\n    myPig.animalSound();\n    myDog.animalSound();\n  }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"El resultado del ejemplo anterior probablemente no fue lo que esperaba. Esto se debe a que el m\xe9todo de la clase base anula el m\xe9todo de la clase derivada cuando comparten el mismo nombre."),(0,i.kt)("li",{parentName:"ul"},"Sin embargo, C# proporciona una opci\xf3n para anular el m\xe9todo de la clase base, agregando la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"virtual")," al m\xe9todo dentro de la clase base y usando la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"override")," para cada m\xe9todo de la clase derivada:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Animal  \n{\n  public virtual void animalSound() \n  {\n    Console.WriteLine("The animal makes a sound");\n  }\n}\n\nclass Pig : Animal  \n{\n  public override void animalSound() \n  {\n    Console.WriteLine("The pig says: wee wee");\n  }\n}\n\nclass Dog : Animal  \n{\n  public override void animalSound() \n  {\n    Console.WriteLine("The dog says: bow wow");\n  }\n}\n\nclass Program \n{\n  static void Main(string[] args) \n  {\n    Animal myAnimal = new Animal(); \n    Animal myPig = new Pig();  \n    Animal myDog = new Dog();  \n\n    myAnimal.animalSound();\n    myPig.animalSound();\n    myDog.animalSound();\n  }\n}\n\n')),(0,i.kt)("h2",{id:"propiedades"},"Propiedades"),(0,i.kt)("h4",{id:"encapsulaci\xf3n"},"Encapsulaci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'El significado de Encapsulaci\xf3n es asegurarse de que los datos "sensibles" est\xe9n ocultos para los usuarios. Para lograr esto, debes:',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Declarar campos/variables como private."),(0,i.kt)("li",{parentName:"ul"},"Proporcionar m\xe9todos public get y set, para acceder y actualizar el valor de un campo private .")))),(0,i.kt)("h4",{id:"por-qu\xe9-encapsulaci\xf3n"},"\xbfPor qu\xe9 encapsulaci\xf3n?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mejor control de los miembros de la clase (reduzca la posibilidad de que usted (u otros) estropeen el c\xf3digo)."),(0,i.kt)("li",{parentName:"ul"},"Los campos se pueden hacer de solo lectura (si solo usa el m\xe9todo get) o de solo escritura (si solo usa el m\xe9todo set)."),(0,i.kt)("li",{parentName:"ul"},"Flexible: el programador puede cambiar una parte del c\xf3digo sin afectar otras partes."),(0,i.kt)("li",{parentName:"ul"},"Mayor seguridad de los datos.")),(0,i.kt)("h4",{id:"propiedad"},"Propiedad"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Una propiedad es como una combinaci\xf3n de una variable y un m\xe9todo."),(0,i.kt)("li",{parentName:"ul"},"Tiene dos m\xe9todos: un get y un  set."),(0,i.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"class Person\n{\n  private string name; \n\n  public string Name   \n{\n    get { return name; }   \n    set { name = value; }  \n  }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"La propiedad Name est\xe1 asociada con el campo name. Es una buena pr\xe1ctica usar el mismo nombre tanto para la propiedad como para el campo privado, pero con la primera letra en may\xfascula."),(0,i.kt)("li",{parentName:"ul"},"El m\xe9todo get devuelve el valor de la variable name."),(0,i.kt)("li",{parentName:"ul"},"El m\xe9todo set asigna  value a la variable name. La palabra clave ",(0,i.kt)("strong",{parentName:"li"},"value")," representa el valor que le asignamos a la propiedad.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Usamos la propiedad Name que creamos")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Program\n{\n  static void Main(string[] args)\n  {\n    Person myObj = new Person();\n    myObj.Name = "Liam";\n    Console.WriteLine(myObj.Name);\n  }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'A la propiedad se accede con un punto (".").')))),(0,i.kt)("h4",{id:"propiedades-autom\xe1ticas--auto-implementadas"},"Propiedades autom\xe1ticas / auto implementadas"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# tambi\xe9n proporciona una forma de usar propiedades abreviadas/autom\xe1ticas, donde no tiene que definir el campo para la propiedad, y solo tiene que escribir get; y set; dentro de la propiedad."),(0,i.kt)("li",{parentName:"ul"},"El siguiente ejemplo producir\xe1 el mismo resultado que el ejemplo anterior. La \xfanica diferencia es que hay menos c\xf3digo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Person\n{\n  public string Name  \n  { get; set; }\n}\n\nclass Program\n{\n  static void Main(string[] args)\n  {\n    Person myObj = new Person();\n    myObj.Name = "Liam";\n    Console.WriteLine(myObj.Name);\n  }\n}\n\n')),(0,i.kt)("h3",{id:"valor-por-defecto"},"Valor por defecto"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En C# las propiedades o propiedades auto implementadas son ampliamente utilizadas en nuestras clases en lugar de campos, es decir, variables."),(0,i.kt)("li",{parentName:"ul"},"Vamos a aprender 4 maneras diferentes de establecer el valor predeterminado de las propiedades utilizando ejemplos sencillos.")),(0,i.kt)("h4",{id:"1-usando-inicializadores-autom\xe1ticos-de-propiedades"},"1-\tUsando inicializadores autom\xe1ticos de propiedades"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En C# 6 podemos declarar la propiedad auto-implementada y establecer el valor por defecto en una sola l\xednea de declaraci\xf3n."),(0,i.kt)("li",{parentName:"ul"},"La sintaxis es:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Product{\n    public string Name {get;set;} = "";\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Por defecto, las propiedades de cadena (String) tendr\xe1n el valor null, utilizando la declaraci\xf3n en l\xednea, estamos estableciendo el valor por defecto como cadena vac\xeda.")))),(0,i.kt)("h4",{id:"2-asignar-valor-por-defecto-en-el-constructor"},"2-\tAsignar valor por defecto en el constructor"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En las versiones anteriores de C#, C# 5 e inferiores es una buena pr\xe1ctica establecer los valores por defecto de las propiedades C# en el constructor de la clase:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Product \n{\n    public string Name { get; set; }\n    public Product()\n    {\n        Name = "";\n    }\n}\n\n')),(0,i.kt)("h4",{id:"3-utilizar-el-definidor-de-propiedades"},"3-\tUtilizar el definidor de propiedades"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Podemos hacer uso de C# property setter para asignar un valor por defecto a las propiedades auto implementadas:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Product \n{\n   \n    // property setter\n    private string _name = "";\n    public string Name { \n        \n        get { return _name;}\n        set { _name = value;} \n    }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Property setter")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'En espa\xf1ol es "Propiedad Setter".'),(0,i.kt)("li",{parentName:"ul"},'Una Property setter es una "Propiedad" donde vos defin\xeds  que devuelve el get y que modifica el set.'),(0,i.kt)("li",{parentName:"ul"},"Una Property setter suele manipular una variable privada.")))),(0,i.kt)("h4",{id:"4-atributo-defaultvalue-y-property-setter"},"4-\tAtributo DefaultValue y Property Setter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En el ejemplo anterior hemos creado una variable privada y le hemos asignado un valor por defecto."),(0,i.kt)("li",{parentName:"ul"},"En lugar de eso podemos usar el atributo DefaultValue para asignar un valor por defecto:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class Product \n{\n     // property setter\n    private string _name;\n\n    [DefaultValue("")]\n    public string Name { \n        \n        get { return _name;}\n        set { _name = value;} \n    }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"El atributo DefaultValue  s\xf3lo funciona con la propiedad setter."),(0,i.kt)("li",{parentName:"ul"},"El c\xf3digo de abajo no asignar\xe1 un valor por defecto a la propiedad. El valor por defecto sigue siendo null:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Product\n{\n    [DefaultValue("")]\n    public string Name { get; set; }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.arungudelli.com/es/csharp-tips/csharp-property-default-value/"},"C\xf3mo establecer el valor por defecto a C# propiedad o C# auto implementado propiedad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/programming-guide/classes-and-structs/auto-implemented-properties"},"Propiedades autoimplementadas (Gu\xeda de programaci\xf3n de C#)"))))),(0,i.kt)("h2",{id:"enumeraci\xf3n"},"Enumeraci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Enum es una "clase" especial que representa un grupo de constantes (variables inalterables/de solo lectura).'),(0,i.kt)("li",{parentName:"ul"},"Para crear un enum, use la palabra clave ",(0,i.kt)("strong",{parentName:"li"},"enum")," (en lugar de class o interface) y entre llaves \u201c{}\u201d ponga las constantes separadas con comas."),(0,i.kt)("li",{parentName:"ul"},"Sintaxis: enum nombre { valor1 , valor2 , ..}."),(0,i.kt)("li",{parentName:"ul"},"El nombre de un enum se utiliza como tipo de dato de una variable , que almacena algun valor que se especifico."),(0,i.kt)("li",{parentName:"ul"},'Y cada valor es una \u201cpropiedad/campo\u201d de la "clase especial", que se accede con el punto (\u201c.\u201d).')),(0,i.kt)("h4",{id:"ejemplo-2"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Level \n{\n  Low,\n  Medium,\n  High\n}\n\n")),(0,i.kt)("p",null,"Puede acceder a elementos de un enum utilice la sintaxis de punto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Level myVar = Level.Medium;\nConsole.WriteLine(myVar);\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},'Enum es la abreviatura de "enumeraciones", que significa "listado espec\xedficamente".'))),(0,i.kt)("h4",{id:"tambi\xe9n-puedes-tener-un-enum-dentro-de-una-clase"},"Tambi\xe9n puedes tener un enum dentro de una clase:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"class Program\n{\n  enum Level\n  {\n    Low,\n    Medium,\n    High\n  }\n  static void Main(string[] args)\n  {\n    Level myVar = Level.Medium;\n    Console.WriteLine(myVar);\n  }\n}\n\n")),(0,i.kt)("h4",{id:"valor-de-una-enumeraci\xf3n"},"Valor de una enumeraci\xf3n"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"De forma predeterminada, el primer elemento de una enumeraci\xf3n tiene el valor 0. El segundo tiene el valor 1, y as\xed sucesivamente."),(0,i.kt)("li",{parentName:"ul"},"Para obtener el valor entero de un elemento, debe convertir expl\xedcitamente el elemento en un int:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Months\n{\n  January,    // 0\n  February,   // 1\n  March,      // 2\n  April,      // 3\n  May,        // 4\n  June,       // 5\n  July        // 6\n}\n\nstatic void Main(string[] args)\n{\n  int myNum = (int) Months.April;\n  Console.WriteLine(myNum);\n}\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tambi\xe9n puede asignar sus propios valores de enumeraci\xf3n y los siguientes elementos actualizar\xe1n sus n\xfameros en consecuencia:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"enum Months\n{\n  January,    // 0\n  February,   // 1\n  March=6,    // 6\n  April,      // 7\n  May,        // 8\n  June,       // 9\n  July        // 10\n}\n\nstatic void Main(string[] args)\n{\n  int myNum = (int) Months.April;\n  Console.WriteLine(myNum);\n}\n\n")),(0,i.kt)("h4",{id:"enumeraci\xf3n-en-una-instrucci\xf3n-switch"},"Enumeraci\xf3n en una instrucci\xf3n Switch"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las enumeraciones se usan a menudo en declaraciones switch para verificar los valores correspondientes:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'enum Level \n{\n  Low,\n  Medium,\n  High\n}\n\nstatic void Main(string[] args) \n{\n  Level myVar = Level.Medium;\n  switch(myVar) \n  {\n    case Level.Low:\n      Console.WriteLine("Low level");\n      break;\n    case Level.Medium:\n       Console.WriteLine("Medium level");\n      break;\n    case Level.High:\n      Console.WriteLine("High level");\n      break;\n  }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\xbfPor qu\xe9 y cu\xe1ndo usar enumeraciones?")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Use enumeraciones cuando tenga valores que sepa que no van a cambiar, como meses, d\xedas, colores, baraja de cartas, etc."))),(0,i.kt)("h2",{id:"this"},"This"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"La palabra clave this hace referencia a la instancia(objeto) actual de la clase y tambi\xe9n se usa como modificador del primer par\xe1metro de un m\xe9todo de extensi\xf3n."),(0,i.kt)("li",{parentName:"ul"},'Podemos hacer referencia al objeto que estamos usando, con "this".')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fedeleva.github.io/documentacion/docs/Javascript/objeto#this"},"Explicaci\xf3n en otro lenguaje"))))),(0,i.kt)("h4",{id:"ejemplo-3"},"Ejemplo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Employee\n{\n    private string alias;\n    private string name;\n\n    public Employee(string name, string alias)\n    {\n        this.name = name;\n        this.alias = alias;\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://oregoom.com/c-sharp/poo/"},"POO en C#")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.discoduroderoer.es/poo-en-c-sharp/"},"POO En C# -- 2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/06/27/fundamentos-de-la-poo-con-c-3-10-objetos-y-clases/"},"Fundamentos de la POO con C# [3/10]: Objetos y Clases")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/06/28/fundamentos-de-la-poo-con-c-5-10-los-constructores/"},"Fundamentos de la POO con C# [5/10]: Los Constructores")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/08/02/fundamentos-de-la-poo-con-c-6-10-signaturas-e-interfaces/"},"Fundamentos de la POO con C# [6/10]: Signaturas e Interfaces")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bravedeveloper.com/2022/09/13/fundamentos-de-la-poo-con-c-9-10-los-4-pilares/"},"Fundamentos de la POO con C# [9/10]: Los 4 pilares")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/cs/cs_constructors.php"},"C# Constructors")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/cs/cs_oop.php"},"C# - What is OOP?"))))),(0,i.kt)("h2",{id:"constructor-principal"},"Constructor principal"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A partir de C# 12, puede definir un constructor principal como parte de la declaraci\xf3n de clase."),(0,i.kt)("li",{parentName:"ul"},"Cuando usa un constructor principal, para instanciar un objeto se debe utilizar un inicializador de objeto.")),(0,i.kt)("h4",{id:"ejemplo-4"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Container(int capacity)\n{\n    private int _capacity = capacity;\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Estamos definiendo la clase y el constructor en la misma declaraci\xf3n."),(0,i.kt)("li",{parentName:"ul"},"Agregar par\xe1metros al nombre de clase define el constructor principal. Esos par\xe1metros est\xe1n disponibles en el cuerpo de la clase, que incluye sus miembros. Puede usarlos para inicializar campos o en cualquier otro lugar donde los necesite.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tambi\xe9n puede usar el modificador required en una propiedad para obligar al programador que usen un inicializador de objeto para establecer el valor inicial de la propiedad:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Person\n{\n    public required string LastName { get; set; }\n    public required string FirstName { get; set; }\n}\n\nvar p1 = new Person(); // Error! \nvar p2 = new Person() { FirstName = "Grace", LastName = "Hopper" };\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Los inicializadores de objetos son las llaves \u201c{}\u201d que se encuentran despues del constructor y especifican que valor debe tener cada Propiedad."),(0,i.kt)("li",{parentName:"ul"},"Puedes usar los inicializadores de objetos para instanciar cualquier objeto, siempre y cuando las propiedades de la clase tengan un set o init.")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/fundamentals/types/classes"},"Introducci\xf3n a las clases"))))),(0,i.kt)("h2",{id:"clases-gen\xe9ricas"},"Clases gen\xe9ricas"),(0,i.kt)("h4",{id:"qu\xe9-son-las-clases-gen\xe9ricas-en-c"},"\xbfQu\xe9 son las clases gen\xe9ricas en C#?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Imagina que est\xe1s en una tienda de zapatos que s\xf3lo vende una talla. Este enfoque de talla \xfanica no ser\xeda muy popular, \xbfverdad? Afortunadamente, los zapatos vienen en tallas variadas para adaptarse a todos."),(0,i.kt)("li",{parentName:"ul"},"Del mismo modo, en el mundo de la programaci\xf3n, necesitamos herramientas que puedan adaptarse a diferentes tipos de datos, y ah\xed es donde entran las clases gen\xe9ricas."),(0,i.kt)("li",{parentName:"ul"},"En el sentido m\xe1s b\xe1sico, una clase gen\xe9rica en C# es una clase que puede trabajar con varios tipos de datos, sin tener que ser reescrita para cada uno."),(0,i.kt)("li",{parentName:"ul"},'Las clases gen\xe9ricas nos permiten definir clases, interfaces y m\xe9todos con los llamados "par\xe1metros de tipo\u201d, que indican los tipos de datos reales que se usar\xe1n.'),(0,i.kt)("li",{parentName:"ul"},'Una clase gen\xe9rica en C# establece una estructura b\xe1sica que puede usarse con diferentes tipos de datos. Por ejemplo, podr\xedas tener una clase gen\xe9rica "Lista" que puede manejar listas de enteros, listas de cadenas, listas de objetos de una clase personalizada, y as\xed sucesivamente.')),(0,i.kt)("h4",{id:"estructura-de-una-clase-gen\xe9rica"},"Estructura de una clase gen\xe9rica."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class NombreClase<T>\n{\n    // Cuerpo de la clase\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, NombreClase es el nombre de la clase y ","<","T> es el par\xe1metro de tipo."),(0,i.kt)("li",{parentName:"ul"},"Puedes pensar en T como una especie de variable que indica que tipo de dato se va a usar. "),(0,i.kt)("li",{parentName:"ul"},"En lugar de especificar un tipo de dato espec\xedfico como int, string o double, usamos T para mantener nuestro c\xf3digo flexible. "),(0,i.kt)("li",{parentName:"ul"},"Cuando creamos una instancia de la clase gen\xe9rica, sustituimos T con el tipo de datos que queremos utilizar.")))),(0,i.kt)("h4",{id:"ejemplo-5"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Caja<T>\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, hemos creado una clase gen\xe9rica llamada Caja que puede contener cualquier tipo de datos. El tipo de datos es representado por T, que se utiliza en todo el cuerpo de la clase."),(0,i.kt)("li",{parentName:"ul"},"Luego, cuando creamos una instancia de Caja, podemos especificar el tipo de datos que queremos que contenga.")))),(0,i.kt)("h4",{id:"otro-ejemplo-1"},"Otro ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Caja<T>\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n\n    public void MostrarContenido()\n    {\n        Console.WriteLine($"El contenido de la caja es: {contenido}");\n    }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'La clase tiene una propiedad "Contenido" que puede contener cualquier tipo de datos y un m\xe9todo "MostrarContenido" que imprime el contenido de la caja en la consola.')))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Cuando creamos una instancia de "Caja", especificamos el tipo de datos que queremos que contenga. Por ejemplo, podr\xedamos crear una "Caja" para almacenar un string de esta manera:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Caja<string> cajaDePalabras = new Caja<string>();\ncajaDePalabras.Contenido = "Hola, Mundo!";\ncajaDePalabras.MostrarContenido();  // Salida: El contenido de la caja es: Hola, Mundo!\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Dentro del s\xedmbolo \u201c","<",">\u201d especificamos los tipos de datos  que van a ser los par\xe1metros de tipos."),(0,i.kt)("li",{parentName:"ul"},"Luego del s\xedmbolo \u201c","<",">\u201d vienen los par\xe9ntesis para invocar al constructor.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'O podr\xedamos crear una "Caja" para almacenar un n\xfamero entero:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Caja<int> cajaDeNumeros = new Caja<int>();\ncajaDeNumeros.Contenido = 42;\ncajaDeNumeros.MostrarContenido();  // Salida: El contenido de la caja es: 42\n\n")),(0,i.kt)("h4",{id:"m\xfaltiples-tipos-de-datos"},"M\xfaltiples tipos de datos"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las clases gen\xe9ricas no se limitan a un solo tipo de datos. Pueden ser tan diversas como un equipo de superh\xe9roes, cada uno con su propia habilidad especial."),(0,i.kt)("li",{parentName:"ul"},"Puedes definir clases gen\xe9ricas que trabajen con m\xfaltiples tipos de datos al mismo tiempo."),(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes un ejemplo de c\xf3mo podr\xedas hacer esto:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Partido<Team1, Team2>\n{\n    public Team1 Local { get; set; }\n    public Team2 Visitante { get; set; }\n\n    public Partido(Team1 local, Team2 visitante)\n    {\n        Local = local;\n        Visitante = visitante;\n    }\n\n    public void MostrarPartido()\n    {\n        Console.WriteLine($"Partido: {Local} VS {Visitante}");\n    }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Esta clase gen\xe9rica "Partido" tiene dos par\xe1metros de tipo: Team1 y Team2. Cada uno representa el equipo local y el equipo visitante del partido. Cuando creamos una nueva instancia de "Partido", especificamos los tipos de datos que queremos para cada equipo:')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Partido<string, string> partidoFutbol = new Partido<string, string>("Barcelona FC", "Real Madrid");\npartidoFutbol.MostrarPartido();  // Salida: Partido: Barcelona FC VS Real Madrid\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Dentro del s\xedmbolo \u201c","<",">\u201d especificamos que tipos de datos ser\xe1n Team1 y Team2 (En el mismo orden que se especific\xf3 en la clase)."),(0,i.kt)("li",{parentName:"ul"},"Luego del s\xedmbolo \u201c","<",">\u201d, se ubican los par\xe9ntesis con los par\xe1metros del constructor.")))),(0,i.kt)("h4",{id:"restricciones"},"Restricciones"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las restricciones en las clases gen\xe9ricas son como reglas que estableces para tus amigos antes de prestarles tu preciada colecci\xf3n de c\xf3mics. Estas reglas definen lo que tus amigos pueden y no pueden hacer con tus c\xf3mics."),(0,i.kt)("li",{parentName:"ul"},"Puedes aplicar restricciones a los par\xe1metros de tipo en una definici\xf3n de clase gen\xe9rica utilizando la palabra clave where."),(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes un ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Contenedor<T> where T : class\n{\n    private T contenido;\n\n    public T Contenido\n    {\n        get { return contenido; }\n        set { contenido = value; }\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'En este ejemplo, la clase gen\xe9rica "Contenedor" tiene una restricci\xf3n que indica que T debe ser una clase. Esto significa que s\xf3lo puedes utilizar tipos de referencia, no tipos de valor, cuando creas una instancia de "Contenedor".')))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Aqu\xed tienes otro ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Comparador<T> where T : IComparable<T>\n{\n    public T Valor1 { get; set; }\n    public T Valor2 { get; set; }\n\n    public int Comparar()\n    {\n        return Valor1.CompareTo(Valor2);\n    }\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'En este ejemplo, la clase gen\xe9rica "Comparador" tiene una restricci\xf3n que indica que T debe implementar la interfaz IComparable',"<","T>. Esto nos permite usar el m\xe9todo CompareTo en Valor1 y Valor2, algo que no podr\xedamos hacer sin la restricci\xf3n.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# permite varios tipos de restricciones, incluyendo restricciones de clase, de interfaz, de constructor sin par\xe1metros y m\xe1s. El uso de restricciones te permite obtener a\xfan m\xe1s poder y flexibilidad de las clases gen\xe9ricas, y puede ser una herramienta \xfatil en tus proyectos de programaci\xf3n.")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters"},"Constraints on type parameters (C# Programming Guide)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://estradawebgroup.com/Post/Como-utilizar-las-Clases-Genericas-en-C-para-Mayor-Flexibilidad-y-Reutilizacion-del-Codigo/20705"},"C\xf3mo utilizar las Clases Gen\xe9ricas en C# para Mayor Flexibilidad y Reutilizaci\xf3n del C\xf3digo"))))),(0,i.kt)("h2",{id:"init"},"Init"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A veces, desea instanciar un objeto y no desea cambiarlo despu\xe9s de eso. En otras palabras, desea que el objeto sea inmutable."),(0,i.kt)("li",{parentName:"ul"},"Para hacer eso, puede usar la palabra clave init en una propiedad o en un  indexer de un objeto."),(0,i.kt)("li",{parentName:"ul"},"La palabra clave init har\xe1 que el setter sea el setter que asigne un valor a la propiedad o al indexador solo durante la inicializaci\xf3n del objeto."),(0,i.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"{\n    public string Name { get; init; } = string.Empty;\n    public sbyte Age { get; init; } = 1;\n   \n}\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En este ejemplo, definimos la clase  Person con dos propiedades Namey Age. Ambas propiedades utilizan la palabra clave init en lugar de set. Significa que solo puede establecer su valor durante la inicializaci\xf3n del objeto de esta manera:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var person = new Person()\n{\n    Name = "John",\n    Age = 22\n};\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Al usar el init , estas obligado a usar  los inicializadores de objetos para instanciar un objeto."))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Si intenta asignar un valor a la propiedad de solo inicio, obtendr\xe1 un error de tiempo de compilaci\xf3n. Por ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'person.Name = "Jane"; // error\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.csharptutorial.net/csharp-tutorial/csharp-init/"},"C# init")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://geeks.ms/jorge/2020/09/28/c-9-0-specification-init-only-setters/"},"C# 9.0 \u2013 Specification \u2013 Init-only Setters"))))),(0,i.kt)("h2",{id:"tipo-de-destino---new"},"Tipo de destino - New"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En las primeras versiones de C# era obligatorio indicar el tipo de dato de las variables al declararlas, incluso cuando las inicializ\xe1bamos directamente. Antes de C# 3.0, ten\xedamos que usar instrucciones como las siguientes para asignar nuevas instancias a variables:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Invoice invoice = new Invoice(123);\nDictionary<string, Person> people = new Dictionary<string, Person>();\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Est\xe1 claro que en las asignaciones del bloque anterior hay mucha redundancia: si ya sabemos que la variable invoice es de tipo Invoice o que people es un diccionario porque estamos usando su constructor, \xbfpara qu\xe9 es necesario indicar el tipo de dato al definir las variables?")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Esto se solucion\xf3 en 2007 con la llegada de C# 3, que entre otras muchas maravillas, introdujo las variables locales de tipado impl\xedcito. Esto nos permiti\xf3 aprovechar la inferencia de tipos para simplificar el c\xf3digo sin restar legibilidad:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"var invoice = new Invoice(123);\nvar people = new Dictionary<string, Person>();\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sin embargo, a\xfan quedaban escenarios similares por mejorar, por ejemplo, en la declaraci\xf3n de campos o propiedades de una clase, donde tambi\xe9n encontramos tradicionalmente mucha redundancia:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class MyClass\n{\n    private Invoice invoice = new Invoice(123);\n    private Dictionary<string, Person> people = new Dictionary<string, Person>();\n    ...\n}\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pues hemos tenido que esperar hasta C# 9 para ver simplificadas estas construcciones, y alguna m\xe1s que veremos a continuaci\xf3n.")),(0,i.kt)("h4",{id:"bienvenidas-target-typed-new-expressions"},"\xa1Bienvenidas, target-typed new expressions!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Las target-typed new expressions permiten omitir el nombre de la clase al usar su constructor, siempre que el compilador pueda identificar de forma inequ\xedvoca el tipo de dato de que se trata. As\xed pues, podemos escribir el c\xf3digo como el siguiente:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class MyClass\n{\n    private Invoice invoice = new (123);\n    private Dictionary<string, Person> people = new ();\n    ...\n}\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Como pod\xe9s ver, bastar\xeda con utilizar la palabra reservada new() y, en su caso, los par\xe1metros del constructor. No hace falta repetir el tipo de dato, ya que est\xe1 claramente est\xe1 identificado en la definici\xf3n del campo, por lo que el resultado es un c\xf3digo menor verboso y, por lo tanto, m\xe1s legible.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Por supuesto, esto ser\xeda aplicable tambi\xe9n a variables locales, por lo que tendr\xedamos ya tres f\xf3rmulas distintas para realizar asignaciones a nuevas instancias:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Invoice invoice = new Invoice(123); // C# < 3\nvar invoice = new Invoice(123);     // C# < 9 \nInvoice invoice = new (123);        // C# >= 9\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Adem\xe1s de  la declaraci\xf3n de variables o campos, esta capacidad de omitir el tipo de datos al usar el constructor puede utilizarse en todas aquellas expresiones en las que tenga sentido instanciar objetos, como en la invocaci\xf3n de m\xe9todos:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'// Antes: DoSomething(new Person("Pedro"));\nDoSomething(new ("Pedro")); // Ok, el compilador puede inferir el tipo Person\n...\npublic void DoSomething(Person person) { ... }\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},'Fijate que el ejemplo anterior es un uso posible de esta nueva caracter\xedstica, aunque, en esta ocasi\xf3n, viendo la llamada a DoSomething(new ("Pedro")) no podemos intuir de qu\xe9 tipo de objeto se trata. En este caso creo ser\xeda m\xe1s conveniente usar el constructor de forma tradicional.')))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tambi\xe9n podemos usarlo en expresiones throw como la siguiente, donde se asumir\xe1 que estamos instanciando un objeto Exception:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'throw new("Cachis!");\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"O cuando aprovechamos la instanciaci\xf3n para inicializar propiedades:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Invoice inv = new() { Id = 1, CustomerId=99, Amount=1000 };\nDictionary<string, Person> people = new()\n{\n    ["1234"] = new("Pedro"),\n    ["5678"] = new("Juan"),\n};\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En cambio, no ser\xe1 posible su uso en otros escenarios como los siguientes, aunque los motivos son bastante razonables:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"dynamic d = new();                // new dynamic() tampoco est\xe1 permitido\nstring[] = new();                 // \xbfCon qu\xe9 tama\xf1o se inicializar\xeda?\nvar x = new { Property = new() }; // No se puede inferir el tipo\n\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.variablenotfound.com/2021/06/expresiones-new-con-el-tipo-de-destino.html"},"Expresiones new con el tipo de destino en C# 9")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/language-reference/operators/new-operator"},"operador new: el operador new crea una nueva instancia de un tipo"))))),(0,i.kt)("h2",{id:"inicializadores-de-objetos"},"Inicializadores de objetos"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Los inicializadores de objeto permiten asignar valores a cualquier campo o propiedad accesible de un objeto en el momento de su creaci\xf3n sin tener que invocar un constructor especifico."),(0,i.kt)("li",{parentName:"ul"},"La sintaxis de inicializador de objetos permite especificar argumentos para un constructor u omitir los argumentos (y la sintaxis de par\xe9ntesis)."),(0,i.kt)("li",{parentName:"ul"},"Ejemplo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Ejemplo:\npublic class Cat\n{\n   \n    public int Age { get; set; }\n    public string? Name { get; set; }\n\n    public Cat()\n    {\n    }\n\n    public Cat(string name)\n    {\n        this.Name = name;\n    }\n}\n// Instanciamos dos objetos con los mismos datos.\nCat cat = new Cat { Age = 10, Name = "Fluffy" };\nCat sameCat = new Cat("Fluffy"){ Age = 10 };\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/programming-guide/classes-and-structs/object-and-collection-initializers"},"Inicializadores de objeto y de colecci\xf3n (Gu\xeda de programaci\xf3n de C#)"))))),(0,i.kt)("h2",{id:"llamar-al-constructor-de-la-clase-base"},"Llamar al constructor de la clase Base"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Al declarar un constructor de una clase derivada, puede llamar a un constructor de una clase base. "),(0,i.kt)("li",{parentName:"ul"},"Para hacer que el constructor de una clase C llame de forma expl\xedcita al constructor de la clase padre, usamos \u201cdos puntos (\u201c:\u201d)\u201d y luego la palabra base() , entre par\xe9ntesis se ubican los par\xe1metros del constructor de la clase base:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public C (int c): base(valor)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Un ejemplo Completo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'abstract class Shape\n{\n    public const double pi = Math.PI;\n    protected double x, y;\n\n    public Shape(double x, double y)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    public abstract double Area();\n}\n\nclass Circle : Shape\n{\n    public Circle(double radius)\n        : base(radius, 0)\n    {  }\n\n    public override double Area() => pi * x * x;\n}\n\nclass Cylinder : Circle\n{\n    public Cylinder(double radius, double height)\n        : base(radius)\n    {\n        y = height;\n    }\n\n    public override double Area() => (2 * base.Area()) + (2 * pi * x * y);\n}\n\nclass Example\n{\n    static void Main()\n    {\n        double radius = 2.5;\n        double height = 3.0;\n\n        var ring = new Circle(radius);\n        Console.WriteLine($"Area of the circle = {ring.Area():F2}");\n        \n        \n        var tube = new Cylinder(radius, height);\n        Console.WriteLine($"Area of the cylinder = {tube.Area():F2}");\n        \n    }\n}\n\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Podemos usar los argumentos del constructor de la clase derivada para el constructor de la clase base.")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.tutorialesprogramacionya.com/csharpya/detalleconcepto.php?codigo=153"},"Orden de ejecuci\xf3n de los constructores con herencia")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/programming-guide/classes-and-structs/instance-constructors"},"Constructores de instancias (gu\xeda de programaci\xf3n de C#)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.delftstack.com/es/howto/csharp/csharp-call-base-constructor/"},"Llamar al constructor de la clase base desde el constructor de la clase secundaria en C#"))))),(0,i.kt)("h2",{id:"m\xe9todos-default-en-interfaces"},"M\xe9todos default en interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Los miembros con cuerpos permiten que la interfaz proporcione una implementaci\xf3n "predeterminada" para el m\xe9todo en clases y estructuras que no proporcionan su propia implementaci\xf3n.'),(0,i.kt)("li",{parentName:"ul"},"Con esto ahora se permiten miembros est\xe1ticos pero los campos de instancia no est\xe1n permitidos . Las propiedades autom\xe1ticas de instancia no son compatibles , ya que declarar\xedan impl\xedcitamente un campo oculto."),(0,i.kt)("li",{parentName:"ul"},"La forma m\xe1s simple de esta caracter\xedstica es la capacidad de declarar un m\xe9todo concreto en una interfaz, que es un m\xe9todo con un cuerpo:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'interface IA\n{\n    void M() { WriteLine("IA.M"); }\n}\n\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Una clase que implementa esta interfaz no necesita implementar su m\xe9todo concreto.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'class C : IA { } // OK\nIA i = new C();\ni.M(); // prints "IA.M"\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tenga en cuenta que una clase no hereda miembros de sus interfaces; que no se modifica con esta caracter\xedstica:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"new C().M(); // error: class 'C' does not contain a member 'M'\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Para invocar el m\xe9todo por defecto, se necesita una instancia de la interfaz que lo contiene y NO de la clase que lo implementa."),(0,i.kt)("li",{parentName:"ul"},"Se puede instanciar en una variable de tipo interfaz una instancia de una clase que implemente dicha interfaz.")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/default-interface-methods"},"default interface methods")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/es-es/dotnet/csharp/programming-guide/interfaces/explicit-interface-implementation"},"Implementaci\xf3n de interfaz expl\xedcita (Gu\xeda de programaci\xf3n de C#)"))))))}m.isMDXComponent=!0}}]);