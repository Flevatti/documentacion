"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[3028],{3905:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>d});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(o),d=a,g=p["".concat(l,".").concat(d)]||p[d]||u[d]||n;return o?r.createElement(g,i(i({ref:t},m),{},{components:o})):r.createElement(g,i({ref:t},m))}));function d(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,i=new Array(n);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<n;c++)i[c]=o[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},4863:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var r=o(7462),a=(o(7294),o(3905));const n={sidebar_position:5},i=void 0,s={unversionedId:"Git/commit",id:"Git/commit",title:"commit",description:"Viajar entre commits",source:"@site/docs/Git/commit.md",sourceDirName:"Git",slug:"/Git/commit",permalink:"/documentacion/docs/Git/commit",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Git/commit.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"Git",previous:{title:"Guia GitHub",permalink:"/documentacion/docs/Git/GitHubGuia"},next:{title:"Ramas",permalink:"/documentacion/docs/Git/ramas"}},l={},c=[{value:"Viajar entre commits",id:"viajar-entre-commits",level:2},{value:"Errores",id:"errores",level:2},{value:"Solucion:",id:"solucion",level:3},{value:"Revert",id:"revert",level:2}],m={toc:c};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"viajar-entre-commits"},"Viajar entre commits"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"git reset \n")),(0,a.kt)("p",null,"Es el comando para viajar en el tiempo (commits)."),(0,a.kt)("p",null,"Los podes perder seg\xfan el tiempo al que vayas."),(0,a.kt)("p",null,"Eso sirve cuando no has subido tu commit a Github o a otro repositorio remoto."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"git reset --mixed y ac\xe1 pegas el numero de hash del commit\n")),(0,a.kt)("p",null,"Por defecto , por lo tanto no hace falta especificarlo , de modo que se puede hacer asi:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"Git reset idcommit \n")),(0,a.kt)("p",null,"Este comando te guarda los cambios del commit que estas para que no los pierdas, para despu\xe9s poder guardarlos de nuevo"),(0,a.kt)("p",null,"Deja de hacer seguimiento a los archivos inexistente en ese commit. Y desaparecen los commit que todavia no se hicieron (viajar en el tiempo). "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"git reset --hard y y ac\xe1 pegas el numero de hash del commit\n")),(0,a.kt)("p",null,"Este te cambia al commit que le indicaste pero te borra los cambios que tengas "),(0,a.kt)("p",null,"Desaparecen los archivos inexistente y desaparecen los commit que todavia no se hicieron(viajar en el tiempo"),(0,a.kt)("p",null,"Cuando tires el comando git reflog al lado de los commit te va aparecer algo asi (bb85423), a eso me refiero con el numero de hash."),(0,a.kt)("p",null,"Usar con cuidado."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"Git reflog\n")),(0,a.kt)("p",null,"Muestra todos los cambios incluso si borramos los commit."),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"}," Ambos comandos git revert y git reset, deshacen commits anteriores. Pero si ya has subido tu commit a un repositorio remoto, se recomienda que no uses git reset, ya que reescribe el historial de commits. Esto puede hacer que trabajar en un repositorio con otros desarrolladores y mantener un historial consistente de commits sea muy dif\xedcil."))),(0,a.kt)("h2",{id:"errores"},"Errores"),(0,a.kt)("p",null,"Si haces un git reset y luego intentas hacer un push con lo que hiciste te tira un error (failed to push some refs to)."),(0,a.kt)("p",null,"Esto sucede porque en el tiempo que estas (commit) no contiene/no existen los mismos commits que est\xe1n en la nube (github). Para comprobar esto compara los commit de github con los locales (git log \u2013oneline)."),(0,a.kt)("h3",{id:"solucion"},"Solucion:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"Git pull origin nombrerama\n")),(0,a.kt)("p",null,"Restaura a la ultima version remota (github)"),(0,a.kt)("h2",{id:"revert"},"Revert"),(0,a.kt)("p",null,"Deshace los cambios realizados por un  , creando un commit completamente nuevo, todo esto sin alterar el historial de commits. "),(0,a.kt)("p",null,"Elimina un commit y hace otro commit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-git"},"Git revert idcommit \n")),(0,a.kt)("p",null,"Elimina el commit y hace un nuevo commit."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://inbo.github.io/tutorials/tutorials/git_undo_commit/undo_commits_images/03.svg",alt:"Descripcion del revert"})))}u.isMDXComponent=!0}}]);