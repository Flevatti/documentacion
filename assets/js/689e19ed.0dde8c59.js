"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[5454],{5680:(e,a,n)=>{n.d(a,{xA:()=>m,yg:()=>g});var o=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=o.createContext({}),c=function(e){var a=o.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},m=function(e){var a=c(e.components);return o.createElement(s.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),p=t,g=u["".concat(s,".").concat(p)]||u[p]||d[p]||r;return n?o.createElement(g,i(i({ref:a},m),{},{components:n})):o.createElement(g,i({ref:a},m))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,i=new Array(r);i[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:t,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3513:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(8168),t=(n(6540),n(5680));const r={sidebar_position:6},i="React Router v6",l={unversionedId:"React/router",id:"React/router",title:"React Router v6",description:"- Los ejemplos pueden estar escritos en TypeScript.",source:"@site/docs/React/router.md",sourceDirName:"React",slug:"/React/router",permalink:"/documentacion/docs/React/router",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/router.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"React",previous:{title:"Consumir API",permalink:"/documentacion/docs/React/api"},next:{title:"Context API",permalink:"/documentacion/docs/React/context"}},s={},c=[{value:"Router v6",id:"router-v6",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:4},{value:"Agregar un Enrutador",id:"agregar-un-enrutador",level:2},{value:"1- Creamos los componentes correspondiente a cada URL",id:"1--creamos-los-componentes-correspondiente-a-cada-url",level:4},{value:"2- Creamos el enrutador principal",id:"2--creamos-el-enrutador-principal",level:4},{value:"Manejar el 404",id:"manejar-el-404",level:2},{value:"Rutas anidadas",id:"rutas-anidadas",level:2},{value:"Enrutamiento del lado del cliente",id:"enrutamiento-del-lado-del-cliente",level:2},{value:"Cargar informaci\xf3n",id:"cargar-informaci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Manejar peticiones",id:"manejar-peticiones",level:2},{value:"Params",id:"params",level:2},{value:"Redirect",id:"redirect",level:2},{value:"Ejemplo",id:"ejemplo-1",level:4},{value:"Estilo de enlace activo",id:"estilo-de-enlace-activo",level:2},{value:"useNavigation",id:"usenavigation",level:2},{value:"Ejemplo",id:"ejemplo-2",level:4},{value:"Ruta Indice",id:"ruta-indice",level:2},{value:"Ejemplo",id:"ejemplo-3",level:4},{value:"UseNavigate",id:"usenavigate",level:2},{value:"Ejemplo",id:"ejemplo-4",level:4},{value:"Query",id:"query",level:2},{value:"Ejemplo",id:"ejemplo-5",level:4},{value:"Enrutamiento del lado del cliente.",id:"enrutamiento-del-lado-del-cliente-1",level:4},{value:"Sincronizaci\xf3n con la URL",id:"sincronizaci\xf3n-con-la-url",level:4},{value:"useSubmit",id:"usesubmit",level:2},{value:"Administrar la pila de historial",id:"administrar-la-pila-de-historial",level:2},{value:"Mutaciones sin navegaci\xf3n",id:"mutaciones-sin-navegaci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo-6",level:4},{value:"Rutas jsx",id:"rutas-jsx",level:2},{value:"Ejemplo",id:"ejemplo-7",level:4},{value:"Hooks de Parametros (Ejemplo)",id:"hooks-de-parametros-ejemplo",level:2},{value:"Ruta din\xe1mica (params)",id:"ruta-din\xe1mica-params",level:3},{value:"Leer los params desde el Componente",id:"leer-los-params-desde-el-componente",level:3},{value:"Par\xe1metros de b\xfasqueda (query)",id:"par\xe1metros-de-b\xfasqueda-query",level:3},{value:"Netlify + queryParams",id:"netlify--queryparams",level:3}],m={toc:c},u="wrapper";function d(e){let{components:a,...n}=e;return(0,t.yg)(u,(0,o.A)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"react-router-v6"},"React Router v6"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Los ejemplos pueden estar escritos en TypeScript.")),(0,t.yg)("h2",{id:"router-v6"},"Router v6"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main"},"Documentaci\xf3n")),(0,t.yg)("li",{parentName:"ul"},"React Router es una biblioteca de enrutamiento del lado del servidor y del cliente con todas las funciones para React."),(0,t.yg)("li",{parentName:"ul"},"El enrutamiento es el proceso de dirigir las solicitudes de los usuarios hacia diferentes partes de una aplicaci\xf3n, permitiendo que cada secci\xf3n tenga su propia URL y responda de manera independiente. En el contexto de aplicaciones web, como las desarrolladas con React, el enrutamiento permite que la interfaz muestre distintas p\xe1ginas o componentes seg\xfan la URL solicitada, sin necesidad de recargar toda la p\xe1gina."),(0,t.yg)("li",{parentName:"ul"},"React Router se ejecuta en cualquier lugar donde se ejecute React; en la web, en el servidor con node.js y en React Native."),(0,t.yg)("li",{parentName:"ul"},'React Router te permite manejar y mostrar diferentes secciones o "p\xe1ginas" sin recargar la p\xe1gina completa del navegador cada vez que el usuario navega de una secci\xf3n a otra en una aplicaci\xf3n de una sola p\xe1gina (SPA) por ejemplo al hacer clic en un enlace para navegar a una nueva "p\xe1gina" o secci\xf3n de la aplicaci\xf3n, solo se cambie el contenido espec\xedfico que necesita actualizarse, sin recargar la p\xe1gina completa desde el servidor.'),(0,t.yg)("li",{parentName:"ul"},'En una SPA, toda la aplicaci\xf3n (HTML, CSS y JavaScript) se carga una sola vez en el navegador y en una sola p\xe1gina (index.html). Luego, cuando el usuario quiere ver una secci\xf3n diferente de la aplicaci\xf3n, solo se actualiza el contenido necesario, manteniendo la estructura principal sin volver a cargar. React Router hace esto posible al controlar las "rutas" dentro de la aplicaci\xf3n, de modo que, al cambiar de secci\xf3n, se simula una navegaci\xf3n tradicional (como en una aplicaci\xf3n de varias p\xe1ginas), pero sin hacer una solicitud al servidor para cada cambio de p\xe1gina.'),(0,t.yg)("li",{parentName:"ul"},'Por ejemplo, si tienes una SPA con una ruta principal /, una ruta para "Acerca de" /about, y otra para "Contacto" /contact, React Router gestiona la visualizaci\xf3n de cada secci\xf3n sin que el navegador recargue la p\xe1gina completa.')),(0,t.yg)("h4",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ejecutamos los siguientes comandos:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-powershell"},"npx create-react-app router-tutorial\ncd router-tutorial\nnpm i npm install react-router-dom\nnpm start\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El paquete  ",(0,t.yg)("inlineCode",{parentName:"li"},"react-router-dom")," es una versi\xf3n de React Router adaptada para aplicaciones web que se ejecutan en el navegador (DOM significa Document Object Model). Proporciona herramientas y componentes  que permiten manejar el enrutamiento en aplicaciones web de React, facilitando la navegaci\xf3n entre URLs en aplicaciones de una sola p\xe1gina (SPA).")))),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Limpiamos la carpeta src dejando solo el index")),(0,t.yg)("h2",{id:"agregar-un-enrutador"},"Agregar un Enrutador"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En react, el enrutador act\xfaa como un sistema de navegaci\xf3n que mapea las URLs a componentes espec\xedficos de la aplicaci\xf3n, permitiendo que los usuarios accedan a diferentes vistas sin recargar la p\xe1gina completa. "),(0,t.yg)("li",{parentName:"ul"},"Un enrutador b\xe1sicamente especifica qu\xe9 componente debe renderizarse en cada URL. Esto significa que, seg\xfan la URL que el usuario visita, el enrutador selecciona y muestra el componente adecuado en la pantalla. En una SPA, este proceso permite navegar entre secciones de la aplicaci\xf3n sin recargar la p\xe1gina completa, manteniendo una experiencia de usuario r\xe1pida y continua."),(0,t.yg)("li",{parentName:"ul"},"As\xed, en React Router, al definir rutas como /home, /about, o /contact, est\xe1s indicando qu\xe9 componente (por ejemplo, HomePage, AboutPage, ContactPage) debe mostrarse para cada URL espec\xedfica."),(0,t.yg)("li",{parentName:"ul"},"Nosotros usaremos BrowserRouter como enrutador ya que simula un historial de todas las \u201cpaginas\u201d que visitamos. Adem\xe1s, te permiten usar cargadores, acciones, recuperadores y m\xe1s.")),(0,t.yg)("h4",{id:"1--creamos-los-componentes-correspondiente-a-cada-url"},"1- Creamos los componentes correspondiente a cada URL"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Creamos una carpeta llamada routes/Routes o Views/views dentro de src.")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Los archivos dentro de esta carpeta son componentes que se van a renderizar solo en una URL especifica."),(0,t.yg)("li",{parentName:"ul"},"Esta carpeta generalmente se llama pages, views o screens, pero depende de las preferencias del equipo o las convenciones del proyecto.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Creamos los componentes: ")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="src/routes/Blog.jsx"',title:'"src/routes/Blog.jsx"'},"\n\nconst Blog = () => {\n  return (\n    <div><h1>Blog</h1></div>\n  )\n}\n\nexport default Blog\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="src/routes/Contacto.jsx"',title:'"src/routes/Contacto.jsx"'},"\n\nconst Contacto = () => {\n  return (\n    <div><h1>Contacto</h1></div>\n  )\n}\n\nexport default Contacto\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="src/routes/Inicio.jsx"',title:'"src/routes/Inicio.jsx"'},"\n\nconst Inicio = () => {\n  return (\n    <div><h1>Inicio</h1></div>\n  )\n}\n\nexport default Inicio\n\n")),(0,t.yg)("h4",{id:"2--creamos-el-enrutador-principal"},"2- Creamos el enrutador principal"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para esto en el archivo  index o main:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="index.tsx"',title:'"index.tsx"'},"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom'\nimport Contacto from './routes/Contacto.js'\nimport Blog from './routes/Blog.js'\nimport Inicio from './routes/Inicio.js'\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Inicio/>\n  },\n  {\n    path: \"/blog\",\n    element: <Blog/>\n  },\n  {\n    path: \"/contacto\",\n    element: <Contacto/>,\n  },\n]);\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n  <RouterProvider router={router} />\n  </StrictMode>,\n)\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"RouterProvider: Es el componente que act\xfaa como el enrutador principal en tu aplicaci\xf3n React. Envuelve toda la aplicaci\xf3n y se encarga de gestionar la navegaci\xf3n. Su funci\xf3n principal es renderizar el componente correspondiente en funci\xf3n de la URL actual. Dependiendo de la ruta que el usuario est\xe9 visitando, RouterProvider decide qu\xe9 componente mostrar, permitiendo que la aplicaci\xf3n responda din\xe1micamente a los cambios en la URL sin recargar la p\xe1gina. Antes se usaba ","<","BrowserRouter>."),(0,t.yg)("li",{parentName:"ul"},"La prop router recibe un objeto conocido como \u201cobjeto de enrutador\u201d que es creado t\xedpicamente usando funciones como createBrowserRouter, createHashRouter o createMemoryRouter. Este objeto contiene toda la configuraci\xf3n necesaria para manejar la navegaci\xf3n en tu aplicaci\xf3n. "),(0,t.yg)("li",{parentName:"ul"},"Contenido del objeto enrutador:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Rutas: Define las diferentes rutas (URLs) de la aplicaci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Componentes: Especifica qu\xe9 componente se debe mostrar para cada ruta."),(0,t.yg)("li",{parentName:"ul"},"Funcionalidades Avanzadas: Dependiendo de c\xf3mo se crea el objeto de enrutador, puedes acceder a funcionalidades adicionales, como:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Simulaci\xf3n de Historial: Puedes simular un historial de navegaci\xf3n para pruebas o para manejar estados en aplicaciones m\xe1s complejas."),(0,t.yg)("li",{parentName:"ul"},"Carga de Datos: Algunas funciones permiten cargar datos antes de renderizar los componentes, lo que facilita el manejo de datos asincr\xf3nicos."),(0,t.yg)("li",{parentName:"ul"},"Etc..."))))),(0,t.yg)("li",{parentName:"ul"},"createBrowserRouter es una funci\xf3n proporcionada por React Router que se utiliza para crear un objeto de enrutador, una de las funcionalidades que te permite usar es la \u201csimulaci\xf3n de historial\u201d."),(0,t.yg)("li",{parentName:"ul"},"createBrowserRouter recibe un array de objetos RouteObject, donde cada uno representa una ruta de la aplicaci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Cada objeto RouteObject contiene:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"path:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Descripci\xf3n: Define una ruta. Podes usar comodines como "',(0,t.yg)("inlineCode",{parentName:"li"},"*"),'" para hacer hacer que coincida con una secuencia de cero o m\xe1s caracteres.'),(0,t.yg)("li",{parentName:"ul"},'Ejemplo: path: "/" para la p\xe1gina principal o path: "/about" para la secci\xf3n "Acerca de".'))),(0,t.yg)("li",{parentName:"ul"},"element:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Descripci\xf3n: Especifica qu\xe9 componente se debe renderizar cuando el usuario ingresa al path especificado"),(0,t.yg)("li",{parentName:"ul"},"Ejemplo: element: ","<","HomePage /> renderiza el componente HomePage cuando se visita la ruta /."))),(0,t.yg)("li",{parentName:"ul"},"loader (opcional):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Descripci\xf3n: Una funci\xf3n que se ejecuta antes de renderizar el componente. Se utiliza para cargar datos que se necesitan para ese componente."))),(0,t.yg)("li",{parentName:"ul"},"action (opcional):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Descripci\xf3n: Una funci\xf3n que maneja las solicitudes POST para esa ruta. Se utiliza en rutas que implican la modificaci\xf3n de datos."))),(0,t.yg)("li",{parentName:"ul"},"children (opcional):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Descripci\xf3n: Permite anidar rutas dentro de otra ruta. Se usa para crear subrutas."))),(0,t.yg)("li",{parentName:"ul"},"index (opcional):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Descripci\xf3n: \xedndica que comparte la ruta del padre. Por lo tanto el componente de ",(0,t.yg)("inlineCode",{parentName:"li"},"element")," solo se renderiza  cuando la url es igual al del componente padre(ruta del padre) y no hay ning\xfan RouteObject  que gestione  dicha ruta."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/route/route#type-declaration"},"Ver m\xe1s informaci\xf3n")," "))),(0,t.yg)("li",{parentName:"ul"},"Un RouteObject   puede omitir la propiedad path o index si su prop\xf3sito es simplemente agrupar rutas hijas (igual una de estas seguramente va a ser \u201cindex\u201d). Este tipo de ruta se utiliza para definir una estructura de rutas anidadas."),(0,t.yg)("li",{parentName:"ul"},"Este c\xf3digo, en resumen, establece que:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Al visitar /, se renderiza HomePage."),(0,t.yg)("li",{parentName:"ul"},"Al visitar /about, se renderiza AboutPage."),(0,t.yg)("li",{parentName:"ul"},"Al visitar /contact, se renderiza ContactPage."),(0,t.yg)("li",{parentName:"ul"},"As\xed, el enrutador principal (en este caso RouterProvider) se encarga de mostrar el componente correspondiente para cada URL sin necesidad de recargar la p\xe1gina completa. ")))))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El objeto de enrutador se define de manera est\xe1tica en el c\xf3digo, fuera de los componentes. Esto permite tener una configuraci\xf3n clara y organizada de las rutas."),(0,t.yg)("li",{parentName:"ul"},"Una vez creado, este objeto se pasa como prop al enrutador principal (por ejemplo, RouterProvider). Esto permite que la configuraci\xf3n del enrutador sea independiente de los componentes de la aplicaci\xf3n, lo que mejora la legibilidad y la mantenibilidad del c\xf3digo."),(0,t.yg)("li",{parentName:"ul"},"Ventajas de Esta Estructura:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Separaci\xf3n de Preocupaciones: La l\xf3gica de enrutamiento se separa de los componentes, facilitando la gesti\xf3n del enrutamiento y el componente de la interfaz de usuario."),(0,t.yg)("li",{parentName:"ul"},"Facilidad de Mantenimiento: Es m\xe1s f\xe1cil modificar o a\xf1adir rutas en un solo lugar sin tener que buscar dentro de los componentes."),(0,t.yg)("li",{parentName:"ul"},"Reusabilidad: El objeto de enrutador puede ser reutilizado en diferentes partes de la aplicaci\xf3n, o incluso en otras aplicaciones, si es necesario."),(0,t.yg)("li",{parentName:"ul"},"Configuraci\xf3n m\xe1s Limpia: Permite mantener una configuraci\xf3n de rutas clara y limpia, evitando la l\xf3gica de enrutamiento dispersa en varios componentes.")))),(0,t.yg)("h2",{id:"manejar-el-404"},"Manejar el 404"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Siempre es una buena idea saber c\xf3mo responde tu aplicaci\xf3n a los errores al principio del proyecto, ya que todos escribimos muchos m\xe1s errores que caracter\xedsticas cuando creamos una nueva aplicaci\xf3n. "),(0,t.yg)("li",{parentName:"ul"},"\xa1Si accedemos a una URL que no configuramos y no existe en nuestra aplicaci\xf3n, nos aparecer\xe1 una pantalla de error predeterminada en React Router que es un asco!"),(0,t.yg)("li",{parentName:"ul"},"Cada vez que tu aplicaci\xf3n genere un error durante la renderizaci\xf3n, la carga de datos o la realizaci\xf3n de mutaciones de datos, React Router lo detectar\xe1 y mostrar\xe1 una pantalla de error. Esto significa que React Router gestionara los errores por nosotros."),(0,t.yg)("li",{parentName:"ul"},"Para solucionar esto creamos nuestra propia p\xe1gina de error, que ser\xe1 igual de fea, pero servir\xe1 de ejemplo."),(0,t.yg)("li",{parentName:"ul"},"Creamos un componente que se renderizara cuando la aplicaci\xf3n genere un error:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src\\routes\\Error.tsx"',title:'"src\\routes\\Error.tsx"'},'import { useRouteError } from "react-router-dom";\n\nexport default function Error() {\n  const error  = useRouteError()  as {statusText : string , status : number}\n  console.error(error);\n\n  return (\n    <div id="error-page">\n      <h1>Custom Error!</h1>\n      <p>Sorry, an unexpected error has occurred.</p>\n      <p>\n        <i>{error.statusText }</i>\n      </p>\n    </div>\n  );\n}\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Con la funci\xf3n useRouteError() de react-router-dom accedemos a la informaci\xf3n de un error que puede ser gestionado por React Router. Esta funci\xf3n obtiene el error que fue lanzado en alguna de las URL o en alg\xfan componente asociado, de modo que puedas mostrar un mensaje de error personalizado al usuario."),(0,t.yg)("li",{parentName:"ul"},"Como hay muchos tipos de errores, es imposible predecir el tipo de dato que devuelve por lo tanto al tiparlo hay que tener cuidado. "),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo solo especifique las propiedades que use en el c\xf3digo con el as."),(0,t.yg)("li",{parentName:"ul"},"Por ahora, es suficiente saber que pr\xe1cticamente todos tus errores ser\xe1n manejados por esta p\xe1gina (componente) en lugar de spinners infinitos, p\xe1ginas que no responden o pantallas en blanco.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ahora tenemos que cambiar la configuraci\xf3n del enrutador:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/>\n  },\n  {\n    path: "/blog",\n    element: <Blog/>\n  },\n  {\n    path: "/contacto",\n    element: <Contacto/>,\n  },\n]);\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El objeto RouteObject tambi\xe9n contiene una propiedad llamada errorElement para especificar que componente mostrar si ocurre un error en el path indicado. "),(0,t.yg)("li",{parentName:"ul"},"La opci\xf3n errorElement se utiliza para manejar errores que ocurren en una ruta espec\xedfica o en cualquiera de sus rutas hijas."),(0,t.yg)("li",{parentName:"ul"},"Puedes definir un errorElement en una ruta para manejar errores en esa ruta espec\xedfica. Si el error ocurre en el componente que corresponde a la ruta padre o hija, React Router mostrar\xe1 este componente."),(0,t.yg)("li",{parentName:"ul"},"\xbfC\xf3mo busca React Router el errorElement?",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Error dentro de una ruta: Si ocurre un error en un componente que corresponde a una ruta (padre o hija), React Router primero verifica si esa ruta espec\xedfica tiene un errorElement. Si lo tiene, React Router lo renderiza."),(0,t.yg)("li",{parentName:"ul"},"Si no encuentra errorElement en la ruta actual, React Router busca hacia arriba en la jerarqu\xeda, es decir, en las rutas padre o abuelas. As\xed, si una ruta hija tiene un error, buscar\xe1 un errorElement en la ruta padre. Si no lo encuentra, buscar\xe1 en la ruta abuela, y as\xed sucesivamente."),(0,t.yg)("li",{parentName:"ul"},"Primer errorElement encontrado: React Router renderiza el primer errorElement que encuentra en esa jerarqu\xeda de rutas, y detiene la b\xfasqueda."))),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo, si se produce un error durante la carga del componente Inicio, o si se lanza un error dentro de \xe9l, se renderiza el componente Error en lugar del componente Inicio. Esto permite manejar errores de manera elegante y mantener una buena experiencia de usuario.")))),(0,t.yg)("h2",{id:"rutas-anidadas"},"Rutas anidadas"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Queremos que los componentes Blog y Contacto se rendericen adentro del componente Inicio."),(0,t.yg)("li",{parentName:"ul"},"En una aplicaci\xf3n web, es com\xfan que todos los componentes relacionados con una URL espec\xedfica se rendericen dentro de un componente principal que se suele llamar 'layout' porque contiene el estilo y estructura de toda la aplicaci\xf3n. Este componente principal act\xfaa como un contenedor y se encarga de mantener la estructura y el estilo de la aplicaci\xf3n en todas las p\xe1ginas."),(0,t.yg)("li",{parentName:"ul"},"Un RouteObject tiene una propiedad llamada children, que acepta un arreglo de RouteObject. Estos representan las rutas hijas, permitiendo anidar rutas dentro de otras y de esta forma se podr\xe1 renderizar componentes de rutas hijas dentro de componentes de rutas padre."),(0,t.yg)("li",{parentName:"ul"},"Entonces en el archivo main o index, solo modificamos esta parte:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>\n      },\n      {\n        path: "contacto",\n        element: <Contacto/>,\n      },\n    ]\n  }\n \n]);\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cuando las rutas tienen hijos, hace dos cosas:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Anida las URL: concatena/une el path de la ruta padre con el path de la ruta hija de esta manera: ",(0,t.yg)("inlineCode",{parentName:"li"},"path padre + path hijo"),", formando una URL completa (por ejemplo, /padre/hijo). "),(0,t.yg)("li",{parentName:"ul"},"Renderiza el componente de la ruta hija dentro del componente de la ruta padre: el componente padre funciona como un contenedor, mostrando el contenido de la ruta hija."))),(0,t.yg)("li",{parentName:"ul"},"En este ejemplo seria:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"\u201c/\u201d + \u201cblog\u201d = /blog --- El path /blog tendr\xeda que renderizar el componente de \u201c/\u201d y adentro de este renderizar el componente de \u201cblog\u201d"),(0,t.yg)("li",{parentName:"ul"},"\u201c/\u201d + \u201ccontacto\u201d = /contacto \u2013-- El path /contacto tendr\xeda que renderizar el componente de \u201c/\u201d y adentro de este renderizar el componente de \u201cblog\u201d"))),(0,t.yg)("li",{parentName:"ul"},'Como se puede observar, los componentes se anidan dentro de un layout principal para crear un dise\xf1o compartido. Este dise\xf1o compartido incluye los componentes de las rutas padre e hijas, de modo que el componente ra\xedz ("/") sirve como un contenedor que proporciona la estructura general (o layout) de la aplicaci\xf3n. Dentro de este layout, los componentes espec\xedficos de las rutas hijas, como "blog" y "contacto", se renderizan en el \xe1rea designada, manteniendo un estilo y estructura consistentes en toda la aplicaci\xf3n.')))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Si accedemos a "/contacto" o "/blog" sin especificar donde renderizar los componentes de las rutas hijas en el componente padre, solo se mostrar\xe1 el contenido de la ruta padre (componente Inicio). Esto se debe a que debemos indicar expl\xedcitamente al componente de la ruta padre d\xf3nde renderizar el contenido de las rutas hijas, y esto se logra usando el componente Outlet de React Router. El componente Outlet se encarga de renderizar el componente de la ruta hija dentro del componente padre.'),(0,t.yg)("li",{parentName:"ul"},"Entonces en el componente de Inicio, especificamos donde queremos renderizar los componentes que corresponden a la ruta hija.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Inicio.tsx"',title:'"Inicio.tsx"'},'import { Outlet } from "react-router-dom"\n\nconst Inicio = () => {\n  return (\n    <div>\n      <h1>Inicio</h1>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Inicio\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Ahora si accedemos a la URL ",(0,t.yg)("inlineCode",{parentName:"li"},"http://localhost:5173/Blog"),":",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Se renderiza el componente Inicio porque es el componente de la ruta padre ("/\u201d)'),(0,t.yg)("li",{parentName:"ul"},"Dentro del componente Inicio, se renderiza el componente de la ruta hija (en este caso el componente Blog) en donde se encuentra Outlet. "),(0,t.yg)("li",{parentName:"ul"},"Se anidaron: \u201c/blog\u201d y por lo tanto se renderizan ambos componentes, pero el hijo(Blog.jsx) lo hace en el padre(App.jsx)"),(0,t.yg)("li",{parentName:"ul"},"Entonces el componente Outlet en React Router es responsable de renderizar el componente de la ruta hija. Al utilizar Outlet, se permite que el contenido de las rutas hijas se muestre dentro del layout del componente padre, manteniendo la estructura y estilo de la aplicaci\xf3n.")))))),(0,t.yg)("h2",{id:"enrutamiento-del-lado-del-cliente"},"Enrutamiento del lado del cliente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Primero vamos a instalar e importar Bootstrap para poder usarlo en todo el proyecto."),(0,t.yg)("li",{parentName:"ul"},"Lo instalamos:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-powershell"},"npm i bootstrap\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Lo importamos en el componente principal o en el index/main.ts:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom'\nimport Contacto from './routes/Contacto.js'\nimport Blog from './routes/Blog.js'\nimport Inicio from './routes/Inicio.js'\nimport Error from './routes/Error.js'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: \"blog\",\n        element: <Blog/>\n      },\n      {\n        path: \"contacto\",\n        element: <Contacto/>,\n      },\n    ]\n  }\n \n]);\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n  <RouterProvider router={router} />\n  </StrictMode>,\n)\n\n\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Y en el componente principal (Inicio) ahora creamos dos Link para ir a las url que creamos:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { Outlet } from "react-router-dom"\n\nconst Inicio = () => {\n  return (\n    <div>\n      <h1>Inicio</h1>\n      <nav className="navbar navbar-dark ">\n         <div className="container">  \n          <a className="btn btn-outline-primary" href="/">Inicio</a>\n          <a className="btn btn-outline-primary" href="/contacto">Contacto</a>\n          <a className="btn btn-outline-primary" href="/blog">Blog</a></div>\n     </nav>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Inicio\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es posible que lo hayas notado o no, pero cuando hacemos clic en los enlaces, el navegador realiza una solicitud para ir a la siguiente URL en lugar de utilizar React Router."),(0,t.yg)("li",{parentName:"ul"},"El enrutamiento del lado del cliente permite que nuestra aplicaci\xf3n actualice la URL sin solicitar otro documento HTML al servidor. En cambio, la aplicaci\xf3n puede mostrar de inmediato una nueva interfaz de usuario. "),(0,t.yg)("li",{parentName:"ul"},"Para hacer esto posible tenemos que remplazar la etiqueta ",(0,t.yg)("inlineCode",{parentName:"li"},"<a>")," por el componente ",(0,t.yg)("inlineCode",{parentName:"li"},"<Link>")," de React Router y en lugar de usar el atributo(props) ",(0,t.yg)("inlineCode",{parentName:"li"},"href")," , usamos el atributo ",(0,t.yg)("inlineCode",{parentName:"li"},"to"),".")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'const Inicio = () => {\n  return (\n    <div>\n      <h1>Inicio</h1>\n      <nav className="navbar navbar-dark ">\n         <div className="container">  \n          <Link className="btn btn-outline-primary" to="/">Inicio</Link>\n          <Link className="btn btn-outline-primary" to="/contacto">Contacto</Link>\n          <Link className="btn btn-outline-primary" to="/blog">Blog</Link></div>\n     </nav>\n      <Outlet/>\n    </div>\n  )\n}\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Puedes abrir la pesta\xf1a de red (Network) en la DevTools del navegador para ver que ya no solicita documentos.")))),(0,t.yg)("h2",{id:"cargar-informaci\xf3n"},"Cargar informaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un RouteObject puede contener una funci\xf3n \u201cloader\u201d."),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n loader se ejecuta antes de que se renderice el componente que corresponde a la URL y su objetivo es proporcionar datos que el componente puede necesitar para renderizarse correctamente."),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n loader se ejecuta cada vez que se accede a una ruta. Por ejemplo, se ejecuta cuando el usuario navega a una ruta haciendo clic en un enlace, se realiza una redirecci\xf3n, se env\xeda un formulario con m\xe9todo GET, o se modifica la URL directamente en el navegador."),(0,t.yg)("li",{parentName:"ul"},"Aqu\xed hay algunos puntos clave sobre la funci\xf3n loader:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Carga de Datos: Permite realizar solicitudes a APIs, leer datos de un archivo, o cualquier operaci\xf3n as\xedncrona para obtener la informaci\xf3n necesaria. "),(0,t.yg)("li",{parentName:"ol"},"Async/Await: Normalmente, la funci\xf3n loader es as\xedncrona, lo que significa que puede usar async/await para manejar promesas de manera m\xe1s sencilla."),(0,t.yg)("li",{parentName:"ol"},"Acceso a Par\xe1metros: Puede acceder a los par\xe1metros(params) de la ruta, lo que permite personalizar la carga de datos seg\xfan la URL."),(0,t.yg)("li",{parentName:"ol"},"Error Handling: Se puede gestionar el manejo de errores dentro de la funci\xf3n loader, permitiendo redirigir al usuario o mostrar un mensaje de error si algo sale mal."),(0,t.yg)("li",{parentName:"ol"},"Integraci\xf3n con el Componente:  Lo que retorna la funci\xf3n loader puede ser usado por el componente que corresponde a la URL. Tambi\xe9n puede devolver un Response para generar un error y ",(0,t.yg)("a",{parentName:"li",href:"#manejar-el-404"},"gestionarlo desde React Router.")))),(0,t.yg)("li",{parentName:"ul"},"Se utiliza el Hook useLoaderData en el componente para acceder a los datos que retorna la funci\xf3n loader.")),(0,t.yg)("h4",{id:"ejemplo"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>\n      },\n      {\n        path: "contacto",\n        element: <Contacto/>, \n        loader() {\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        }\n      },\n    ]\n  }\n \n]);\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Le cargamos un array que tiene \u201ccontactos\u201d.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En el componente asociado (Contacto en este caso):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Contacto.tsx"',title:'"Contacto.tsx"'},'import { useLoaderData } from "react-router-dom"\n\ntype  Contact = { \n  nombre: string,\n  telefono: string,\n  correo: string\n} \n\nconst Contacto = () => {\n   \n\n \n   const contactos  = useLoaderData() as Contact[]\n\n  return (\n    <div>\n      <h1>Contacto</h1>\n        <ul>\n      {\n        contactos.map( (contacto) => {\n          return (\n             <li key={contacto.telefono}> {contacto.nombre}  </li>\n          )\n        })\n      }\n    </ul>\n    </div>\n  )\n}\n\nexport default Contacto\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Accedemos al array que retornamos en la funci\xf3n loader con el m\xe9todo (hook) useLoaderData()."),(0,t.yg)("li",{parentName:"ul"},"useLoaderData() devuelve el array de \u201ccontactos\u201d que retornamos en la funci\xf3n loader."),(0,t.yg)("li",{parentName:"ul"},'Cada vez que se ejecute "loader" el valor de useLoaderData() cambiara.')))),(0,t.yg)("h2",{id:"manejar-peticiones"},"Manejar peticiones"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Aunque algunos desarrolladores web no lo saben, los formularios HTML en realidad generan una navegaci\xf3n en el navegador, como hacer clic en un enlace. "),(0,t.yg)("li",{parentName:"ul"},"La \xfanica diferencia est\xe1 en la solicitud: los enlaces solo pueden cambiar la URL, mientras que los formularios tambi\xe9n pueden cambiar el m\xe9todo de solicitud (GET, POST, etc) y el cuerpo de la solicitud (body)."),(0,t.yg)("li",{parentName:"ul"},"Normalmente el navegador serializar\xe1(convertir\xe1) autom\xe1ticamente los datos del formulario en JSON y los enviar\xe1 al servidor en el cuerpo(body) de la solicitud para POST y como URLSearchParams(querys) para GET. React Router hace lo mismo, excepto que, en lugar de enviar la solicitud al servidor, utiliza el enrutamiento del lado del cliente y la env\xeda a una ruta action."),(0,t.yg)("li",{parentName:"ul"},"Si en el componente Contacto hacemos esto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'const Contacto = () => {\n   \n\n    \n\n\n  return (\n    <div  className="container mx-auto">\n      <h1>Contacto</h1>\n      <form method="post">\n      <div className="form-floating mb-3">\n  <input type="email" className="form-control" id="floatingName" placeholder="name@example.com"  name="name"/>\n  <label htmlFor="floatingName">Nombre</label>\n</div>\n<div className="form-floating  mb-3">\n  <input type="password" className="form-control" id="floatingPhone" placeholder="Password" name="password" />\n  <label htmlFor="floatingPhone">Telefono</label>\n</div>\n<div className="form-floating mb-3">\n  <input type="password" className="form-control" id="floatingEmail" placeholder="Password" name="email" />\n  <label htmlFor="floatingEmail">Correo</label>\n</div>\n\n<div className="form-floating text-center">\n<button type="submit" className="btn btn-primary mb-3 w-50 ">Crear</button>\n</div>\n          </form>\n   \n    </div>\n  )\n}\n\nexport default Contacto\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Al hacer clic  en el bot\xf3n "Crear" en nuestra aplicaci\xf3n. La aplicaci\xf3n deber\xeda fallar porque el servidor no est\xe1 configurado para manejar una solicitud POST (env\xeda un 404, aunque probablemente deber\xeda ser un 405 \ud83e\udd37).'),(0,t.yg)("li",{parentName:"ul"},"Podemos utilizar el enrutamiento del lado del cliente de React Router para manejar peticiones POST en el servidor."),(0,t.yg)("li",{parentName:"ul"},"Primero modifiquemos el formulario:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'const Contacto = () => {\n   \n\n    \n\n\n  return (\n    <div  className="container mx-auto">\n      <h1>Contacto</h1>\n      <form method="post">\n      <div className="form-floating mb-3">\n  <input type="email" className="form-control" id="floatingName" placeholder="name@example.com"  name="name"/>\n  <label htmlFor="floatingName">Nombre</label>\n</div>\n<div className="form-floating  mb-3">\n  <input type="password" className="form-control" id="floatingPhone" placeholder="Password" name="password" />\n  <label htmlFor="floatingPhone">Telefono</label>\n</div>\n<div className="form-floating mb-3">\n  <input type="password" className="form-control" id="floatingEmail" placeholder="Password" name="email" />\n  <label htmlFor="floatingEmail">Correo</label>\n</div>\n\n<div className="form-floating text-center">\n<button type="submit" className="btn btn-primary mb-3 w-50 ">Crear</button>\n</div>\n          </form>\n   \n    </div>\n  )\n}\n\nexport default Contacto\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para trabajar con el enrutamiento del lado del cliente con formularios HTML simple, debemos cambiar la etiqueta ","<","form> por el componente ","<","Form> de React Router. "),(0,t.yg)("li",{parentName:"ul"},"El componente ",(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/components/form"},(0,t.yg)("inlineCode",{parentName:"a"},"<Form>"))," es un contenedor para crear formularios en HTML. Permite realizar mutaciones de datos (peticiones POST, PUT, PATCH O DELETE). Es importante se\xf1alar que este componente no se encarga de validaciones, por lo que se sugiere usar las capacidades de validaci\xf3n de HTML que ya ofrece el navegador y complementar con validaciones en el backend."),(0,t.yg)("li",{parentName:"ul"},"Entonces en el componente:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { Form } from "react-router-dom"\n\n\n\n\n\nconst Contacto = () => {\n   \n\n    \n\n\n  return (\n    <div  className="container mx-auto">\n      <h1>Contacto</h1>\n      <Form method="post">\n      <div className="form-floating mb-3">\n  <input type="text" className="form-control" id="floatingName" placeholder="nombre"  name="name"/>\n  <label htmlFor="floatingName">Nombre</label>\n</div>\n<div className="form-floating  mb-3">\n  <input type="text" className="form-control" id="floatingPhone" placeholder="Telefono" name="phone" />\n  <label htmlFor="floatingPhone">Telefono</label>\n</div>\n<div className="form-floating mb-3">\n  <input type="text" className="form-control" id="floatingEmail" placeholder="E-mail" name="email" />\n  <label htmlFor="floatingEmail">Correo</label>\n</div>\n\n<div className="form-floating text-center">\n<button type="submit" className="btn btn-primary mb-3 w-50 ">Crear</button>\n</div>\n          </Form>\n   \n    </div>\n  )\n}\n\nexport default Contacto\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Un RouteObject puede contener una funci\xf3n \u201caction\u201d. "),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n action se ejecutar\xe1 cuando se hace una petici\xf3n POST, PUT, PATCH O DELETE a la URL (path). Recibe un objeto Request (similar al de Express.js) y puede devolver una respuesta personalizada o ejecutar una acci\xf3n antes de cargar el componente."),(0,t.yg)("li",{parentName:"ul"},"Es \xfatil para manejar interacciones antes de que el componente se renderice."),(0,t.yg)("li",{parentName:"ul"},"Aunque la funci\xf3n action devuelva una respuesta personalizada (como un c\xf3digo de estado 200), el componente asociado con la ruta siempre se renderizar\xe1 despu\xe9s de ejecutar la acci\xf3n. La funci\xf3n action se usa principalmente para manejar l\xf3gica del lado del servidor o realizar operaciones previas al renderizado, pero no detiene el proceso de carga del componente en la interfaz."),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n action en un RouteObject generalmente devuelve un objeto Response, que puede incluir un estado HTTP (por ejemplo, 200, 400, 500), encabezados y un cuerpo de respuesta. Esto permite personalizar la respuesta que recibir\xe1 el cliente, especialmente \xfatil en operaciones como crear, actualizar o eliminar datos. Sin embargo, independientemente de lo que devuelva la funci\xf3n action, el componente asociado con la ruta se renderizar\xe1 en la interfaz."),(0,t.yg)("li",{parentName:"ul"},"La respuesta devuelta por action es accesible en el componente a trav\xe9s de useActionData() en React Router, lo cual permite usar los datos devueltos (como un mensaje de \xe9xito o error) para ajustar el comportamiento del componente tras ejecutar la acci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Ahora configuramos un action en nuestra URL.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>\n      },\n      {\n        path: "contacto",\n        element: <Contacto/>, \n        loader() {\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        } ,\n        async action( { request }){\n          const formData = await request.formData();\n          for (const campo of formData.entries()) {\n            console.log(campo);\n        }\n          switch (request.method) {\n            case "PUT": \n   \n               console.log(\'Peticion PUT \' , formData)\n               return formData\n            case "DELETE": \n             console.log(\'Peticion DELETE \' , formData)\n             return formData\n            case "PATCH": \n             console.log(\'Peticion PATCH \' , formData)\n             return formData\n            case "POST": \n             console.log(\'Peticion POST \' , formData)\n            return formData\n            default: \n              throw new Response("", { status: 405 });\n            \n          }\n        }\n      },\n    ]\n  }\n \n]);\n\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Gestionamos todas las peticiones que puede recibir la path."),(0,t.yg)("li",{parentName:"ul"},"Lo puedes probar modificando la props \u201cmethods\u201d del componente ","<","Form> para los diferentes m\xe9todos."),(0,t.yg)("li",{parentName:"ul"},"Cuando env\xedas un formulario en una p\xe1gina web sin usar JavaScript (es decir, usando HTML puro), el navegador toma los datos del formulario y crea autom\xe1ticamente un objeto FormData. Este FormData contiene todos los datos de los campos del formulario y lo env\xeda como el cuerpo(body) de la solicitud al servidor (usualmente en una solicitud POST). El servidor recibe esta informaci\xf3n y puede procesarla."),(0,t.yg)("li",{parentName:"ul"},"Sin embargo, en React Router, la l\xf3gica de env\xedo del formulario se gestiona un poco diferente:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Intercepta el env\xedo del formulario: Cuando haces clic en el bot\xf3n de enviar, React Router previene el comportamiento por defecto del navegador que recarga la p\xe1gina y hace una petici\xf3n al servidor."),(0,t.yg)("li",{parentName:"ul"},'Crea autom\xe1ticamente un FormData: React Router toma todos los campos del formulario y crea un objeto FormData, que es una estructura de datos que contiene los valores de cada campo (por ejemplo, el valor de un campo name="firstName" se guarda como formData.get("firstName")).'),(0,t.yg)("li",{parentName:"ul"},"Env\xeda el FormData a la action de la ruta: En lugar de enviar los datos directamente al servidor, React Router llama a la funci\xf3n action asociada con la ruta actual y le pasa el FormData como una propiedad del objeto request de JavaScript. Esto permite manejar el env\xedo en el lado del cliente y realizar l\xf3gica personalizada sin realizar una solicitud al servidor.")))))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Hook  useLoaderData ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"<","Form> evita que el navegador env\xede la solicitud al servidor y la env\xeda a su ruta action en su lugar. "),(0,t.yg)("li",{parentName:"ul"},"Un POST suele significar que algunos datos est\xe1n cambiando. Por convenci\xf3n, React Router usa esto como referencia para actualizar autom\xe1ticamente los datos en la p\xe1gina despu\xe9s de que finaliza la acci\xf3n. \xa1Eso significa que la funci\xf3n \u201cloader\u201d se vuelve a ejecutar y se actualiza el hook useLoaderData para que la interfaz de usuario se mantenga sincronizada con tus datos autom\xe1ticamente! \xa1Muy bueno!"),(0,t.yg)("li",{parentName:"ul"},"Cuando un hook se actualiza, React solo cambia la parte espec\xedfica del DOM que depende de ese hook. Esto optimiza el rendimiento, ya que evita renderizados innecesarios en otras partes de la interfaz que no han cambiado, manteniendo la aplicaci\xf3n m\xe1s eficiente.")))),(0,t.yg)("h2",{id:"params"},"Params"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://flevatti.github.io/documentacion/docs/Node/#params"},"Concepto de params.")),(0,t.yg)("li",{parentName:"ul"},'En React Router, Los dos puntos (:) tienen un significado especial, son un \u201csegmento din\xe1mico". Los segmentos din\xe1micos coincidir\xe1n con valores din\xe1micos (cambiantes) en esa posici\xf3n de la URL, como un ID. A estos valores en la URL los llamamos "par\xe1metros de URL", o simplemente "params".'),(0,t.yg)("li",{parentName:"ul"},"Al igual que en express.js, en React Router, los par\xe1metros de ruta tambi\xe9n se definen con \u201c:\u201d seguido del nombre del par\xe1metro. Esto permite crear rutas din\xe1micas que capturan valores de la URL y los hace accesibles en el componente a trav\xe9s del hook useParams."),(0,t.yg)("li",{parentName:"ul"},"Los par\xe1metros de URL (params) est\xe1n disponibles tanto en el loader, como en el action, y tambi\xe9n en el componente."),(0,t.yg)("li",{parentName:"ul"},"Ejemplo con el componente Contacto:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>\n      },\n      {\n        path: "contacto/:nombre",\n        element: <Contacto/>, \n        loader({params}) {\n\n          console.log(\'Se ejecuto el loader\');\n          console.log(\'El objeto que puede recibir como parametro loader tiene una propiedad para obtener todos los params de la url\' , params)\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        } ,\n        async action( { request , params }){\n          const formData = await request.formData();\n          for (const campo of formData.entries()) {\n            console.log(campo);\n        }\n        console.log(\'El objeto que puede recibir como parametro action tiene una propiedad para obtener todos los params de la url\' , params)\n          switch (request.method) {\n            case "PUT": \n   \n               console.log(\'Peticion PUT \' , formData)\n               return formData\n            case "DELETE": \n             console.log(\'Peticion DELETE \' , formData)\n             return formData\n            case "PATCH": \n             console.log(\'Peticion PATCH \' , formData)\n             return formData\n            case "POST": \n             console.log(\'Peticion POST \' , formData)\n            return formData\n            default: \n              throw new Response("", { status: 405 });\n            \n          }\n        }\n      },\n    ]\n  }\n \n]);\n\n')),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Contacto.tsx"',title:'"Contacto.tsx"'},'import { Form, useLoaderData, useParams } from "react-router-dom"\n\n\ntype  Contact = { \n  nombre: string,\n  telefono: string,\n  correo: string\n} \n\n\n\nconst Contacto = () => {\n  const contactos  = useLoaderData() as Contact[]\n  const params = useParams();\n  console.log(\'Tengo acceso a los params de la URL desde el componente\' , params)\n\n\n  return (\n    <div  className="container mx-auto">\n      <h1>Contacto</h1>\n      <Form method="post">\n      <div className="form-floating mb-3">\n  <input type="text" className="form-control" id="floatingName" placeholder="nombre"  name="name"/>\n  <label htmlFor="floatingName">Nombre</label>\n</div>\n<div className="form-floating  mb-3">\n  <input type="text" className="form-control" id="floatingPhone" placeholder="Telefono" name="phone" />\n  <label htmlFor="floatingPhone">Telefono</label>\n</div>\n<div className="form-floating mb-3">\n  <input type="text" className="form-control" id="floatingEmail" placeholder="E-mail" name="email" />\n  <label htmlFor="floatingEmail">Correo</label>\n</div>\n\n<div className="form-floating text-center">\n<button type="submit" className="btn btn-primary mb-3 w-50 ">Crear</button>\n</div>\n          </Form>\n          <ul>\n      {\n        contactos.map( (contacto) => {\n          return (\n             <li key={contacto.telefono}> {contacto.nombre}  </li>\n          )\n        })\n      }\n    </ul>\n\n    </div>\n  )\n}\n\nexport default Contacto\n\n\n')),(0,t.yg)("h2",{id:"redirect"},"Redirect"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En react-router-dom, redirect es una funci\xf3n que permite redirigir al usuario a una ruta espec\xedfica dentro de la aplicaci\xf3n. Esto puede ser \xfatil en situaciones donde se necesita enviar al usuario a otra p\xe1gina, por ejemplo, despu\xe9s de realizar una acci\xf3n, cuando no tiene permiso para acceder a una ruta o cuando se debe cambiar a una vista predeterminada."),(0,t.yg)("li",{parentName:"ul"},"En react-router-dom v6, la redirecci\xf3n se realiza con la funci\xf3n redirect() en los loaders o actions de una ruta.  "),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n redirect() recibe como par\xe1metro principal una cadena de texto(String) que representa la URL o ruta a la que deseas redirigir al usuario. Esta cadena puede ser una ruta absoluta o relativa dentro de la aplicaci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Dentro de los componentes para realizar redireciones se usa useNavigate().")),(0,t.yg)("h4",{id:"ejemplo-1"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'import { StrictMode } from \'react\'\nimport { createRoot } from \'react-dom/client\'\nimport { createBrowserRouter, redirect, RouterProvider } from \'react-router-dom\'\nimport Contacto from \'./routes/Contacto.js\'\nimport Blog from \'./routes/Blog.js\'\nimport Inicio from \'./routes/Inicio.js\'\nimport Error from \'./routes/Error.js\'\nimport "bootstrap/dist/css/bootstrap.min.css"\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>,\n        loader() {\n          return redirect(\'/contacto\') // Redirige a la p\xe1gina de /contacto\n\n        }\n      },\n      {\n        path: "contacto",\n        element: <Contacto/>, \n        loader({params}) {\n\n          console.log(\'Se ejecuto el loader\');\n          console.log(\'El objeto que puede recibir como parametro loader tiene una propiedad para obtener todos los params de la url\' , params)\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        }\n ,\n        action() {\n          // Es lo mismo que return  redirect(\'/\') // Redirige a la p\xe1gina de inicio /\n         return new Response("", {\n            status: 302,\n            headers: {\n              Location: "/",\n            },\n          });\n        } ,\n      \n      },\n    ]\n  }\n \n]);\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/fetch/redirect#redirect"},"Podes redireccionar con \u201credirect\u201d o devolviendo un Response."))))),(0,t.yg)("h2",{id:"estilo-de-enlace-activo"},"Estilo de enlace activo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En react-router-dom, el componente ","<","NavLink> se usa para crear enlaces de navegaci\xf3n con estilos CSS que se aplican cuando el enlace coincide con la URL actual. Esto es \xfatil para resaltar visualmente el enlace de la p\xe1gina en la que se encuentra el usuario."),(0,t.yg)("li",{parentName:"ul"},"Sirve para:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Al crear un men\xfa de navegaci\xf3n, desea mostrar cu\xe1l de ellas est\xe1 seleccionada actualmente"),(0,t.yg)("li",{parentName:"ul"},"Proporciona un contexto \xfatil para tecnolog\xeda de asistencia como lectores de pantalla."),(0,t.yg)("li",{parentName:"ul"},"Tener un control m\xe1s preciso sobre transiciones de vista como slider."))),(0,t.yg)("li",{parentName:"ul"},"En Inicio.tsx:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { NavLink, NavLinkRenderProps , Outlet } from "react-router-dom"\n\nconst Inicio = () => {\n\n   const customClassNavLink = ({ isActive, isPending , isTransitioning } : NavLinkRenderProps) => \n      {\n       console.log(isActive , isPending , isTransitioning)\n       let ObjectclassName = "btn btn-outline-primary";\n       if (isActive) {\n         \n         ObjectclassName=  ObjectclassName +   " active"\n         console.log("Aver" , ObjectclassName);\n       } else {\n           ObjectclassName=  ObjectclassName +  " pending"\n       }\n       return ObjectclassName\n      }\n    \n  return (\n    <div>\n      <h1>Inicio</h1>\n      <nav className="navbar navbar-dark ">\n         <div className="container">  \n          <NavLink   className={customClassNavLink} to="/">Inicio</NavLink>\n          <NavLink className={customClassNavLink} to="/contacto">Contacto</NavLink>\n          <NavLink className={customClassNavLink} to="/blog">Blog</NavLink></div>\n     \n     </nav>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Inicio\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El atributo/props className funciona como un className normal o tambi\xe9n puedes pasarle una funci\xf3n para personalizar los estilos CSS que se van a aplicar seg\xfan el estado del enlace (activo o pendiente). En caso de no pasarle una funci\xf3n, NavLink tiene sus propias clases que aplica de forma predeterminada."),(0,t.yg)("li",{parentName:"ul"},"NavLink tiene muchas props interesantes, te recomiendo leer su ",(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/components/nav-link#children"},"documentaci\xf3n"),".")))),(0,t.yg)("h2",{id:"usenavigation"},"useNavigation"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Es un hook que te proporciona informaci\xf3n \xfatil sobre el estado actual de la navegaci\xf3n de la aplicaci\xf3n, por ejemplo, si hay cambios en los datos (POST), si se est\xe1 ejecutando un action, cual es el estado de la pagina actual (si el componente asociado esta renderizado o todavia no)."),(0,t.yg)("li",{parentName:"ul"},"El hook te ayuda a:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Mostrar indicadores de carga en toda la p\xe1gina, \xfatiles cuando se necesita avisar al usuario que se est\xe1 procesando algo."),(0,t.yg)("li",{parentName:"ul"},"Desactivar formularios mientras se completa una acci\xf3n de actualizaci\xf3n para evitar duplicados u otras inconsistencias."),(0,t.yg)("li",{parentName:"ul"},"Indicar que los botones de env\xedo est\xe1n ocupados mientras el servidor procesa la acci\xf3n, lo que mejora la experiencia del usuario."),(0,t.yg)("li",{parentName:"ul"},"Mostrar datos de forma optimista, es decir, asumir que la acci\xf3n en el servidor se completar\xe1 correctamente y actualizar el estado en la interfaz antes de que realmente finalice el proceso, lo que hace que la aplicaci\xf3n se sienta m\xe1s r\xe1pida.\nuseNavigation() te brinda un objeto con varias propiedades para obtener informaci\xf3n sobre el estado actual de la navegaci\xf3n. "),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/hooks/use-navigation"},"M\xe1s informaci\xf3n.")," ")))),(0,t.yg)("h4",{id:"ejemplo-2"},"Ejemplo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Esta vez usaremos el componente Blog")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Blog.jsx"',title:'"Blog.jsx"'},"import { useNavigation } from \"react-router-dom\";\n\nconst Blog = () => {\n  const navigation = useNavigation();\n  console.log(navigation);\n  console.log('Ver el estado de la navegacion' , navigation.state)\n  return (\n    <div><h1>Blog</h1></div>\n  )\n}\n\nexport default Blog\n\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Modifique el archivo main o index para poder acceder a Blog.")))),(0,t.yg)("h2",{id:"ruta-indice"},"Ruta Indice"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En React Router, las index routes son rutas que representan el contenido predeterminado que se muestra cuando un usuario visita una ruta sin especificar una subruta adicional. Se utilizan en rutas anidadas para mostrar un componente por defecto en el mismo nivel de una ruta padre."),(0,t.yg)("li",{parentName:"ul"},"En un RouteObject de React Router, la propiedad index cuando se establece en true, es para indicar que usara el mismo path que su RouteObject padre. El componente que contiene se renderizar\xe1 solo si la ruta coincide con el path del padre y no coincide con ninguna de las rutas hijas."),(0,t.yg)("li",{parentName:"ul"},"Esta configuraci\xf3n es \xfatil para asegurar que React Router renderice un contenido predeterminado cuando el usuario visita una ruta sin especificar una subruta adicional. Por ejemplo, si tienes una ruta padre /productos con varias rutas hijas, puedes definir una index route para mostrar un contenido inicial o lista de productos al visitar /productos directamente, sin navegar a una subruta como /productos/:id."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/start/tutorial#index-routes"},"M\xe1s informaci\xf3n.")),(0,t.yg)("li",{parentName:"ul"},"Conclusi\xf3n:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Se usa la opci\xf3n index en lugar de path. Eso es porque usara la ruta del del padre."),(0,t.yg)("li",{parentName:"ul"},"Las rutas de \xedndices coinciden cuando coincide con la ruta principal(padre), pero no coincide con ninguna de las otras secundarias(hermanos)."),(0,t.yg)("li",{parentName:"ul"},"Las rutas de \xedndice son la ruta predeterminada para una ruta principal."),(0,t.yg)("li",{parentName:"ul"},"Se renderiza cuando el path es igual al del componente padre (ruta del padre) y no hay ning\xfan path configurado para dicha ruta.")))),(0,t.yg)("h4",{id:"ejemplo-3"},"Ejemplo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Creamos un componente llamado Indice:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/routes/Indice.tsx"',title:'"src/routes/Indice.tsx"'},'export default function Indice() {\n\n  return (\n    <div id="error-page">\n        <h1>Contenido predeterminado de la ruta padre</h1>\n    </div>\n  );\n}\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En el archivo main o index:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'import { StrictMode } from \'react\'\nimport { createRoot } from \'react-dom/client\'\nimport { createBrowserRouter, RouterProvider } from \'react-router-dom\'\nimport Contacto from \'./routes/Contacto.js\'\nimport Blog from \'./routes/Blog.js\'\nimport Inicio from \'./routes/Inicio.js\'\nimport Error from \'./routes/Error.js\'\nimport "bootstrap/dist/css/bootstrap.min.css"\nimport Indice from \'./routes/Indice.js\'\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>,\n      },\n      { index: true ,\n        element: <Indice/>\n      } ,\n\n      {\n        path: "contacto",\n        element: <Contacto/>, \n        loader({params}) {\n\n          console.log(\'Se ejecuto el loader\');\n          console.log(\'El objeto que puede recibir como parametro loader tiene una propiedad para obtener todos los params de la url\' , params)\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        }\n ,\n        action() {\n          // Es lo mismo que return  redirect(\'/\') // Redirige a la p\xe1gina de inicio /\n         return new Response("", {\n            status: 302,\n            headers: {\n              Location: "/",\n            },\n          });\n        } ,\n      \n      },\n    ]\n  }\n \n]);\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El componente Indice solo se renderizar\xe1 en el ","<","Outlet> cuando la URL coincida con el path del padre y no exista alguna otra ruta para renderizar en ","<","Outlet>."),(0,t.yg)("li",{parentName:"ul"},"Esto es \xfatil para evitar \u201cpantallas en blancos\u201d y llenarlo de contenido como paneles, estad\xedsticas, feeds , etc.")))),(0,t.yg)("h2",{id:"usenavigate"},"UseNavigate"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"useNavigate() es un hook de React Router que permite redireccionar o ir a diferentes rutas dentro de la aplicaci\xf3n. En lugar de depender de enlaces (","<","Link>), useNavigate() se usa para realizar la navegaci\xf3n dentro de funciones de JavaScript, como al responder a eventos, manejar redirecciones condicionales o gestionar rutas en base a ciertas acciones."),(0,t.yg)("li",{parentName:"ul"},"Al invocar useNavigate(), obtienes una funci\xf3n navigate que puedes llamar para cambiar de ruta (y por lo tanto renderizar otro componente en ","<","Outlet>). navigate acepta una ruta (path) como argumento y, opcionalmente como segundo parametro, un objeto de configuraci\xf3n para personalizar el comportamiento de navegaci\xf3n."),(0,t.yg)("li",{parentName:"ul"},"Tambi\xe9n puedes pasarle un solo par\xe1metro (un numero) para cambiar de ruta en base al historial. Por ejemplo, si le pasas -1 equivale a pulsar el bot\xf3n Atr\xe1s y renderizar\xeda el componente de la URL anterior del historial.")),(0,t.yg)("h4",{id:"ejemplo-4"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Inicio.tsx"',title:'"Inicio.tsx"'},'import { NavLink, NavLinkRenderProps , Outlet, useNavigate } from "react-router-dom"\n\nconst Inicio = () => {\n\n   const customClassNavLink = ({ isActive, isPending , isTransitioning } : NavLinkRenderProps) => \n      {\n       console.log(isActive , isPending , isTransitioning)\n       let ObjectclassName = "btn btn-outline-primary";\n       if (isActive) {\n         \n         ObjectclassName=  ObjectclassName +   " active"\n         console.log("Aver" , ObjectclassName);\n       } else {\n           ObjectclassName=  ObjectclassName +  " pending"\n       }\n       return ObjectclassName\n      }\n    const navigate = useNavigate();\n  return (\n    <div>\n      <h1>Inicio</h1>\n      <nav className="navbar navbar-dark ">\n         <div className="container">  \n          <NavLink   className={customClassNavLink} to="/">Inicio</NavLink>\n          <NavLink className={customClassNavLink} to="/contacto">Contacto</NavLink>\n          <NavLink className={customClassNavLink} to="/blog">Blog</NavLink></div>\n          <button type="button" onClick={\n            () => {\n              navigate(-1)\n            }\n          } className="btn btn-outline-primary">Atras</button>  \n     </nav>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Inicio\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"A\xf1adimos un bot\xf3n que al hacer click, te env\xeda hacia la url anterior."),(0,t.yg)("li",{parentName:"ul"},"\xbfPor qu\xe9 no hay ning\xfan event.preventDefault en el bot\xf3n?",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Con el atributo type="button" , aunque parezca redundante, es la forma HTML de evitar que un bot\xf3n env\xede su formulario.')))))),(0,t.yg)("h2",{id:"query"},"Query"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Por defecto, los formularios con ","<","form> env\xedan los datos a trav\xe9s de la URL en forma de query y con el m\xe9todo GET."),(0,t.yg)("li",{parentName:"ul"},"Los datos est\xe1n ubicados despu\xe9s del signo de interrogaci\xf3n (\u201c?\u201d)")),(0,t.yg)("h4",{id:"ejemplo-5"},"Ejemplo"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Blog.tsx"',title:'"Blog.tsx"'},'const Blog = () => {\n\n  return (\n    <div><h1>Blog</h1>\n         <form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search"/>\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n \n</div>\n</form>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Los formularios por defecto tienen el m\xe9todo GET y el action es la URL actual."),(0,t.yg)("li",{parentName:"ul"},"El valor del input cuyo name es \u201csearch\u201d se env\xeda por la query. Quedando la url: http://localhost:5173/blog?search=valorDelInput")))),(0,t.yg)("h4",{id:"enrutamiento-del-lado-del-cliente-1"},"Enrutamiento del lado del cliente."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para acceder a la informaci\xf3n que esta ubicada en la URL (query) hacemos lo siguiente:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Cambiamos ","<","form> a ","<","Form>"))),(0,t.yg)("li",{parentName:"ul"},"En Blog.tsx:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { Form } from "react-router-dom"\n\nconst Blog = () => {\n\n  return (\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search"/>\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n \n</div>\n</Form>\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En el archivo main o index, modificamos el RouteObject que renderiza este componente:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="main.tsx"',title:'"main.tsx"'},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>, \n        loader({request}) {\n          console.log(request);\n          const url = new URL(request.url);\n          const q = url.searchParams.get("search");\n          return q\n        }\n      },\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"En el loader obtenemos el valor de la query search y lo retornamos para que el componente lo pueda usar.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En el componente del Blog, accedemos al loader para renderizar  el valor de la query \u201csearch\u201d:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { Form, useLoaderData } from "react-router-dom"\n\nconst Blog = () => {\n    const data = useLoaderData()\n  return (\n\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search"/>\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n   \n</div>\n</Form>\n   <p>\n     {data as string || "No hay valor"}\n   </p>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cuando se trata de un GET, React Router no llama a action. Enviar un formulario GET es lo mismo que hacer clic en un enlace: solo cambia la URL. Por eso, el c\xf3digo que agregamos para filtrar est\xe1 en el loader, no en el action de esta ruta."),(0,t.yg)("li",{parentName:"ul"},"La funci\xf3n loader se ejecuta cada vez que s\xe9 que cambia la URL. Esto la convierte en el lugar ideal para manipular las query.")))),(0,t.yg)("h4",{id:"sincronizaci\xf3n-con-la-url"},"Sincronizaci\xf3n con la URL"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En el paso anterior hay dos problemas:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"Si hace clic en el bot\xf3n atr\xe1s despu\xe9s de una b\xfasqueda, el campo de formulario a\xfan tendr\xe1 el ultimo valor ingresado."),(0,t.yg)("li",{parentName:"ol"},"Si actualiza la p\xe1gina despu\xe9s de realizar una b\xfasqueda, el campo de formulario ya no tiene el valor.")),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"En otras palabras, la URL y el estado de nuestro formulario no est\xe1n sincronizados."))),(0,t.yg)("li",{parentName:"ul"},"Para solucionar esto, configuramos un valor por defecto en el input:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Blog.tsx"',title:'"Blog.tsx"'},'import { Form, useLoaderData } from "react-router-dom"\n\nconst Blog = () => {\n    const data = useLoaderData()\n  return (\n\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search" defaultValue={data as string}  />\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n   \n</div>\n</Form>\n   <p>\n     {data as string || "No hay valor"}\n   </p>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Usamos lo que recibimos del loader que es el valor de la query search para asignarle un valor por defecto al input."),(0,t.yg)("li",{parentName:"ul"},"Esto resuelve el problema (2). Si actualiza la p\xe1gina ahora, el input mostrara el valor que est\xe1 en la URL actual.")))),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Para solucionar el problema (1), podemos usar useEffect:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Blog.tsx"',title:'"Blog.tsx"'},'import { useEffect, useState } from "react"\nimport { Form, useLoaderData } from "react-router-dom"\n\nconst Blog = () => {\n    const data = useLoaderData()\n    const [query , setQuery] = useState(data);\n   \n\n    useEffect(() => {\n      setQuery(data);\n  } , [data])\n\n  \n  return (\n\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search" value={query as string} onChange={(e)=> {\n      setQuery(e.target.value);\n    }}  />\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n   \n</div>\n</Form>\n   <p>\n     {data as string || "No hay valor"}\n   </p>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Usamos un componente controlado y un useEffect para controlar el valor del input cada vez que cambia el valor de la query."),(0,t.yg)("li",{parentName:"ul"},"Si quieres sacarle complejidad al c\xf3digo, en lugar de un componente controlado con useEffect podr\xedas acceder al input con un document.getElement\u2026  y modificar el value en lugar de usar un useState(), quedando algo as\xed:")),(0,t.yg)("pre",{parentName:"div"},(0,t.yg)("code",{parentName:"pre",className:"language-js"},'  useEffect(() => {\n    document.getElementById("selectorID").value = data;\n  }, [data]);\n\n')),(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Y el input quedar\xeda como antes (a\xf1adi\xe9ndole la ID o como lo quieras seleccionar):")),(0,t.yg)("pre",{parentName:"div"},(0,t.yg)("code",{parentName:"pre",className:"language-js"},'    <input type="text" id="inputPassword6" className="form-control"  name="search" defaultValue={data as string}  />\n')))),(0,t.yg)("h2",{id:"usesubmit"},"useSubmit"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El hook useSubmit() permite crear una funci\xf3n para enviar formularios o datos sin necesidad de un formulario HTML visible."),(0,t.yg)("li",{parentName:"ul"},"Funciona de manera similar a un env\xedo de formulario tradicional, pero permite controlar cu\xe1ndo y c\xf3mo se env\xedan los datos, y es especialmente \xfatil para realizar acciones como actualizaciones o eliminaciones de datos desde botones u otros eventos sin un formulario expl\xedcito."),(0,t.yg)("li",{parentName:"ul"},"useSubmit() devuelve una funci\xf3n submit() que recibe dos par\xe1metros opcionales:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Data (opcional): los datos que quieres enviar en el body o en la query. Puede ser:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'Un objeto de datos (ej. { key: "value" }).'),(0,t.yg)("li",{parentName:"ul"},"Un objeto FormData, \xfatil para trabajar con archivos o formularios completos."),(0,t.yg)("li",{parentName:"ul"},"Un elemento de formulario (HTMLFormElement), en cuyo caso useSubmit() recoger\xe1 autom\xe1ticamente los datos del formulario."))),(0,t.yg)("li",{parentName:"ul"},"Options (opcional): un objeto de configuraci\xf3n que permite especificar:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'method: el m\xe9todo HTTP de la solicitud ("post", "put", "delete", etc.). Por defecto, es "get".'),(0,t.yg)("li",{parentName:"ul"},"action: la URL o ruta a la cual se enviar\xe1n los datos. Si no se especifica, se usar\xe1 la ruta actual."),(0,t.yg)("li",{parentName:"ul"},'encType: el tipo de codificaci\xf3n de datos (ej. "multipart/form-data" para archivos).'))))),(0,t.yg)("li",{parentName:"ul"},'Si llamas a submit() sin ning\xfan par\xe1metro, simplemente recargar\xe1 la p\xe1gina actual usando el m\xe9todo GET. Es decir, cuando no pasas ning\xfan par\xe1metro, submit() act\xfaa como un "submit" b\xe1sico de formulario, sin enviar datos adicionales ni redirigir a otra ruta. Por lo tanto, aunque los par\xe1metros son opcionales, generalmente se incluye al menos uno para hacer que la llamada a submit() sea \xfatil en la mayor\xeda de los casos.'),(0,t.yg)("li",{parentName:"ul"},"Ahora como ejemplo \xfasemelos en el componente Blog con el input:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="Blog.tsx"',title:'"Blog.tsx"'},'\nimport { Form, useLoaderData, useSubmit } from "react-router-dom"\n\nconst Blog = () => {\n    const data = useLoaderData()\n    const submit = useSubmit();\n\n \n  \n  return (\n\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="inputPassword6" className="form-control"  name="search" defaultValue={data as string} onChange={(e)=> {\n        submit(e.target.form);\n    }}  />\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n   \n</div>\n</Form>\n   <p>\n     {data as string || "No hay valor"}\n   </p>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Cada vez que cambia el valor del input, se env\xeda el formulario. Que por defecto es get y a la misma ruta.")))),(0,t.yg)("h2",{id:"administrar-la-pila-de-historial"},"Administrar la pila de historial"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ahora que el formulario se env\xeda con cada pulsaci\xf3n de tecla, si escribimos varios caracteres y luego los borramos con la tecla de retroceso, terminaremos con  varias entradas en la pila de historial. "),(0,t.yg)("li",{parentName:"ul"},"Puedes chequear la pila de historial manteniendo presionado el bot\xf3n \u201catr\xe1s\u201d del navegador."),(0,t.yg)("li",{parentName:"ul"},"Podemos evitar esto reemplazando la URL \u201canterior\u201d con la \u201cnueva\u201d , para esto usamos la opcion replace en el objeto de configuraci\xf3n de submit()."),(0,t.yg)("li",{parentName:"ul"},"En Blog.tsx:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useEffect } from "react";\nimport { Form, useLoaderData, useSubmit } from "react-router-dom"\n\nconst Blog = () => {\n    const submit = useSubmit();\n    const data = useLoaderData()\n\n     useEffect(() => {\n        (document.getElementById("searchInput")  as HTMLInputElement).value = data as string\n     } , [data])\n\n  \n  return (\n\n    <div><h1>Blog</h1>\n         <Form className="w-50">\n    <div className="row g-3 align-items-center">\n \n  <div className="col-auto">\n    <input type="text" id="searchInput" className="form-control"   name="search" defaultValue={data as string}  onChange={(e)=> {\n        const firstSearch = data == null;\n        submit(e.target.form , {\n          replace : !firstSearch\n        });\n    }}  />\n  </div>\n  <div className="col-auto">\n  <button className="btn btn-dark" type="submit">Buscar</button>\n  </div>\n   \n</div>\n</Form>\n   <p>\n     {data as string || "No hay valor"}\n   </p>\n    </div>\n    \n  )\n}\n\nexport default Blog\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Toda esta l\xf3gica es para probar la opcion replace de submit() , pero todo este c\xf3digo se puede reducir a un componente controlado."),(0,t.yg)("li",{parentName:"ul"},"La opcion replace del objeto de configuraci\xf3n de submit() tiene un valor booleano:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},'replace: true \u2013 Cuando se usa replace: true en submit(), React Router no a\xf1ade una nueva entrada en el historial de navegaci\xf3n al enviar el formulario. En su lugar, reemplaza la p\xe1gina actual con la nueva p\xe1gina a la que se redirige (el action del form). Como resultado, si el usuario intenta usar el bot\xf3n "Atr\xe1s" del navegador, no podr\xe1 volver a la p\xe1gina anterior, ya que esta ha sido reemplazada en el historial.'),(0,t.yg)("li",{parentName:"ul"},'replace: false (o no configurado) \u2013 Si replace est\xe1 en false o simplemente no se incluye, React Router a\xf1ade una nueva entrada en el historial de navegaci\xf3n cuando se env\xeda el formulario. Esto significa que el usuario podr\xe1 volver a la p\xe1gina anterior usando el bot\xf3n "Atr\xe1s" del navegador, ya que ambas p\xe1ginas (la anterior y la nueva) estar\xe1n en el historial.'))),(0,t.yg)("li",{parentName:"ul"},"Solo queremos resetear los resultados de la b\xfasqueda al hacer click \u201catr\xe1s\u201d, no ir la p\xe1gina anterior, por lo que realizamos una verificaci\xf3n r\xe1pida si esta es la primera b\xfasqueda o no y luego decidimos reemplazarla."),(0,t.yg)("li",{parentName:"ul"},"Cada pulsaci\xf3n de tecla ya no crea nuevas entradas, por lo que el usuario puede hacer clic para salir de los resultados de b\xfasqueda sin tener que hacer clic muchas veces \ud83d\ude05.")))),(0,t.yg)("h2",{id:"mutaciones-sin-navegaci\xf3n"},"Mutaciones sin navegaci\xf3n"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Hasta ahora, todas nuestras mutaciones (las veces que cambiamos los datos) han utilizado formularios que permiten navegar y crear nuevas entradas en el historial. Si bien estos flujos de usuario son comunes, es igualmente com\xfan querer cambiar los datos sin generar una nueva entrada en el historial (navegaci\xf3n)."),(0,t.yg)("li",{parentName:"ul"},"Para estos casos contamos con el hook  useFetcher, que nos permite comunicarnos con los loaders y las acciones(actions) sin generar una nueva entrada en el historial (navegaci\xf3n)."),(0,t.yg)("li",{parentName:"ul"},"El hook useFetcher() sirve para realizar acciones que se har\xedan con formularios o cargar datos sin cambiar la ruta actual. Es especialmente \xfatil cuando necesitas hacer solicitudes as\xedncronas, como enviar formularios o actualizar datos, sin redirigir o refrescar la p\xe1gina."),(0,t.yg)("li",{parentName:"ul"},"useFetcher() devuelve un ",(0,t.yg)("a",{parentName:"li",href:"https://reactrouter.com/en/main/hooks/use-fetcher"},"objeto con varias funcionalidades o propiedades:"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Propiedad Form: Es un componente similar a ","<","Form>, la \xfanica diferencia es que no cambia la URL."),(0,t.yg)("li",{parentName:"ul"},"M\xe9todo submit : Es similar a useSubmit() solo que no cambia la URL actual ni redirige al usuario a una nueva p\xe1gina despu\xe9s de enviar el formulario."),(0,t.yg)("li",{parentName:"ul"},"M\xe9todo load :  Permite ejecutar el loader de una ruta espec\xedfica sin que el usuario navegue a esa ruta."),(0,t.yg)("li",{parentName:"ul"},"Propiedad data: Los datos devueltos por un loader o action se almacenan aqu\xed."),(0,t.yg)("li",{parentName:"ul"},"Propiedad State: Contiene el estado del fetcher que puede ser:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Inactivo : El fetcher esta inactivo."),(0,t.yg)("li",{parentName:"ul"},"Submitting : Se est\xe1 ejecutando alg\xfan m\xe9todo action."),(0,t.yg)("li",{parentName:"ul"},"Loading: Se est\xe1 ejecutando alg\xfan m\xe9todo loader."))),(0,t.yg)("li",{parentName:"ul"},"Etc.")))),(0,t.yg)("h4",{id:"ejemplo-6"},"Ejemplo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Blog.tsx")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useEffect } from "react";\nimport { useFetcher } from "react-router-dom";\n\nconst Blog = () => {\n    const fetcher = useFetcher();\n   \n    useEffect(() => {\n        // Establece el valor inicial del input desde los datos cargados inicialmente\n   (     document.getElementById("searchInput") as HTMLInputElement ).value = fetcher.data as string || "";\n    }, [fetcher.data]);\n\n    return (\n        <div>\n            <h1>Blog</h1>\n            <fetcher.Form className="w-50">\n                <div className="row g-3 align-items-center">\n                    <div className="col-auto">\n                        <input\n                            type="text"\n                            id="searchInput"\n                            className="form-control"\n                            name="search"\n                            onChange={(e) => {\n                                fetcher.submit(e.target.form, { method: "GET" });\n                            }}\n                        />\n                    </div>\n                    <div className="col-auto">\n                        <button className="btn btn-dark" type="submit">\n                            Buscar\n                        </button>\n                    </div>\n                </div>\n            </fetcher.Form>\n\n            <div>\n                <h2>Resultados:</h2>\n                <p>{fetcher.data ? fetcher.data : "No hay resultados a\xfan"}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Blog;\n\n\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observaci\xf3n ")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Use useFetcher() para realizar la b\xfasqueda con querys pero sin cambiar la URL.")))),(0,t.yg)("h2",{id:"rutas-jsx"},"Rutas jsx"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"En lugar de configurar las rutas con un array de RouteObject, podes usar la funci\xf3n createRoutesFromElements y adentro usar el componente ","<","Route> que act\xfaa como un RouteObject en la configuraci\xf3n de rutas."),(0,t.yg)("li",{parentName:"ul"},"Todas las propiedades de un RouteObject se convierten en props."),(0,t.yg)("li",{parentName:"ul"},"Esto significa que, en lugar de construir un array manualmente con objetos para cada ruta, puedes escribir las rutas directamente como componentes JSX (","<","Route>) y luego createRoutesFromElements los convierte en el array de RouteObject correspondientes."),(0,t.yg)("li",{parentName:"ul"},"Para definir rutas hijas(children) usando createRoutesFromElements, simplemente puedes anidar componentes ","<","Route> dentro de otro ","<","Route>. Cada ","<","Route> dentro de un componente ","<","Route> padre se convierte en una ruta hija (children).")),(0,t.yg)("h4",{id:"ejemplo-7"},"Ejemplo"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"El normal se ver\xeda as\xed:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <Inicio/>,\n    errorElement : <Error/> ,\n    children : [\n      {\n        path: "blog",\n        element: <Blog/>, \n        loader({request}) {\n          const url = new URL(request.url);\n          const q = url.searchParams.get("search");\n          return q\n        }\n      },\n      { index: true , element: <Indice/>} ,\n\n      {\n        path: "contacto",\n        element: <Contacto/>, \n        loader({params}) {\n\n          console.log(\'Se ejecuto el loader\');\n          console.log(\'El objeto que puede recibir como parametro loader tiene una propiedad para obtener todos los params de la url\' , params)\n            return   [\n              {\n                  nombre: "Juan P\xe9rez",\n                  telefono: "555-1234",\n                  correo: "juan.perez@example.com"\n              },\n              {\n                  nombre: "Mar\xeda L\xf3pez",\n                  telefono: "555-5678",\n                  correo: "maria.lopez@example.com"\n              },\n              {\n                  nombre: "Carlos Garc\xeda",\n                  telefono: "555-8765",\n                  correo: "carlos.garcia@example.com"\n              },\n              {\n                  nombre: "Ana Mart\xednez",\n                  telefono: "555-4321",\n                  correo: "ana.martinez@example.com"\n              }\n          ];\n          \n        }\n ,\n        action() {\n          // Es lo mismo que return  redirect(\'/\') // Redirige a la p\xe1gina de inicio /\n         return new Response("", {\n            status: 302,\n            headers: {\n              Location: "/",\n            },\n          });\n        } ,\n      \n      },\n    ]\n  }\n \n]);\n\n\n')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Con la funci\xf3n createRoutesFromElements seria:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},'import { StrictMode } from \'react\'\nimport { createRoot } from \'react-dom/client\'\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \'react-router-dom\'\nimport "bootstrap/dist/css/bootstrap.min.css"\nimport Inicio from \'./routes/Inicio\';\nimport Error from \'./routes/Error\';\nimport Blog from \'./routes/Blog\';\nimport Indice from \'./routes/Indice\';\nimport Contacto from \'./routes/Contacto\';\n\nconst router = createBrowserRouter(createRoutesFromElements(\n  <Route path="/" element={<Inicio />} errorElement={<Error />}>\n  <Route path="blog" element={<Blog />} loader={({ request }) => {\n    const url = new URL(request.url);\n    const q = url.searchParams.get("search");\n    return q;\n  }} />\n  \n  {/* Ruta index como hijo predeterminado de "/" */}\n  <Route index element={<Indice />} />\n\n  <Route path="contacto" element={<Contacto />} \n    loader={({ params }) => {\n      console.log(\'Se ejecut\xf3 el loader\');\n      console.log(\'El objeto que puede recibir como par\xe1metro loader tiene una propiedad para obtener todos los params de la URL\', params);\n      return [\n        { nombre: "Juan P\xe9rez", telefono: "555-1234", correo: "juan.perez@example.com" },\n        { nombre: "Mar\xeda L\xf3pez", telefono: "555-5678", correo: "maria.lopez@example.com" },\n        { nombre: "Carlos Garc\xeda", telefono: "555-8765", correo: "carlos.garcia@example.com" },\n        { nombre: "Ana Mart\xednez", telefono: "555-4321", correo: "ana.martinez@example.com" }\n      ];\n    }}\n    action={() => {\n      // Redirige a la p\xe1gina de inicio "/"\n      return new Response("", {\n        status: 302,\n        headers: {\n          Location: "/",\n        },\n      });\n    }}\n  />\n</Route>\n));\n\n\n')),(0,t.yg)("h2",{id:"hooks-de-parametros-ejemplo"},"Hooks de Parametros (Ejemplo)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Este es un ejemplo independiente de lo de arriba, aunque puede copiar y pegar lo utilizado anteriormente."),(0,t.yg)("li",{parentName:"ul"},"\xa1Si\xe9ntase libre de modificar lo que quieras!"),(0,t.yg)("li",{parentName:"ul"},"Recursos:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://dev.to/shaedrizwan/building-custom-hooks-in-react-to-fetch-data-4ig6"},"Building custom hooks in React to fetch Data")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://dev.to/nicomartin/the-right-way-to-fetch-data-with-react-hooks-48gc"},"The correct way to fetch data with react hooks")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/react-fetch-hook"},"Npm react-fetch-hook")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://jsonplaceholder.typicode.com/"},"Api a utilizar")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://jsonplaceholder.typicode.com/posts"},"Ruta de la api a consumir"))))),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Hooks")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Los hooks devuelven variables de Estado (useState) y suelen tener m\xednimo un par\xe1metro que lo hace dinamico."),(0,t.yg)("li",{parentName:"ul"},"Sirven para poder reutilizar la logica.")))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="src/hooks/useFetch.js"',title:'"src/hooks/useFetch.js"'},"import React, { useEffect, useState } from 'react'\n\nexport const useFetch = (url) => {\n    const [data , setData] = useState([]);\n    const [error , setError] = useState('');\n    const [loading , setLoading] = useState(false);\n    useEffect(() => {\n         setLoading(true);\n         fetch(url)\n         .then(res => res.json())\n         .then(data => setData(data))\n         .catch(e => setError('Error de servidor'))\n         .finally(() => setLoading(false));\n    } , [url])\n  return {data, error , loading}\n}\n\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/Blog.jsx"',title:'"routes/Blog.jsx"'},"import React from 'react'\nimport { useFetch } from '../hooks/useFetch'\n\nconst Blog = () => {\n  const { data, error, loading } = useFetch('https://jsonplaceholder.typicode.com/posts/');\n\n  if (loading) {\n    return <h2>Loading...</h2>\n  }\n  if (error !== '') {\n    return <h2>{error}</h2>\n  }\n  return (\n    <div>\n      <h1>Blog</h1>\n      {\n        data.map(item => (\n          <h4 key={item.id}>{item.id} - {item.title}</h4>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Blog\n\n")),(0,t.yg)("h3",{id:"ruta-din\xe1mica-params"},"Ruta din\xe1mica (params)"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Blog.jsx"',title:'"Blog.jsx"'},"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useFetch } from '../hooks/useFetch'\n\nconst Blog = () => {\n  const { data, error, loading } = useFetch('https://jsonplaceholder.typicode.com/posts/');\n\n  if (loading) {\n    return <h2>Loading...</h2>\n  }\n  if (error !== '') {\n    return <h2>{error}</h2>\n  }\n  return (\n    <div>\n      <h1>Blog</h1>\n      {\n        data.map(item => (\n          <h4 key={item.id}>\n            <Link to={`/blog/${item.id}`}> {item.id} - {item.title}</Link>\n          </h4>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Blog\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Por cada ruta (est\xe1tica o din\xe1mica), se debe crear una vista/componente")))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="src/routes/Post.jsx"',title:'"src/routes/Post.jsx"'},"import React from 'react'\n\nconst Post = () => {\n  return (\n    <div>\n        <h1>POST id: aqui el id dinamico</h1>\n    </div>\n  )\n}\n\nexport default Post\n\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"La ruta deberia estar configurada as\xed:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index"',title:'"index"'}," <Routes>\n     \n        <Route path='/' element={<App />}> \n        <Route index element={<Inicio/>}/>\n        <Route path='blog' element={<Blog />}/>\n        <Route path='blog/:id' element={<Post />}/>\n        <Route path='contacto' element={<Contacto />}/>\n         <Route path='*' element={<NoEncontrada/>}/>\n        </Route>\n     </Routes>\n\n")),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"URL con variable")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"El path contiene una variable que se asigna con los dos puntos(\u201c:\u201d) y el nombre"),(0,t.yg)("li",{parentName:"ul"},"path='blog/:nombrevariable'"),(0,t.yg)("li",{parentName:"ul"},"Entonces si accedemos a http://localhost:3000/blog/1, el valor de nombrevariable seria 1."),(0,t.yg)("li",{parentName:"ul"},"Utilizamos la variable para leer un dato de la url."),(0,t.yg)("li",{parentName:"ul"},"Esas variables son conocidas como par\xe1metros")))),(0,t.yg)("h3",{id:"leer-los-params-desde-el-componente"},"Leer los params desde el Componente"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"A trav\xe9s de useParams() que devuelve un objeto con las variables(parametros)  de la url y sus valores correspondiente.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Post.jsx"',title:'"Post.jsx"'},"import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetch } from '../hooks/useFetch'\nconst Post = () => {\n    //Leemos la variable mandada por la url \n    // params es un objeto que contiene las variables mandada por la url con sus valores correspondiente\n    const params = useParams()\n    const { data, error, loading } = useFetch(`https://jsonplaceholder.typicode.com/posts/${params.id}`);\n    if (loading) {\n        return <h2>Loading...</h2>\n      }\n      if (error !== '') {\n        return <h2>{error}</h2>\n      }\n  return (\n    <div>\n        <h1>{data.id} - {data.title}</h1>\n        <p>{data.body}</p>\n    </div>\n  )\n}\n\nexport default Post\n\n")),(0,t.yg)("h3",{id:"par\xe1metros-de-b\xfasqueda-query"},"Par\xe1metros de b\xfasqueda (query)"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"React Router hace que sea f\xe1cil  leer y manipular los par\xe1metros de b\xfasqueda (query) con useSearchParams"),(0,t.yg)("li",{parentName:"ul"},"Las parametros de busquedas(query) son los datos que se suelen enviar por la url con el metodo GET . Ej. http://localhost:3000/blog?variable=valor. "),(0,t.yg)("li",{parentName:"ul"},"Con useSearchParams podemos manipular los parametros de busquedas(query)."),(0,t.yg)("li",{parentName:"ul"},"Funciona de manera muy similar a React.useState() pero almacena y establece el estado en los par\xe1metros de  la URL(query) (establece el estado en la url) en lugar de en la memoria.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'\n    let [searchParams , setSearchParams] = useSearchParams()\n\n    useEffect(() => {\n       // http://localhost:3000/blog?juanito=juan\n       // Leemos la variable(par\xe1metro) juanito \n        console.log(searchParams.get("juanito"));\n    } , [searchParams])\n\n')),(0,t.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,t.yg)("div",{parentName:"div",className:"admonition-heading"},(0,t.yg)("h5",{parentName:"div"},(0,t.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,t.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,t.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Observacion")),(0,t.yg)("div",{parentName:"div",className:"admonition-content"},(0,t.yg)("ul",{parentName:"div"},(0,t.yg)("li",{parentName:"ul"},"Es como useState pero maneja variables de estado en la URL ( a traves de los parametros)."),(0,t.yg)("li",{parentName:"ul"},"Con el m\xe9todo get obtenes los valores de los  parametros de la URL."),(0,t.yg)("li",{parentName:"ul"},"Con el m\xe9todo set modificas los parametros de la URL.")))),(0,t.yg)("p",null,"Blog.jsx"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useFetch } from '../hooks/useFetch'\n\nconst Blog = () => {\n\n  let [searchParams , setSearchParams] = useSearchParams();\n\n const handleChangue = e => {\n     let filter = e.target.value;\n     if (filter) {\n      setSearchParams({filter})\n     } else {\n      setSearchParams({});\n     }\n }\n\n  \n  const { data, error, loading } = useFetch('https://jsonplaceholder.typicode.com/posts/');\n\n  if (loading) {\n    return <h2>Loading...</h2>\n  }\n  if (error !== '') {\n    return <h2>{error}</h2>\n  }\n  return (\n    <div>\n      <h1>Blog</h1>\n       {/* Si existe el parametro filter , toma ese valor en el value , en caso contrario es un String vacio */}\n      <input type=\"text\" className=\"form-control mb-\" placeholder=\"\" value={searchParams.get('filter') || ''}\n      onChange={handleChangue}/>\n      {\n        data.filter(item => {\n          let filter = searchParams.get('filter');\n          if (!filter) return true\n\n          let title = item.title.toLowerCase();\n          // Si empieza con lo que introduce el usuario en el input\n          return title.startsWith(filter)\n\n        }).map(item => (\n          <h4 key={item.id}>\n            <Link to={`/blog/${item.id}`}> {item.id} - {item.title}</Link>\n          </h4>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Blog\n\n")),(0,t.yg)("h3",{id:"netlify--queryparams"},"Netlify + queryParams"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://stackoverflow.com/questions/56468161/netlify-does-not-recognize-the-url-params-when-using-react-router-dom"},"Netlify does not recognize the URL params when using react-router-dom")),(0,t.yg)("li",{parentName:"ul"},"Pasos:")),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Crear archivo _redirects en public con:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-powershell"},"/* /index.html 200\n")),(0,t.yg)("ol",{start:2},(0,t.yg)("li",{parentName:"ol"},"Ejecuta ",(0,t.yg)("inlineCode",{parentName:"li"},"npm run build")," para compilar la APP"),(0,t.yg)("li",{parentName:"ol"},"Subir lo que genero el comando ",(0,t.yg)("inlineCode",{parentName:"li"},"build"),"  a Netlify.")))}d.isMDXComponent=!0}}]);